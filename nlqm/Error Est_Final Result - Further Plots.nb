(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    968167,      19127]
NotebookOptionsPosition[    950019,      18833]
NotebookOutlinePosition[    950439,      18849]
CellTagsIndexPosition[    950396,      18846]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"0.00375`", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"]}], 
           SuperscriptBox["A", "2"]], "-", 
          RowBox[{"0.005`", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
          FractionBox[
           RowBox[{"0.00125`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], 
           SuperscriptBox["A", "2"]], "-", 
          RowBox[{"0.00375`", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}], "2"]}]}], ")"}]}], 
       ",", "\"\<Error Plot\>\""}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CurlyPhi]", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"A", ",", "\[CurlyPhi]", ",", "d\[CurlyPhi]"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"10f3ff0a-cb99-4d27-80b2-d08299838beb"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
/iogPXf83Pc9VNP/h0mO8yY2LSAHls0eFuKi6X/Hym69pznmk5Tq5GNTQ03/
dyulbzGvqC9dnCwl/+1lQcqfsByXmp1J7IZu6TvhlZ5q1y25+9sHlozH1zE6
mf8nmXzxs7uyIsGStN23PLMg7h3xOv3kV58j+iqnqk2tmyyTyIkrOzMKOmaR
J6EXlo+10FLdmB1TLq75WOJao+HI1HHZJPhe77JPjhTINhufv95Z3oqMnrvw
2YZ5H0mnWhedvT7ny1tzzbca/TRl/aQeudJnoN8X+UVu4y9fmmj6eWQVa9zg
dI7s7mg3YqGhFek6IkLPIiWbjH7QrG16Uo4cPqui+Y/hZqx/G4OpJ8ZY5cpN
LgdW2HHClMnfvtuKd6rOibLJJdt2tg4Scb/Uor2rXRap+2RGakTth/Kjw01r
eHccKbYnaC/ISRTkJJBTkIdAHkFvkoLeCPSG9+0+MlO78vwCkj1E5Zrlbibq
k0CfwnhJGC+8b/jXw2vDGhhIkV43G3drr9kP+lthSqvmNfRU+Q79Roy5OZQc
OeXibb8ik1y/V2/d9ddaqvi6PdbIXgNF+5QV7FNWsE9ZtM9Gj/4xs9D/Ikf9
2Xbn6v0eTJ4WpTz8R7R7Qf6udev687ZGntpOSZ03rf1MApe/W9LdfaDoj0TB
H4mCPxLRH4NOPln7yENLemBg+nPn3xLyyJBH0JsEvQl6VkHPgvwy5E/0G7bO
ODSTaB3Za2J947P8farq0eqU4SREt45NatvC+dyYM1++6D2XS52zu1cn0Eq0
WwK7FcZLwnih/wFhvUqNjNCSFqVt+7Ttjab/WjPjk81760l/Bu3LSPGzErkK
fM68f7zsp70jp1d5+gzZrqVKcw474VVrEOPdWz98M6nDF7nDgsW2fmUGkaSr
q+SgM+/J3RqOs1L3nJLHHhh26sbs/uJ7EbyX0A9BP8JzJTwX/dstsT97I9xQ
stNaeNFpVn8x7qkQ95C/Rr4P0RlXoK9ac7fK+umTB4j6UUE/QjyUEQ/RT3CT
MWdrVY+T627TijwxZ4D4vgTvK8R5gjgv9EPQj2APBPYgxG0JcVt4LwnvJdiz
CvYs+B2B373buWxC6rEM0npB/Tvbx2ur9Fa6ZQ6o24fxuZtPD7zd+BM5eKn3
zvEV+hCzNNOj9g3fkyojWgZOjTNQVWyerb+jQQfGO5dNbLO/9G1SfWNl3fF9
O7B5hE3HtS99HAtkzI8xL/jZyNXrz8N82XZ0d89IUyvWvlO26/CRITlEbL8/
f+2evMW5JL9imM3BNlbEwOvQcuNd78ngNyPWbPtQIDe4m9phboP+xH/v0yGp
DT+SMh2aPpqhXyCPeTf47puVpmL/TB7006+HHLDAOkf+Z3LbsNHl+pP6cjUT
1ykfyGU3p/l3dHLlmT/KlvLb14EI8siQB891+Phu/N6eubKHWeSzakamROif
oH+hPUF7QW9ElJO+L8H7Qs60ndtC2/UuIDsCvnw4/1EjJ9UzgZ4F/RDoB/M7
51/6L3JvFsilXZw7j3tuKeYjGflIeK6M56JO27H3Sc/SowvkShmdzEtrW7F5
n9+o+l+n5OXL+7NfX127ZIxobzLsDfMLs/U7b/Y4/FG2O7Pj0d+Xo5icOk0N
R+psy5HvxG8d1D1FM7/T3W2Wk/0pR27c68LZ5N+W7LnPYr/02Dc4V5b7/3FI
mT9GtFsZdou6urbrpCbmJ6LlQ0O7eiYFjhA5ARfkIZBHqFsI6hbBrgjsSpCf
KMhPIL/gvxL8F3rrdvlkC7s12lLj8HFX/7wZJY4vwfgK40UUxotgvIQ4ICEO
QD++vnFjIh0NpLav+l3IuTRC5CpwQU4V5BTGnWDcF5ftqwoa8558P75/SG2S
I1etazS9az0rxmN7mS+er6MlmdjYLmnVuARXiZz2Q9BPFb3Ishbjsoiu7BCc
RbRUYQ96rK95Yzjj247ryY0ivpBfg+w6j7o0XDwXpMK5IGFdQoV1CWGdh2Cd
x79mL2fzSkEl1jOTO+/2qxF5pcTvkrAPYjsmy/JMgC7jUT1DZ/G/3wHfnVEm
ZeLzcyX2EW58rGLyTyEX9xE29FX3o/Q7glcLmr4cGPiS8ajc9lo1C+UUz9Ub
11G/l7gfIbQvcc6T9k8U5CEK8hOF9yUK+ilxzo3qU1LQP+PCeDGuZXdpQVE/
PstWTOP1fzIlrYnv9guk/uWXPS/UyWf6uRj4tn/FgrPk4KYnl5rYadaZz3f6
cGv3yMukxspqp+36f2R85kJ1/7/nSY94PVgvHba0qP+M6T+1LUy+Mr5mhGnL
ov5rGtxZHf9Ys548NLDl1qL+LRuee+XpotGDvOqybaRBIBnXYtJX3YOa/QL/
gVYXorZfIdW7BZrGRGvscMmv0WNipSvkd7OsIDMbDRf6VynIIyvIz3if1ynb
i/qfWNFuQpNeaYw/UZXNLpLHvU/5qOWhKYzHlve3L5L/ZNy7wxG9/JQ4UeiH
KDyXKIwLURhHojDuREFvkoKelcaFcaczrW55BFwscb7rq93KkEn7z5Y4NzXy
tZaxZ2F78fyJ0J4o2Lnq/9dOlOKYkv0oxTcl/1KKe0p2qKQ3JT9Vip9K9qyk
fyV/V4rDSn6hFB/+17it5F9K8fx/9Tul+P+/+qNSvlDyU6U8ohQ/lfKLkr8r
+ZFSHFbKU0pxQ8kfleK5Ur5Tij9K8f9/zY9KcUwxbyrEN6V8qhT3yq1eUE5b
63KJeDK8U9klWloqxrtYSVeyzj8n+8+lTdbSimJ82JzrDXSuJpAFwvneWfQ8
1YJi5wP1VC2Dlj8/YxlDqsaG1dPSSmTtgx/srdnqUiTjaL/XfvvAhEu3yVWn
1lW1tJ6w9tftYgeU/RnGONp3smjU9bBJKJnQb39pLa2nrP2yVyYBUimZFPz7
95xxG3ruHe3Rz8OWj3K67r/B2oO70t8LxD/r9Lug4CXrx/ZL/uKn5oGMo33V
m9dsn133IydvzPleUPCatb/4uqD88dkajvZW7Z7/7dr8HFl+yONLQUE6a+8S
9HiOQ4SGo73qtPvGhvu8ySC6nob2Zke7mtaOPUnqjDHMLCjQ/H6/k+fbuJ/b
DrPxRZxf6hr2LFo/hY0v+K7vp93MWjxk4whef/CoH24NNOMFnrEpP9HuUCgb
F3Aj3wZGcz1uMD2Dl8m/6HgwK5DpGTyf/j4F+gQfaGOY/vLUWaY38I2RGXsX
P/Vm+qlpeGhsy3xt1eIHej+HOuxgdo68c+PTvqkeIW+YHsDbfvvQ3v9CItMD
+J2xHZyDKtxlegB3D4noMrBiONMD+IfH3R/9/niT6QG8R5mTJr22BDM9gL/Q
/lzf/ngA0wP7/Tj9PRT0AH5w+j678FcXmR7AJ9+cWP+5icZOwAftb5nZXe80
sxPw0waNknuN9BHiwDfZZWRdD14/4P0+pM/h9QO+/XbVGF4/7PfX39pP4vUD
bnq8nfYfTj/gkoFnd14/4OdPNK7N64e1p7/LK+533+TVBvdr8voB/x5Z0SfN
RPSjb/KaW7WG8voBn0Hq1irST3E7yZZDLOSBdzl/AX/4rEYi7y/gx+asGenO
+Qt4Vr0l1e05fwFfNsRqA+8v4LZPykTx/gI+n/5Os7idZMvZR9L/8P4CvubB
r2m8v4Q2uK7dd0+2bOm0ybpCCX/R1C3F9fBUlvd4/uHzAvvdd5NVw/m8AH72
9bEWZ7n4D27z2suBj/PgEx5K8/l4Dn6i3+yx3bj4DN6d/m63uB6eyhWCQ+7x
cRh88qHc5G7NRX95Kh+dnXC0UWFchR7Eugt6AO+Y2iZx3u8XTA/gMfNuVfnc
NYnpATwgtWKDjefuMz2AN4hX50HoAfzjfHW+gx7AA98Wz2vgR+jvvqEH8MRv
6jwFPYCvzFTnI+gBfHWoOu/AL1g/Z9T5RbATomAnRMFOiIKdEAU7IQp2QhTs
hCjYCVGwE6JgJ0TBTgjsRIgPRCE+EIX4QBTiA1GID0QhPhCF+EAU4gNRiA9E
IT4QMT6gDlfIF0QhXxCFfEEU8gVRyBdEIV8QhXxBFPIFUcgXRCFfEIV8QZAv
hHqDKNQbRKHeIAr1BlGoN4hCvUEU6g2iUG8QhXqDKNQbRKHeIAr1BkG9IdSf
kkL9KSnUn5JC/Skp1J+SQv0pKdSfkkL9KSnUn5JC/SmJ9ac4jxPmWZLCPEsS
51ng4nwKXJw3gYvzI3CF+Y4kznfAxXkNuDh/Acc8BXoQ56fQA/ir5OL5FLz8
6XIWa7YnivNHCfNHYZ4oYZ4ozAclhfmghPmgML+TML8T5nES5nHCfE3CfE2Y
l0mYl0EP94/pB974W3LejfP836rqDumyMI3pYdKtm+cdXuurbhkPfT03K4Hp
4XPa0pPDog1UAV45nVLz7zA9dKXn03qemvS32w6NHjYVtDpa45KhqtfeZ1+/
7L/F9OBE55Xuwrg/hJwV9Ju3bu7P9FCbynk5aZDJqqzzTA9TqZyejT/nbXHS
+Pujc3qWa5N1VEHvI/qMfpfM3quB+cvYKUNLqTyq+qd/rBrH5P+RvaR3BR9d
lcnpkPJ+C1VMfmndiJs5NfVUU2fOvvzz53Um/0A6H9R5Udx/99Rt+ejALB2V
afrrOdNenWPyP6HyTHFYn7BT34fJ/0UuderQ6FKq5X96BDTr7MbG66DpkY8Z
Hn/l1l2ssicHp7P3wvnD2VVPJU7ZqYnn15aUTls1t0DWMrAKWindY+8VRM//
m1039o4018Slgl+L0+5v1FZ53Eh51vSHJi6Vp/M1LyE+H6XyLMjsqTodrYnP
bag8S3UWD/X9fYa91y0qz6APM4b4TjjB3kttb9/l09nrm42YoMlTp+i5/U5/
MxdZxMWz91Lb1U/56Erb7ydXRTE7tLl8q2KEwS/Zo2NeGp+P3tNzic9GGBXL
R2u/tC4Yk/Bb/nopow6fj3YqzO/qUDktz6XV5/PROSpn28a7bvD52pzK6eas
tY7PR7F0PXnC6kf2fD5qSs8Vj7JuYd3E+xF7X/V4fZE7fT3lP2xjDIvDA+n5
5LgjSTXfe0QwPajtKkfedfhuimqIzPQwh56PDRlXP+bFG40efv1r519l0xsP
7z531+ihCp2v2Qn1W/t/x/ej/MrO8dAflSYfmVD5ezYaV/tcmZNMD9ep/F0v
Opmq4o+wcVev278oMb8b8O97vZRvxE/TDWv5lOnB9l/5X8t7V32oo58Qx/Sw
nZ63t6uT32e4dTTTg3pcMuTR29ZVb5WlWa9T6/+drP977FPzSjeZHj79aydZ
coO0x5WTHYOYHurSeZmZULe3pvKP8v+06Vh9TT4aTuXf69BrbqO/p5keFlL5
34Rstb1DDgt12vkSeihHz40fnjCw4uJ/NHnZ+d/3vS2P3XLxs0dPTT5SPzdO
jknaYNlkiiYOu9LfMRnuqHhu3gFN/n38rx6S5Q/xm8s46YQI87iEkEPCPM6J
yrnN9o2862EAe9/RVM6jg6ZV1na8zN7Xn8q5tf+C/o3iTgv5N7nEfG0r/V1Y
2+Oz1/F5p4/6vUj+XCPteVzeWaLun5x/7m/B551HldXnnKXA/NLdubyz419+
nswdV1E7h8s73yqr51PmwvhepXJOHPB4PZ93llA5ayW3TeDzTjsqp+ubHqEO
XN65o7Y3Utpjjxefd3zU9kn6Om5t/InLO0RtP8R15S3C5536ansj2b2OlM/j
8k5+ZfW8abHgpy/U9kxmntrgwuedW1QeizeX4vm8M55UjNjaOYOY1l9wuS6X
d76r4wNJHf6yyxQu78yk59hVz4bUn8rlnUR1/CEjy4+psYrLO43p78Xy8hI/
8HmnsTqekFeqCTWacXlnE+7REuJwDpVnq1nrNXzemUrl6bTC/6MPl3ceUnmC
wzrN9uHyzkp1/CfmDmt1+LyTQX+3FTnn0wQ+71ir8wtxKVs6i887ndRxnmzq
v+gnn3dO0PPqHqGNevB5p4o6j5CD30zq8XmnlMI8aCmVUyU7zOLzzmsqZ7MZ
z/X5eZAllbN9VJ+rfN4JpftQfjEztvB5B7/7+HX0WJ4Rl3fsUm681TuiJbX7
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
61X3K3OfVKN2BZ5Az8GiTgD3FepJcFdaT76g3y9D3IY8afQ7jOCP6Pcrbel3
FcHrCN+pBMc5kCn0fWE/6P+w0cn0Bam+Jfg2qgfwLUu6dNtbqAfzgIHjnwbd
ZPzJ5JCrWnsekR5UP+C7PL3XF+nHhI4L8ojB8Nc97xeOyzAab8HL0Xhbjo4X
eNCZ8y+Kxiud2o+4rmJI85HI71G7Ag+/Ve5zkV09o3YFPkvX+WyRXaEeA4+i
+ciXPlfMdxG0f/C7tP+LwjpGDl3HSKbPRfs59LmxwjrGHLqOATtH+7IDO4xJ
KbRzI6pP5IVyVJ+GVG/gwVRvEh13cV68gY4v+A46vl3oOIK70HGEnYOb0fOf
sHPwysL6IfhTun6YSu0c8RnyPKV2Dp5C7XwmtXPwetTOF9P3QpxBP67UnkW+
k74veEvq112oPYPfDr81pciee1I9gKdSf3ej+ZfFSXpetAUdF+SL+TT+lKXj
Al6fxp9P1K7E+ZEBtWeRY/4octg5+HYaP9OovYGraPwMpHYOnkLnHZiXIa4u
E+Zl4JiXoT3iqpkwbwUP6B2t33KpZt7K9k1mTXiotTmCzRMRDw8lj5/S0VCz
ngDuJ6wngMcHbpt5016zngCeZClv6tdC851NxEPxO5vg4nc2Wd0ufGdTjJPw
U8SNetRP0V5pHRh+vV1YBwa3oevAaA+/riWsk4NHvhm3gNczuLnOpLranJ7h
j5fu3Pfl9czqPWH/AnxW3RZXeD2DXxwbepnXM/z0jaBn8N6CnsFFPYv+Cz3D
brfSvI/vfop5PF0hn4KL41j8e6OadWxwMX6mK8QxcFF+1M/wo4iviVs/1XJj
HOPecuzuDrmF/MMvr+P2qZnMrlZ31Xnf+t1S1h68k9Ceras4VGu6OHMpeUzb
g9+jzz3o0HN86g6NPHtmWJ/uvcKR6NRM/Ff/ot7QHs+Nq1ez9+rC9uCQ35ny
6Ul//u1H1A/aQx6ZPtd0eea/7UX9P1MYF9iJKGfx71cGm5vR71caCOvYHe6r
17HF9u1pe/Qvyq807waHHbr9ynvnVmNMifn4NTof0RPmL7OEfmBvSyOGLHMt
7GeaMK/BvD6xepy5q3E6i6uG/Ycu69nhGFuXAz9E1+X+L/nZ757C1M9Vkj+J
Phd1Ws7th3+Kngt5EH9+Ug552Po/3S/T/z/0AD+a8rO4PsX5HeRBntWlenAN
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
eb4fvJfYD8b3hIdu86J+/h82RcZD
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[
          TagBox[
           TagBox[{
             Polygon3DBox[CompressedData["
1:eJw1mgXY3VTWhW/uTXJxKFDcWlwGKYVSKDIMUNy1uFtxd3docXcoXrS0FClF
28GLOwzu7lPgf99Z+Z/nO99eOdk5yU3O2bL26bXDPhvu3W61Wt92Wi3+Wk/z
717kSshjuq3Wechxdau1O/ho8P3gY8FvgT8FXwB+FPw2+HjwJeB/gw9i0JkZ
52DkXvRPXbZaP9G/G/godEaDdwYfCh4JHou8Ev2FkA/TrgAviNwBnVeRn6Cz
C/gw8CjwheDHwO+A9wafAH4A/BFtRq79nvudR/8Y+t+k70TwteBnwCeBrwM/
Cz4VPBz8InglrnmOa7/i+DT6b0e+RP8p4NvAE8CPVPwWdP6LXKtotWagTUW7
Ep1n0PkPOpeD/w1+D3wZeDz4XfCl4P7co428mvYc/R/Sfy74IfAb4LPA94Ff
A+8DPhH8IPgp5M3cdymfm3v3BVf03wN+mb4bvD94SfpL+lfhPq+Af+Lcc/SX
HN+Fzm4cL0f/y3yXXcHLgl8CP8q5Mzg+D91tkIvQP57+v8Gvgn9BPoLOasgD
0PkX471M/w8c704bAH4F/RHoTMa573mGv/z99G+P/uO0WcB/Infj/LS8s2WQ
h6M/lOsfQ/dQ8FneB3w0+Fzwk+CjwOeAnwAfBh4CfhS8H/gU8BjwAeDTwGPB
+4NPdR6Bd+UePbhXP+Qf3PtGnmEw8ip0nkXnA3TO49zp6JyLPIT+nsjf6B8F
7gv+G7wMrRfX/srxmfSP8r3Qdzr4bvDLdeb1xuh8zns4n/5HOH6rzrrZhP4v
6O/B9Y+A36RvNp5jTfDyPjPHa4DfRWd7jl/meQ70d3Wi8x79F3Htw+DX6LuO
8T9CPsQY86H7Of3r0qau8n1HIK/oZj2/zzjzc7xpK9/lGvpfd93R9x5tF/on
o39Txv8RPANyZ9oUjNunzBzc2mt5hm3QvxR5rXOP83fT9qI9SP/56GyF3Jjx
N+KaYXXW5Vb0f8c1GzHWN+BpkEeiczbnHq/z3bZ3jrXz3bYD/wzeFJ2tOL6p
znfe1vlM/4Lc72vwFrS+zgPfS2NL1qfvo3bsxAbgj8Ef80xH+G7Q/RC8H3gK
8BlcMxK9V1x36O1L/xBk/yrPo30bxNi/g+dAbuG8AM+GPJlrb+XaF9DpNutu
AnIo/R/Q/wX98/Kcn9D/L9rSHE/K2EfXsZGH+M6RJ6B/DfJp7RZtOa6ZB7mC
6wGdlRlzL86vCn6D6z/leH7uf6/rFZ0z6Tu+jj07wW+HXKLK93JNafOOB/dE
Hsc1FyPH07+N85r+eZGjq1y7OvIr2hng6dH5Enw6eDrwjuh1ebZFkQu6luif
C3k/Ou8z5q2M/Qn4SL8v+ltwvAv9w8EbI+ei/0Ge9Ul05gG36F8bnTu8lr51
wPeA7wD/xH0+pE1OW5n+y+i/xrUCvhl8C3hd8AjwneA1wDdpH6vcsz/Dv8i9
duT6CrkDciA612sn0VkVfJXzE3wy5x7WjqP3b37Pf8D3lrn/V80zrN+NT7oL
/V7gLXyn4H/qV5p1uhDXTwCfQJuzylp8Ezmvtpi+QcgjkNOg9zTyRe0SeAxy
Xc7dQN/ByK397uDDkNvqU8G71pk/+4L3R7a47jXweOCSHA8G74ecg/45aedy
vKZzAnmQc4p2CPiAOutyTq57AL3P6VuPNj9ty8Y33IHOAuCdwKf7/OBtwSeD
H0TvSNpKXF9wvBDydn87Onugc4a2nfO1vqXIWnJNDUXOj86O+lV0BoAvAF8O
fo5zS7Xin/rQfyb959PfqeKD7mT8NnjhVp5tUXQOR+cc+rbqxveocxj3e4A2
NeMtTP/e9A9FZ1A3fs7n3Lwb33YLuC96JW1rrlkS2aENAo+lnUa7yPgD/Z2b
ObxJN/P4BvBm4K2db+BxPPdb6I9Azk3/IPpPcm6ALwVfra8EXwm+Fvwduu/Q
PmX8Rejfh/6z6b+7+b1/Ms4c9G/Y2M9T0Z2RZ3sFWSC/Rb6L3jrIb2gTwIeg
9zt4zzr20u/yJLr/LfOtfc4FaKv6nZHzMP6WjV3dkL4faD+7PtHfErwHcmKZ
Neu72rYb/3QPeLtufNII5yntb/QHI/twvwdbWWvjtAVcP1U36/11+m/UHqLz
WCtzYzz9f/rtuomjNm1iqXHOOecX+qv7bo21OnnfzoFxjPErctEifmsvYyPw
NsiH0N/G99DI94rYqc+MEZHLMva3dcbrbfzovGzlOfzdbxSJdbYyfgXv7HWN
L9Ynt9H/EdymPcX1n3GfqbtZc2u1su5m5Hhdxjuce80AXgd8GLgneG3woeAp
0J+ddjD6q+h7kEe59jl3AeMc6Xs2TqX/CO2n8Qf6xyI3oPUDH4Mcyvm3aUtw
zSTtHO9Nm5ZxVqDvcHRm5r7rcd8jqtxzXJH7zkL/+vQfSf9c4E31D+Aduebk
Vu41lt93oM+AXJXjC4v4r585nr6VtbADbbFWnmcaxhnIOAcyzrTg1cEH64u6
8WF3oTMneBPwsfS/xDgz8UwPI2enfwP6j9EH1YkrZ6VvOtoa+kv6h3D/WdtZ
b3fR7vRbF7E9/+AZnjJ+4NoDkcch9+zE977G8WDwKuDXwXUZv/wSYx5C/3rg
D/0endjtD1xvnPvMONmYkf4zwbNq92mDwN+g8wPnJuP+31eZY28bT/O833E8
Kf3fIlcvYv9f8H114ltn8Xl5hqP0lcZ3RdbmTxxfzLiXIC9px9fqc29inF1p
1xhL1Ml7bgMv00meMQK8Qid5xj3Gkz4H101JG9ZKfnYrsp/xLrJ3kTVmzmE8
3McYEdmriG+elfvu6rprJx96nsbtW1+ix6nWde3kVTfpf5w3ncRiX9O/fJHY
/k59TCf3X9x1TrvUeAP5h98WPErf3In9f7axxYW+j+NhncQeMxsbdpLvPIPO
dp3EWk+Dn+KhFgWfUsV2v+Nvo63G8cGt5HrambfBJyInGnOD7+Paefgh+/u7
fIdV5o8+bvNO3s1YdJbjeAfwJoxzeScx5JSd5JgvIGfiW9/VSY4zH/JF9D9u
4sANeJ7VnAMcf9GKdKw+TVz9IzrHco+V6TuunRztQ/CpyM9pJ2kz9YPoz+c3
ROd77jEN+HrtELiHcwp8RSdx11TIzTr5hg/Tf1sz76bQBjLWia3EP7sz5nSc
WxY5iONz/VZV3qnv9l36X23s8UDaRPqWKOLLjZuNny+r8m38Ru9r681VwFfQ
P7BKfGt+PWWd96yvH11krjvPD+zEZr7PPe8rsk581tkZazfkRPrXKPIefXc9
6qwXfai5y/Lgq8t8D7/Le+BFqqxNc7eS65Yqcu7kMjHO+mXyHP2Gee5cVda+
vMT8de7XGzmtOZvzvMqzujYfdT41z+J3nbzOGjFWWbjK/H+3ym9wvT+A7FnF
/ryKnKTKHNbm/OU8KJr3yDM9qf3RDjFmf373+sgBZeK7T+jfo8o6+h3Zv4jN
cS1tV0X+VIV7GAn+J3KjJobXLpmnXg1epJM89XLw/MgNm9heGyXfoG35h7FD
HX9sDtLPuJHnGMs8P79MbrJLGV7kPPTn7iSHHgVeuZM559x7pwy3cZ/2Cjna
2Ae8qLFnnZjlUfNFxyuSD99YZr7e4Lrk3PBW8u7nuWZy8D2MPVedOOU/nH/W
79EKZ2UebO55HdduiM6y5prImvGWLrI2bva5taXIK5FXNPHzF41N+xy5J+Pe
0Ao/M1+Z+VzTfyFjXcGYv1XJv1pce32VWG92Dke3E0/NAb6/ndhtOvCtPnOR
GEa78ztjLtDYojmbvMD8QL83Lf03ua7LjHk0Ol+WWeMHaf95piN9p3X8oWnA
je34WB9pGHi2IpyM1wzk2je9J+dXAD+tDQCvViYe+80Yxd+ovfW5aI+7jujf
ocy7W6RMnnQg/V3nEe0g8CT6Um56TCvv4Rb9OXg6bXWZtbdwmVxNnWmRvZoY
1Vj1JH0f+ETkpbQn/Kad5HCuux7INRj3rFZ8n/FCT/Cd/Ma5m5jT2HObJvYz
r/kLnYdcX5347kkY954mV1iN/re49gjwQPDb4O/qxAMzoLsveid7vfmR8Sj4
+jo5xNLoPN/EDPqpSavY+Yrju9Gtm1jrzCo5k9/38XZyHWNLY0xziAXBT4Cn
Q+945GWMv2KZOezcMw/oB36Bc5PUsVfaopXReYn+7zqJHycBD28nrpwUfIec
DM+xn+sb/TWRXec7/f/k2hdb4XaNSScD39WOjXqg8Qv3VrGlPZAXoj8G/Aq6
f5X57fqjtcvEDW3kWmVihQK5L3rLgCcw5mJ14vrFnc+c+4r+KeUp0BkKnhO5
nBxkK37H3z1TkfU7sYpfM26cqvE7ozm+pRvf9hRj3thNHHAr+KZu4obb6uQN
A5trhnXjv801NuMevzDGzMj7Gj+uP5fHPQfcqxMOVy5XPtOYZfombtm8TI4x
Sxm+Ut7S+HlcJ88/oJM1NHsRjnt4NzHi800MP6ZILi+vrG/tjXywE9uyBPLv
KvbgKJ+nm7jwOedwlbjImLxnER99dyvff5Yiz9qpM69OqLK+5yjyfO06cYK8
xJOd/I7lkIsX4az0qeYF9xfhBOZq8kHzwg2avOM25L30jaDtQxtFG6mfovUt
whdpE41vF+PdjOyGf+i2k7+Yy8wC3qcOr2O8MVMnPM0Qn7UTzmT6dvIa+R7X
+OzIBxjrKMbsIB+U29IGmWeX8ZdzI7cqE4v0Rm5M+16bU8Zv/3+cdZH+EvkX
97gQvDv4T2PpKu/ggip5+WDnsLaxin27EnmOtgndN8BfM+bGRXzeSfpLdD7V
tpfhHqdCbkL7ATy9a4JrttSHIk/l+FiuO6UM9zJlO3zOW1X4yV5V8qn55UeQ
u9MeLcIRfV2Hs5+N376cfreTWOscxrqQa88uw0+cUoSjkPsxf1wc3L9O/Gse
Zx44tMkNLy6Tm8obn92Mo1/3uiHNtY934nP7G/9W4bHlz8/g/JlFzs1D/0at
8O2Ld/NetJn68QtoO2pr2onB5Hjlq8wZT2mFn5GDWrEVzk3ezOc4vkyfHO4J
DbZPnunwIlzTfFX4c7n9IWXm6lnI3lU4XusjxhHnN8/Qq3nP1oMG0q4xvkSe
U+Q9GHdOU6Vm8UmT117UPOexZez5MWXm//60U7VfZbgEuc8DyuTIB/kby7y/
/ZED6nDhQ6pw43s373//RudofUgVHtu6xkp11tlw+g4tc/8zy+S2g5vv4nrc
t3m2g5r7no5cuc66vN1cp7nWMfpV4c+t2f1Zh99dpRsO3LWjLZWj2d65zbca
XuRY7uaPOtz28uj/tw7nvUI3POQLRbjHHRt9r5VLNs+aFLlSN2tPbvnnTngU
a0c9Gp8uZ71aNzGEXLec93GuHa/l2fZspW6o7bJeY91m2Tr5/VlVvoffZW/k
73VqFEt248cnBe8Enr4b/6fvHlWF/5QH/bXOGj2Y84tXsQkXmqsVWeeu8Xvb
saPGRWPaWUfGEn+X8cvylh/X8Y3bM84TZeLMhcrkivM2PvGRduywvtI8tm+T
18qJztvwon2q2KiLqqyb75t5O3c7x87ji2kfNHPvoyJcrTFB1U3ctAdy5ip2
SS7UGHqedq6drh0++oRmXi/QDq8t/yUPdily6So28GLkMrS9wJcgH2Xs49A9
rUwcJM9zWzvrzXV3IPKNTu5nLUuO3PxFnnwJ9BZvJ74+mnZMkZrTX0W4M3mz
cc26kIP6rQinKZ85oVlrPvOKdd6dnP+v7dRiJi/DRQ1op77rMy7fzu+5oMx4
rq9LyozhOjqmk/t/2Q5Pq4668ntPFuHMre8ZcyyF/LiTnMDc67MitTZ52i/r
1IR78M7/KBPLyfEaeBv/yJM/XiZ3M5mYvErMKf88RZWYU45XPsTc39qaXMb/
arjavG581VXGlU08Jpc+pkpdwPrAyHZiA+P5pbupmVo7WxKdbVqpjQ4uE+dY
W5yxDNf6LPJy2mVFcszrkTcXsSOTdmM3F+XaS4vomKdpL28swuu5jsYi10Bn
sW5iaHOQa8pwFMPK5F3mX9eW8eFyp0/qJzuxK0+V+R3DiswhbfJV9D3UzRq9
tsja/rxOXrlllbkwqok9Nq3jF7QD2ltt7C2NH5Qb1xfKBd7V2Eyf/abm+Z2L
V9Hud451kmOaa/p7/F3WQNeq8+xj5GvB41qpq77TSc5o7jis+b3Wuvwu6qjr
d5eTvxN5fRk+ynr8FWViWPP3Sbp5r7s1NmRA439uLfJ8Ppvf5Jbmu8hXuHaG
l/k2fiPjan20dWrr1Vc29/Kea9f5rsZvjue45rcTmvfvd5iFc6u3su+iy/P0
bIdntrZmrGLMYi5kTuR+DPlgc0NzxBL9qdrhk2etUqd2H4j8i3PVb2luamzw
GXpL1bET93fjd51P5keuR/M+8z/tmH549ir+ZHjjk/z2zgHrp/o1v/+tZb6F
89l5PWOVeqj7QIwTrZGNR87WDj98VrN2XcOfFuHMnQ/yKpvXiTv0uVNWqRVa
19isTqyh7zaBGtYK72J9+57Gj+/dYOefMfK9jV/Wz8pNyVEZJ2jvrUGMbOaw
NnzfRl9/X3STC8g3bFEnjtOPyw3+P68j9yvn3LPOfbWbcvx7lZnX+5SJNY05
3S9xRxHf8lhzTp0jy9TY9a1/m6NVqcW7d8J8TZ8zoFlrFzfPaax4nnNJu1hl
f4i1HmtNrxfhbtTXXk/WTt6s/fkR/I9uckLz0BHtfE/5HO2MvMt9yD51fPjo
bnJpc2rrAtag3i3C7/RupzZqvdT9MuZBcpbmX+Zp7h/5tsl3zHuMFa2rGi/+
UoeLk5Nz3h6H7rXIH+twfXJ+xg9yd3J4P9Th/K3ZGicYu8ojDm7sifGHPu2q
Zq3qC8xVzVn7NPGJcYq+d+7G/xobWCe6u0ztxnUtH2WO7hp8p50YSc7aWpux
lnmVHKoxmHypvOmC7fhu41PX7FBtTDc5gvmjeaS1Ev2CueNi7dRTrBn2bWJR
Y1L9s376yyL+bYnGR8u5+/7lNtqd+FJzFusczr3Fy9S6zTPlk4yNrU37Tqdp
vo/v3HqGfKM54e/t8Kvm3X+0857No/0u5moHdVP71p4b72/pHEXvozJ1Abky
635y2fJ28khj+W37ua4Z47myiTWQ39Th7eXv16rCM7g3YM0q+ab7Adav4pvc
YyD/by1gjTJculyZ+5jk0t0r5Z4p1757hS5GvoB8nHu9yPmpO1njcmLuR9O+
uB9HPkcO3zrRvlXqLO4pmsC555zTndgk8yztknuPrLm4H8z6pDGRecVXZThA
62Vfl+EPrXmtWoVbc6/CT2U4RmtkzgtjO+eG3Kw52h3a6k7mj/lypxOO2XzZ
ut776EzO71qlE27WmGeKTmIteb/9qtSV3JO2YTd7ztw7tA/9t7Syt+0d8Gnc
+1znV5UakPvcVqzCDRrD7FKFc3ZvnjVV4zvzAfeyuKfFmrh8iPWpJctw/u6x
ca+N9X9zanPriUU4CmsG1kE+1OeW2a9hDqkdNx+0TuracG+aPKd8p3VIOSY5
NutZciDu37GGZU3LvX7jG99hPmWt8GP61y1TK/ykWRfPl1kzxoZPl4kHu2Vq
f66P27uJsbS7fmvrSvIk7q+x5mUdcKcyNTI5Mbkxa3/W9dxT474A+Q15jol1
OBNrNb8U4Yeti8hFyzlvWyaW0qc7J2ds1rrxj7VU34c8gXsu5aUOaac++6a2
upv9fXImcifudTFONl52L4Z8l7yX+zTdo+VeLbkHOTS5NPfEuTfMPWLaTLm9
PRnz5TIcntzyY1Xua+11pjK23Dzigyq1I/cpWW91r5o5m3Vp+Ul5ymva4bfk
Kq2xyrHItbiXSvtlncR9hXI85gLWruXF5Eet21qrXa/MHp/HW+Gzv+nEX1m/
1v7L2Qzuph7xRCvcs/tYre1Yu3VfTu/Grj1TJscx19m0yn5U9ya5p9E5e043
tUz9tX7b2tbEZq669v9EPlAmFtLnm+v3a3J2c/dF2okJjbmNzy9H3l7GH+uX
d6pjG7QR5k8Lt3ON+rM19tkYYbc689/9Au7dkreXh1yrG17e/WlrNfGhceJD
RepX1tXcv3a2PrGTeN243ZjBOFw+foj5QR2b774k93qZ81pjkc+Xd7Nu9oe+
pMj7cr3Ix44us3/MWoDcpntArZO6x3WLKhyse1x3qFKTco/uUt3s7TQvdl/e
Vdr/Tuzwr4xzf5m83P06gxq7on0xj3RfZq9W9hXc3eSI1jX6d7OH2Zx3mW72
lJrnui/MPSvGnn272XcqJ+BegX+1Uj9Yt8q+OPcAr9cNl+1ewX7d7Ec1d36k
yO+Vh96pyh5d94m5n2zRduyU8b97Sy/qZo27b251ueoq7999pO4J+l+86vqs
8n3dU2rc8XORHME66S+NTTD2MmYzFnNv0GKNLdiDax4rss9HX/ki+D7kqvpu
dD4sU3uV55fvd4+qtn3pTuID56Hrzb3E77fCt1tzsSZobdD9n+5PsH79RZF5
ru3brMr+bffjuT/ZeoH8/Abd7O12H6z+2n3E88nbcO8ZWtkb4x5mc2frn647
5+coY7wydR/3zGh7x9M/sszebr+ve2zcm2bdx/rPzlXmjHvR167CL7ln231h
8o/GHMbe7ju+pJvaonUQa/nrVNkn6T7wa9uJ8ay5mD8YD+vvPykyD7W/7jPr
1c64/wel5web
              "]], 
             Polygon3DBox[CompressedData["
1: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
KzhDcM2QvW/sgaGW+H+SrBke
              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{1338, 1337, 1767, 987, 988, 1768}}]}, 
            Annotation[#, {{Legended}, Charting`Private`Tag$3043, {1}}]& ], 
           Annotation[#, "Charting`Private`Tag$3043#1"]& ]]}, {}, {
         EdgeForm[], 
         Directive[
          GrayLevel[1], Lighting -> {{"Ambient", 
             GrayLevel[0.8]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJw1lEtIVVEUhrfnnnNugVZEpD1BitAehA0iIvOFVmAmmnktS/NRGZGTGtQo
6IUNSnpADgqhJk1y1KRJg2pQDWqmlhCGIWVFBFYQQd/PWsFd919773XW419r
7+Ku/qaTUQjhDJJBjueF0II8RC9LQ0jQS1Pb09kCpBmpQQaweZ6EMAoWYTPM
XjuyDulwP9uQuZzVYzOK7eLUvvuK3shZL1KSZ3oV0srZaRLZDU6SWEdkei04
y7cL4xBOZUPIYVuBvOesAaxENqFvwGYSXAMO5pmd1hvxeR/czPdTxP6Dvhyb
z+gZbFZ4jR1eeydYj/ALL4PpL4LVphq/o/fkWWzFfZVYLktSq6nRa2lxzuZ7
fdqfYb/PeRxw34pX6Hy1uP361PlMzabV81E9Oa+9GmxDzgbjQ/ur0FeDU2BV
sJglHreEPHPgZXzeRFrh9VJqPRxXH4PxI3814A3O9mFz0XModB5q4XMeOMzZ
gcj0ishylJ04OxYZ5w3gFvbmILeDcd7scyXexKH69dh7pF79TKxXI/T6Ssb4
Vu/H2M8HH7D/AczhewJsAzXH2/mbZL0XfAvuAnvVK/AuMqIZBys9Z+X+JjGu
lqZWg/b3g3dYd0XG1QQ2PeyvTax2cTANPmFdoJqItcfrVd3lbl9Ant8Sq30l
fnZ6Pt1gmdd2nfMdkfXlMFjnM6/Zz6Y2X6+x+RFbrPys3Tv1+Xdsc6LZWgZ+
ii1/5ah4iqu7VuQ9Pg+WJpaD4i5KbEYepXYHdBc0D6rrf5+HfMb0FhTjv5e8
pmO7P7pHmg31SzM7m9gd0GxeAOtSuwea4T7nRzwNZq3fY/7GyL9il8fWR3H7
C1/3gvnU+ZDPuR4s2R4BT0QW6yD4PGP93apvkXb2PsZ2Jwb9XnRn7X1RvT3e
C/XkKfvjsXGrOZhyzjVvM/52dXpf1J9J1zWL5zLWuy+R9fooeAsfz/D1LrYZ
uMa6OTJOVEu113uVdVNkfdH7lvM7Kl7/Iv3B5vOQOOO8I7E7JN7+AbLGpK0=

            "]], 
           Polygon3DBox[CompressedData["
1:eJw1lEtIVVEUhvc995xzC7wVDcpeghSRWQMbRERRai8Kg7JIw6BSg9vLSaNG
Qi+MqKggBz2EmjRy1LhBNSgHjapbCREYkho0MYUI+n7+3WDd+/97vdde+9Sf
7Dt4Pgkh7EFS5Ac/4p383M9DmM5CmF8IYQEyA66iH0Q/Bz4KLpdC6IHPYv8K
vAyfZnRT8AvwUXx+ob9eDKEJvpP/8aJzKNdz2YM/gLtL/hcfQz6Dr6HvAO/G
4SH4MvIVfhZ+C9yIdJFvCNkFbkAycBGZyBzjELY7EsdWDapVNas21av6FGMd
+CdnA/BWeB28BvsyfAiflyXnOxLco+wr2D+FV9A/ga+FNxYcU/GvcPYHfA79
XfAl5CP8DPxm9B+Gv2YmwyXn12w3IYtyn0mnO/iN7h2yAfvt8KXoW+F/g3OM
gTdju6Vge/k9w7+GvtvQ12WeTzu6CtIEnim6nlrkPXafkAPU1pyYX809Sy3J
vdx33gFuS7wL31P3ohiK9f8ONe8B9UrOSXRriDEX/hg5jO5L6n0ZzJ1PeTXf
Y4nvdxv2LeAluXvdj4wQazm8BXwx9lub23alZpi5ZtXelcTe4HvBvUg9eFY9
Btcr+wn4W/Ab5AV8PPVdaZ6yv8NZb9xv7Y7OpOsLjq191m6Uo//tkuei+dyg
ttW5a+9B1ue+j/6iZ1KN96ldX4W+hP5U4nmrx33gFbl3sT3us97UwtT7pd2t
5n6Pyqncmqvmq55V3yP03Yl7aMD/AfxE4jelfdBbVO+Lib819Zl25XhiW30D
joLnxfcqvXz7425pPzem8Q1kfgOnE++0uL4DeiuT0Ufz+BZ8xyOxn6lYzzS6
f6hJl8k=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlzz8vw1EUxvGjtAxlYShBYmOy2USjMTTKUAkbSUVsOnkF/kVi6CIxIeEt
WKy8AIu0/iwVs0FCjD6/3OHJuc/3Pufcc6cazfpeLiKGKU/HhYgNoEaVnogJ
/rE/4o/fcV9Vr7AH7Np5CCurF9gYlfVU+E16MrBNNZkuX+yL6PDnch/O7zQg
/4W1sC7/Sp+RejvYfW/ELN1gW9gMTdOJu4aZl+opLTmvyOzLbtvtEFvLpV2y
nUb5yUL6U/a33Vx6966QerL9sj1HsKL+F3s8Uwn7Vg/k6jKLtGBGif/Jp72y
/eZkfvkjfF1mOcvKjfOD5r25b1NTfl7uDF+VuY30x5bMP0nBMD8=
            "]], 
           Polygon3DBox[{{1426, 906, 1042, 1781, 1320, 1321}}]}]}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0UsrRHEcxvG/cctCWQhbsRBZsJLc73e5jrvBuN/2yguYElPIKIay5314
B5aUlKUNG+UzWXzP9/k953f+dc4pXz0cP8gKIRwjJmRy1OWZP3NCKOQvLuMX
/MgVnLTzyrV5IcTlejlfrpTb5eLcEIa4QFelW0fU3GO+l2tQbSeua+ZD/kWn
fMTX7ueizv42J3QlcoOckpftPfA3F+l28JjpuQmN2SE8mdMR9/CQOYdHsYUR
nOiGeQZv3uvSvCkPIYoL8wFvYBDTONft84f9dR7AFO70/RxHH9aQ1q3yLffy
Cm7kGPdgGd1I6Lp4Eq/OTZqX5E5M4My8x4vowDhOdbv8bn+B2zGGlL6N59GK
OVzpZrkFkcz39kxp1v///gODejXp
          "]], 
         Line3DBox[CompressedData["
1:eJwl1HtMVmUcwPGD3BRN06RMsyTLSrPE7EJoarb6gzmba2vNza3oD7pBZVqY
l9IyvIeGEMKonGupyFWuBRErLeeopFWa3UAyvFZmpV38POuP7/v93Z7nPO85
531THsqZnR0TRVGGj30ci864KMrpE0VPYm1CFD3FT2MenkGe2nxegGfRZf45
fl09lxfieSxCsdpiXoKlGJgYRT3mXxC/iM36y3g5XsLLyFdbwa9glTiPN/DK
kGM11gSrreV1WI9u+77Kb6jnhzXYiNfwploBb0IhBjnHEfNF4dx4S784nAcl
KA2zamV8L9LdmEr3Zqj7NFlcJU63PlleLZ6iVsN3cC1P5WnYJZ7OdXwn1/MM
buC7uJFL7VNqn+1okv/OZZjguqnYo/ZleEjiRrP3iNvwuPP9x/fhOA6jQn8N
r0ZWvO9l2fXWjcNOvRL1oziGLpxGg/rnvNvsLeZaxMlcoz6e98uHcidnu+YN
4ovRKm81M0x8I76QX8Ir+X0U2u8B83XiPPGPXIQkM5/xWL4Iu+zxg/xa8XXh
vbPmGu6HT9XHcLuZIfy9/Da+HR3h3qv/xn3k//J3mIv31OPUJiE3PA97Tgnv
nN4Het/yr5iNdjyq/zc3oln/H+4NPWuvti4BWfJzeNhspvov4gKM1rsKbWr7
5GdRb4+7wznwmPm/eBZ+RjfK9ZfyEoz0nDKsvcIel2OH3kb1n3AEh3AKdep7
wr01e7O5JvFArlIfxR/LL+BP+AnXTAnvOZrlLWYGi6/EXvmF4ffJ72Ka/e43
Xy1OFX/D69HXzO5wPh6AWnsclI8QX4Yca4ZzIj5SvzTcAzP9+YD8Vk7Dh+JK
9ZMcI/+Tv8accH31WLWbwtlcO82ek8P/TPieel/xCcwMzw2P6J8J72z4rej/
wT1hH2snWhePTHk6P8i14ex6NdyfqziJK8L7xeXcl7fxO+G7iN8Oz5u3hv24
A1vELhf1xv7/P3keXC6ueg==
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{1309, 1797, 1898, 1597, 1308, 1897, 1722, 1307, 1896, 
          1721, 1306, 1895, 1720, 1839, 1305, 1425, 1838, 1304, 1894, 1719, 
          1303, 1893, 1718, 1302, 1776, 1892, 1494, 1301, 1971, 1493, 1492, 
          1299, 1691}], 
         Line3DBox[{1384, 1800, 1943, 1603, 1383, 1942, 1757, 1382, 1941, 
          1756, 1381, 1940, 1755, 1873, 1380, 1457, 1872, 1379, 1939, 1754, 
          1378, 1938, 1753, 1377, 1790, 1937, 1524, 1376, 1074, 1523, 1374, 
          1698}], 
         Line3DBox[{1593, 1409, 1824, 1592, 1271, 1408, 1823, 1270, 1877, 
          1702, 1269, 1876, 1701, 1822, 1268, 1407, 1821, 1267, 1406, 1820, 
          1773, 1535, 1405, 1819, 1772, 1534, 1404, 1818, 1476, 1533, 1403, 
          1817, 1475, 1665, 1672}], 
         Line3DBox[{1599, 1441, 1858, 1598, 1346, 1440, 1857, 1345, 1922, 
          1737, 1344, 1921, 1736, 1856, 1343, 1439, 1855, 1342, 1438, 1854, 
          1787, 1550, 1437, 1853, 1786, 1549, 1436, 1852, 1507, 1548, 1435, 
          1851, 1506, 1666, 1675}], 
         Line3DBox[{1623, 1422, 1596, 1588, 1983, 1622, 1421, 1594, 1586, 
          1977, 1286, 1420, 1608, 1607, 1981, 1285, 1419, 1834, 1284, 1884, 
          1712, 1283, 1883, 1711, 1282, 1882, 1710, 1281, 1881, 1709, 1833, 
          1280, 1418, 1832, 1279, 1417, 1831, 1278, 1416, 1486, 1969, 1542, 
          1960, 1708, 1485, 1541, 1959, 1707, 1484, 1540, 1990, 1690}], 
         Line3DBox[{1625, 1454, 1602, 1591, 1984, 1624, 1453, 1600, 1589, 
          1978, 1361, 1452, 1612, 1611, 1982, 1360, 1451, 1868, 1359, 1929, 
          1747, 1358, 1928, 1746, 1357, 1927, 1745, 1356, 1926, 1744, 1867, 
          1355, 1450, 1866, 1354, 1449, 1865, 1353, 1448, 1070, 1557, 1965, 
          1743, 1516, 1556, 1964, 1742, 1515, 1555, 1993, 1697}], 
         Line3DBox[{1636, 1340, 1583, 1584, 1582, 1801, 1976, 1621, 1339, 
          1464, 1920, 1767, 1337, 1919, 1735, 1335, 1918, 1734, 1333, 1917, 
          1733, 1331, 1915, 1914, 1731, 1329, 1913, 1730, 1327, 1912, 1729, 
          1325, 1504, 1911, 1784, 1324, 1783, 1910, 1502, 1323, 1782, 1909, 
          1674}], 
         Line3DBox[{1641, 1626, 1573, 1567, 1474, 1816, 1764, 1265, 1402, 
          1815, 1264, 1401, 1814, 1263, 1400, 1813, 1262, 1875, 1700, 1812, 
          1261, 1399, 1811, 1260, 1398, 1810, 1259, 1397, 1809, 1771, 1532, 
          1396, 1808, 1473, 1531, 1395, 1985, 1472, 1677}], 
         Line3DBox[{1642, 1627, 1576, 1568, 1505, 1850, 1768, 1338, 1434, 
          1849, 1336, 1433, 1848, 1334, 1432, 1847, 1332, 1916, 1732, 1846, 
          1330, 1431, 1845, 1328, 1430, 1844, 1326, 1429, 1843, 1785, 1547, 
          1428, 1842, 1503, 1546, 1427, 1986, 1501, 1682}], 
         Line3DBox[{1643, 1655, 1569, 1575, 1570, 1544, 1972, 1777, 1319, 
          1907, 1728, 1318, 1906, 1727, 1317, 1905, 1726, 1316, 1904, 1725, 
          1840, 1315, 1903, 1724, 1314, 1902, 1723, 1313, 1499, 1901, 1780, 
          1312, 1779, 1900, 1498, 1311, 1778, 1899, 1497, 1681}], 
         Line3DBox[{1644, 1656, 1571, 1578, 1572, 1559, 1975, 1791, 1394, 
          1952, 1763, 1393, 1951, 1762, 1392, 1950, 1761, 1391, 1949, 1760, 
          1874, 1390, 1948, 1759, 1389, 1947, 1758, 1388, 1530, 1946, 1794, 
          1387, 1793, 1945, 1529, 1386, 1792, 1944, 1528, 1686}], 
         Line3DBox[{1645, 1630, 1651, 1595, 1657, 1629, 1638, 1954, 1796, 
          1658, 1298, 1653, 1610, 1463, 1609, 1462, 1953, 1297, 1461, 1890, 
          1766, 1296, 1765, 1889, 1460, 1295, 1888, 1716, 1294, 1887, 1715, 
          1293, 1886, 1714, 1837, 1292, 1424, 1836, 1291, 1423, 1835, 1290, 
          1885, 1713, 1289, 1030, 1491, 1288, 1970, 1490, 1489, 1287, 1991, 
          1806}], 
         Line3DBox[{1646, 1633, 1652, 1601, 1659, 1632, 1640, 1956, 1799, 
          1660, 1373, 1654, 1614, 1470, 1613, 1469, 1955, 1372, 1468, 1935, 
          1770, 1371, 1769, 1934, 1467, 1370, 1933, 1751, 1369, 1932, 1750, 
          1368, 1931, 1749, 1871, 1367, 1456, 1870, 1366, 1455, 1869, 1365, 
          1930, 1748, 1364, 1966, 1522, 1521, 1363, 1974, 1520, 1519, 1362, 
          1994, 1807}], 
         Line3DBox[{1647, 1604, 1661, 1587, 1649, 1628, 1637, 1979, 1795, 
          1802, 1634, 1663, 1617, 1616, 1615, 1459, 1958, 1482, 1415, 1830, 
          1774, 1481, 1414, 1829, 1458, 1277, 1880, 1706, 1276, 1879, 1705, 
          1275, 1878, 1704, 1828, 1274, 1413, 1827, 1273, 1412, 1480, 1968, 
          1539, 1411, 1826, 1775, 1538, 1410, 1825, 1479, 1537, 1957, 1703, 
          1478, 1536, 1989, 1689}], 
         Line3DBox[{1648, 1605, 1662, 1590, 1650, 1631, 1639, 1980, 1798, 
          1803, 1635, 1664, 1620, 1619, 1618, 1466, 1963, 1513, 1447, 1864, 
          1788, 1512, 1446, 1863, 1465, 1352, 1925, 1741, 1351, 1924, 1740, 
          1350, 1923, 1739, 1862, 1349, 1445, 1861, 1348, 1444, 1511, 1973, 
          1554, 1443, 1860, 1789, 1553, 1442, 1859, 1510, 1552, 1962, 1738, 
          1509, 1551, 1992, 1696}]}, {
         GrayLevel[0.2], 
         Line3DBox[{675, 1003, 1088, 1004, 1809, 676, 1009, 1091, 1010, 1819, 
          695, 1018, 1096, 1019, 1826, 706, 1027, 1101, 1969, 1028, 718, 1885,
           877, 729, 1893, 888, 740, 1901, 1039, 1107, 1040, 751, 1911, 1045, 
          1110, 1046, 1843, 763, 1051, 1113, 1052, 1853, 773, 1060, 1118, 
          1061, 1860, 784, 1069, 1123, 1070, 796, 1930, 946, 807, 1938, 957, 
          818, 1946, 1081, 1129, 1082, 1083}], 
         Line3DBox[{677, 840, 1810, 678, 1011, 1092, 1012, 1820, 696, 1020, 
          1097, 1968, 1021, 707, 867, 1831, 719, 878, 1835, 730, 1894, 889, 
          741, 1902, 899, 752, 1912, 909, 1844, 764, 1053, 1114, 1054, 1854, 
          774, 1062, 1119, 1973, 1063, 785, 936, 1865, 797, 947, 1869, 808, 
          1939, 958, 819, 1947, 968, 829}], 
         Line3DBox[{679, 841, 1811, 680, 849, 1821, 697, 858, 1827, 708, 868, 
          1832, 720, 879, 1836, 731, 890, 1838, 742, 1903, 900, 753, 1913, 
          910, 1845, 765, 918, 1855, 775, 927, 1861, 786, 937, 1866, 798, 948,
           1870, 809, 959, 1872, 820, 1948, 969, 830}], 
         Line3DBox[{681, 842, 1812, 683, 850, 1822, 698, 859, 1828, 709, 869, 
          1833, 721, 880, 1837, 732, 891, 1839, 743, 901, 1840, 754, 1914, 
          911, 1846, 766, 919, 1856, 776, 928, 1862, 787, 938, 1867, 799, 949,
           1871, 810, 960, 1873, 821, 970, 1874, 831}], 
         Line3DBox[{685, 844, 1813, 686, 1877, 852, 700, 1879, 861, 711, 1882,
           871, 723, 1887, 882, 734, 1896, 893, 745, 1905, 903, 756, 1917, 
          913, 1847, 768, 1922, 921, 778, 1924, 930, 789, 1927, 940, 801, 
          1932, 951, 812, 1941, 962, 823, 1950, 972, 833}], 
         Line3DBox[{687, 845, 1814, 688, 853, 1823, 701, 1880, 862, 712, 1883,
           872, 724, 1888, 883, 735, 1897, 894, 746, 1906, 904, 757, 1918, 
          914, 1848, 769, 922, 1857, 779, 1925, 931, 790, 1928, 941, 802, 
          1933, 952, 813, 1942, 963, 824, 1951, 973, 834}], 
         Line3DBox[{689, 846, 1815, 690, 1145, 1146, 854, 1824, 702, 979, 
          1022, 863, 1829, 713, 1884, 873, 725, 1889, 981, 1174, 884, 736, 
          1898, 1156, 1157, 895, 747, 1907, 905, 758, 1919, 915, 1849, 770, 
          1159, 1160, 923, 1858, 780, 991, 1064, 932, 1863, 791, 1929, 942, 
          803, 1934, 993, 1178, 953, 814, 1943, 1170, 1171, 964, 825, 1952, 
          974, 835}], 
         Line3DBox[{691, 975, 976, 1816, 1006, 1147, 1216}], 
         Line3DBox[{692, 1190, 1191, 977, 1005, 1226, 978, 1232, 1210}], 
         Line3DBox[{827, 966, 1127, 1079, 1944, 816, 955, 1125, 1074, 805, 
          944, 1124, 1974, 1071, 794, 934, 1964, 1121, 1067, 782, 925, 1962, 
          1116, 1058, 771, 1851, 916, 1111, 1049, 761, 1986, 907, 1108, 1043, 
          1909, 749, 897, 1105, 1037, 1899, 738, 886, 1103, 1971, 1032, 727, 
          875, 1102, 1970, 1029, 716, 865, 1959, 1099, 1025, 704, 856, 1957, 
          1094, 1016, 693, 1817, 847, 1089, 1007, 673, 1985, 838, 1086, 1000, 
          1236}], 
         Line3DBox[{828, 967, 1128, 1080, 1945, 817, 956, 1075, 1937, 806, 
          945, 1966, 1072, 795, 935, 1965, 1122, 1068, 783, 1859, 926, 1117, 
          1059, 772, 1852, 917, 1112, 1050, 762, 1842, 908, 1109, 1044, 1910, 
          750, 898, 1106, 1038, 1900, 739, 887, 1033, 1892, 728, 876, 1030, 
          717, 866, 1960, 1100, 1026, 705, 1825, 857, 1095, 1017, 694, 1818, 
          848, 1090, 1008, 674, 1808, 839, 1087, 1001, 1002}], 
         Line3DBox[{832, 971, 1949, 822, 961, 1940, 811, 950, 1931, 800, 939, 
          1926, 788, 929, 1923, 777, 920, 1921, 767, 912, 1916, 1915, 755, 
          902, 1904, 744, 892, 1895, 733, 881, 1886, 722, 870, 1881, 710, 860,
           1878, 699, 851, 1876, 684, 843, 1875, 682}], 
         Line3DBox[{836, 1077, 1076, 1975, 1126, 1172, 1199}], 
         Line3DBox[{1181, 998, 1084, 997, 1231, 1209}], 
         Line3DBox[{1196, 1176, 983, 1175, 982, 1890, 726, 1834, 874, 714, 
          1830, 1014, 1023, 1013, 1130, 1212}], 
         Line3DBox[{1197, 1158, 1104, 1972, 1034, 1035, 759, 1920, 987, 988, 
          1850, 1048, 1161, 1218}], 
         Line3DBox[{1198, 1180, 995, 1179, 994, 1935, 804, 1868, 943, 792, 
          1864, 1056, 1065, 1055, 1131, 1213}], 
         Line3DBox[{1200, 1220, 1024, 1958, 980, 1188, 1182, 1981, 1183, 1184,
           984, 1953, 1031, 1227, 1206}], 
         Line3DBox[{1201, 1954, 1153, 1152, 1151, 1134, 1977, 1133, 1135, 
          1148, 1222, 1149, 1979, 1217}], 
         Line3DBox[{1202, 1221, 1066, 1963, 992, 1189, 1185, 1982, 1186, 1187,
           996, 1955, 1073, 1230, 1208}], 
         Line3DBox[{1203, 1956, 1167, 1166, 1165, 1140, 1978, 1139, 1141, 
          1162, 1224, 1163, 1980, 1219}], 
         Line3DBox[{1204, 1223, 1173, 1150, 1138, 1136, 1194, 1983, 1137, 
          1154, 1155, 1234, 1214}], 
         Line3DBox[{1205, 1225, 1177, 1164, 1144, 1142, 1195, 1984, 1143, 
          1168, 1169, 1235, 1215}], 
         Line3DBox[{1207, 1228, 985, 1041, 986, 1132, 1976, 1192, 1193, 989, 
          1047, 1229, 990, 1233, 1211}], 
         Line3DBox[{1251, 1093, 1989, 855, 703, 1245, 1098, 1990, 864, 715, 
          1246, 1991, 1254}], 
         Line3DBox[{1252, 1115, 1992, 924, 781, 1247, 1120, 1993, 933, 793, 
          1248, 1994, 1256}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
65JHHMivKJdNmVsEK2YfGqdeFUXHG6Lw5he2foP32CZYIH1P4JZPA+LrGF9z
2aWOXpeAqktF5PkknJ6Rc6L2kOeTLK8dkUuS50ftIOX350jvyKyrBRVZ88fx
drWgOcf6QW1xC5x9Il/1lrBz4aPMyYFzi5CjlPG0DR1RoLb9jQLLuw1c+8P4
7VvSEM/NN27tgY2wkjyXhp88V6qQPJdmCyk/QDtvqirt6ntzwj+/Ds3NuUD4
55H9OOU8wj+06wJ1XVofiKg+cEDLc4z2uCYYDHAsW+7bgPaOGZr51qmOPi8A
NS+Ek+cjLSHPpwLyfKQJ4iNyTVIuT8o9xArO69QSc+oMdvq5h7WQv1dAJa+k
hR5HRMXxsuGgvwPhn83i17OrCf+scxLNMgps/J/mCzDkC1D5QnuewKKeJ5wi
zw9xIM+tqiTPD1En5b40+aSpZWVr+9rA1qn1y6j4j9BnojK440cDFJHnGNwm
z60yJc8xoNU3YKhvQNU3c/Lcqhjy3CpD8tyq+6Q8npQbkXIJX93fYjFE3JTv
/prlGgKJWpYbF27ohCVz7konSNTBOaVrH+/Wh4Lxr1bl5sed9HghKl60+CL4
m/OvaPwFDPwFFH+pkudcPSDPufIiz7lSIeWmtPOvjnmnzH4RWQXSPAbCD5f5
QY6maKFdfhcUru09u7umAo7HqLXZbvOEvtmjVPZDN5RGRpdxnqdA8g65C6O3
hSP1b41Hbe24kEzelxztXK/59kEaF0ya4JBoiGwypwHFJW9nvTpSS+9DgKEP
AaoPySfP5+HhqbuMz7+aSp7P819yniv/KKf1b4ihf0NU/yZc/eBq5Ip6iD3n
qzvTqw7Gsxcc3L61md7fIob+FlH9La2e/HX+Fa3+oMK/OReLNi8ghnkBUfPC
RvJ8KnfyXKw35PlUsqTclibfpJm2tqW3DY5Gz6sMifuIOj3kdKJ+MJ/jQZvX
gGFeA2peo10XqOvS7AQGe4CyR488lyadPEfrFXkuDW2OBoY5Gqg5Wo88R8ud
PEfLmjxH6xYp96KdryVxTnW+OJHvh0ReueB8z7uksQjnu5+HhyrO96dT/T7h
fB+ve0QW5zuNvxDFXzS+Q3v+5jwu2nMSYHhOAtRzEiny3K1h8twtNnnu1lJS
/o12Htdi2XFOON9juudvtiPy/eXO0ZE439/3L63E+b6Be0rNjsj3C1Kr5HC+
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
K3tyH/Ljbmxhhf38P9taETk=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["A", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\[CurlyPhi]", HoldForm], TraditionalForm], 
       FormBox["d\[CurlyPhi]", TraditionalForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, PlotRange -> 
     NCache[{{0, 1}, {-Pi, Pi}, {0., 0.7652318812567758}}, {{0, 
        1}, {-3.141592653589793, 3.141592653589793}, {0., 
        0.7652318812567758}}], PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Error Plot\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0], "}"}], ",", 
                 RowBox[{"{", 
                   Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.843326971011079*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"859fc6f9-8bf2-44ee-ad36-9aa7356173ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Allerror", "=", 
  FractionBox[
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["A", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
          RowBox[{"4", " ", "A", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "B"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["A", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
      SuperscriptBox["A", "2"]]}]], 
   RowBox[{"10", " ", 
    SqrtBox["2"]}]]}]], "Input",
 CellChangeTimes->{{3.843326979738305*^9, 3.8433269799412885`*^9}, {
  3.843327069302046*^9, 3.843327097508937*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7f4d9bc9-1a02-4e1f-9121-9a0a10469325"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Output",
 CellChangeTimes->{{3.843327071250326*^9, 3.8433270980232687`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"abc8aa84-f3a2-4bcd-9c29-ae1fdbdfc916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", "Allerror", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[12]:=",ExpressionUUID->"640dce13-62c6-412f-a05a-119280595cbd"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CurlyPhi]"}]], "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[CurlyPhi]"}]]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       FractionBox["1", "16"], " ", 
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CurlyPhi]"}]], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[CurlyPhi]"}]]}], ")"}], "4"]}], 
      "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CurlyPhi]"}]], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[CurlyPhi]"}]]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CurlyPhi]"}]], "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "\[CurlyPhi]"}]]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["3", "4"], " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CurlyPhi]"}]], "-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "\[CurlyPhi]"}]]}], ")"}], 
           "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Output",
 CellChangeTimes->{3.8433275765945683`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b4a66889-2c79-40a1-ade6-073375223fa4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.2"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327487830753*^9, 3.843327499077253*^9}, 
   3.8433277012819614`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"eea74247-dc5b-46b7-b037-edd4f543e649"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"2c68fddc-0b7d-412f-94b0-1a8bd2f34e54"],

Cell[BoxData[
 RowBox[{"0.35355339059327373`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.04000000000000001`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"0.12000000000000002`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327595146907*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"1c03e4f4-89d5-498e-829b-2b4aa82bff83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"0.35355339059327373`", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.04000000000000001`"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
     RowBox[{"0.25`", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", 
        RowBox[{"0.12000000000000002`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}]]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[15]:=",ExpressionUUID->"0bfd7d7a-14fa-4b80-8159-deb1750308bf"],

Cell[BoxData[
 RowBox[{"0.35355339059327373`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.04000000000000001`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.12000000000000002`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327597959947*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"7aecc831-18e0-48f4-860d-8ffb5d35a84f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.35355339059327373`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.04000000000000001`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.12000000000000002`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.2, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433273937937884`*^9, 3.8433273981527395`*^9}, {
   3.843327515608884*^9, 3.8433275265637007`*^9}, 3.843327557936087*^9, {
   3.8433276058907356`*^9, 3.843327667791148*^9}, {3.843328992529213*^9, 
   3.843329010804688*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"9ba6b039-a09b-4de6-a31a-45bed1efb2ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.3"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.8433276976072607`*^9, 3.8433277150630946`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"fb64ecf7-8b34-42fc-a06f-d2ae57518421"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"2ba134e4-f432-4e6a-b17b-0b8418b6764b"],

Cell[BoxData[
 RowBox[{"0.23570226039551584`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.09`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"0.27`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.8433277203292685`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a71f300e-fe1c-45a1-913b-64d73e0b09e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"0.23570226039551584`", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.09`"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
     RowBox[{"0.25`", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", 
        RowBox[{"0.27`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}]]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"aa67479e-4a41-47af-a7aa-387e5b66097b"],

Cell[BoxData[
 RowBox[{"0.23570226039551584`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.09`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.27`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.8433277218724513`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"8d69d81c-5232-41c9-85ec-b16ac934bc5c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.23570226039551584`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.09`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.27`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.3, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433277287683563`*^9, 3.8433277388395743`*^9}, {
  3.843329023394952*^9, 3.8433290257174125`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"59306887-e139-4391-96c9-05b06755904d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.4"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c86a2922-e1f2-4bc4-ab03-fd8585bb8856"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"2ad2259a-3707-4420-93de-0f62a200875c"],

Cell[BoxData[
 RowBox[{"0.17677669529663687`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.16000000000000003`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"0.4800000000000001`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"247e8e50-24f1-4ef2-b0c2-683d0aa228c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"0.17677669529663687`", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.16000000000000003`"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
     RowBox[{"0.25`", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", 
        RowBox[{"0.4800000000000001`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}]]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[26]:=",ExpressionUUID->"92c734de-0ee9-45e2-857d-6de94755ed40"],

Cell[BoxData[
 RowBox[{"0.17677669529663687`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.16000000000000003`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.4800000000000001`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.8433278405201845`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d5477fa2-e3ab-46db-a7cf-f5fbfe2f4750"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.17677669529663687`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.16000000000000003`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4800000000000001`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.4, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.843329034859843*^9, 3.8433290380336995`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"770a4e8f-a406-4b86-9a37-dffac45dc586"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.5"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"07738866-058c-44dd-a9ca-2c51dee06541"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"6536a3fa-efce-4598-9a83-f204ac328ca0"],

Cell[BoxData[
 RowBox[{"0.1414213562373095`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.25`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"0.75`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"535c03bd-550a-40db-bf26-af37b05137e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"0.1414213562373095`", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.25`"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
     RowBox[{"0.25`", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", 
        RowBox[{"0.75`", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}]]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[38]:=",ExpressionUUID->"768cddd2-6cf1-4a30-91ce-1228a087d544"],

Cell[BoxData[
 RowBox[{"0.1414213562373095`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{"0.4999999999999999`", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.843328162404344*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c89c7058-8f3f-4d66-91d8-eab583771aff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1414213562373095`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"0.4999999999999999`", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}]]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.5, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.8433290492788267`*^9, 
  3.8433290514068594`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"4387d0cc-eb63-4739-9ee1-4ba1394085a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.6"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}, {3.8433282564860563`*^9, 
  3.843328256624282*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6587f60f-bf13-437d-9ea4-f7adeb7d029e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"64ef6c72-3d7e-4628-a364-db4dba54afb1"],

Cell[BoxData[
 RowBox[{"0.11785113019775792`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.36`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"1.08`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9, 
  3.843328260065701*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"64e97e35-3d18-4dfa-a134-27aedcb4fc27"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g5", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.11785113019775792`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.36`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.08`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.6, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.843328266438014*^9, 
  3.8433282735019903`*^9}, {3.843329407859212*^9, 3.8433294098876495`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"14961ed4-b4b2-4dd6-925d-d18d82be5165"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.7"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}, {3.8433282564860563`*^9, 
  3.843328256624282*^9}, {3.8433283325983353`*^9, 3.8433283327052145`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"0c06eba9-159e-495e-bf6f-b5447c18606a"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"bb858810-a681-48eb-85b7-ff1eea7103d5"],

Cell[BoxData[
 RowBox[{"0.10101525445522108`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.48999999999999994`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"1.4699999999999998`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9, 
  3.843328260065701*^9, 3.843328342124886*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"044663dc-983e-4848-97b4-264c5324e661"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g6", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.10101525445522108`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.48999999999999994`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.4699999999999998`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.7, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.843328266438014*^9, 
  3.8433282735019903`*^9}, {3.843328347270645*^9, 3.84332835114198*^9}, {
  3.8433283991845284`*^9, 3.843328399294483*^9}, {3.843329056876397*^9, 
  3.843329064257574*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d8c82f68-a9c4-4631-9eb0-c26cd86925d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.8"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}, {3.8433282564860563`*^9, 
  3.843328256624282*^9}, {3.8433283325983353`*^9, 3.8433283327052145`*^9}, {
  3.843328435490697*^9, 3.843328435600728*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"c0cc68ec-51c9-4d26-ae68-d003b1a39cc2"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"b81aaa43-167e-459b-96a5-3dd1537969f7"],

Cell[BoxData[
 RowBox[{"0.08838834764831843`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.6400000000000001`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"1.9200000000000004`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9, 
  3.843328260065701*^9, 3.843328342124886*^9, 3.843328437696669*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"120e283e-3b52-4207-b5db-ab304956c3c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g7", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.08838834764831843`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.6400000000000001`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.9200000000000004`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.8, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.843328266438014*^9, 
  3.8433282735019903`*^9}, {3.843328347270645*^9, 3.84332835114198*^9}, {
  3.8433283991845284`*^9, 3.8433284427790585`*^9}, {3.843329070607853*^9, 
  3.843329072495985*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"642cec22-a4ac-44a3-b867-b1b685c3b74a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "0.9"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}, {3.8433282564860563`*^9, 
  3.843328256624282*^9}, {3.8433283325983353`*^9, 3.8433283327052145`*^9}, {
  3.843328435490697*^9, 3.843328435600728*^9}, {3.843329107122986*^9, 
  3.843329107246523*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"4a1065d3-770f-4986-a72f-708debef482e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"4368b133-8230-4353-b717-23b3c67b2e09"],

Cell[BoxData[
 RowBox[{"0.07856742013183861`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.81`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"2.43`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
      ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9, 
  3.843328260065701*^9, 3.843328342124886*^9, 3.843328437696669*^9, 
  3.843329111008151*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"e7f9088d-3cdf-47cd-871c-21e1a27de0e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g8", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.07856742013183861`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.81`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"2.43`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=0.9, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.843328266438014*^9, 
  3.8433282735019903`*^9}, {3.843328347270645*^9, 3.84332835114198*^9}, {
  3.8433283991845284`*^9, 3.8433284427790585`*^9}, {3.843329070607853*^9, 
  3.843329072495985*^9}, {3.8433291161629143`*^9, 3.843329121249997*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"74cda62b-48b4-4ddd-ad16-4c3da7b26819"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", "1.0"}], ";", 
  RowBox[{"B", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.843327754237907*^9, 3.8433277543731384`*^9}, {
  3.8433281534210157`*^9, 3.843328154408358*^9}, {3.8433282564860563`*^9, 
  3.843328256624282*^9}, {3.8433283325983353`*^9, 3.8433283327052145`*^9}, {
  3.843328435490697*^9, 3.843328435600728*^9}, {3.843329107122986*^9, 
  3.843329107246523*^9}, {3.843329197855627*^9, 3.8433291982632236`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"e9d3bb0a-a948-494b-aac1-ba28c5fb86f7"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "B"}], ")"}], " ", "B"}], "+", 
         RowBox[{"4", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "B"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     SuperscriptBox["A", "2"]]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"cdce46a7-eebd-4419-b7e2-2053eec00582"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    RowBox[{"-", "1.`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1.`", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "-", 
      RowBox[{"0.25`", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.75`"}], "+", 
         RowBox[{"3.`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}], 
     ")"}]}]], 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]]], "Output",
 CellChangeTimes->{3.843327837803935*^9, 3.8433281578713474`*^9, 
  3.843328260065701*^9, 3.843328342124886*^9, 3.843328437696669*^9, 
  3.843329111008151*^9, 3.843329203149774*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"fa1c0ad3-0b20-410e-96e5-6fe573cd5bd9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g9", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1.`"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "-", 
           RowBox[{"0.25`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.75`"}], "+", 
              RowBox[{"3.`", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}],
           ")"}]}]], 
       RowBox[{"10", " ", 
        SqrtBox["2"]}]], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", " ", 
       RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A=1.0, B=0.5\>\"", ",", "Smaller"}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8433278639350204`*^9, 3.8433278877764482`*^9}, {
  3.8433281678081017`*^9, 3.8433281782406273`*^9}, {3.843328266438014*^9, 
  3.8433282735019903`*^9}, {3.843328347270645*^9, 3.84332835114198*^9}, {
  3.8433283991845284`*^9, 3.8433284427790585`*^9}, {3.843329070607853*^9, 
  3.843329072495985*^9}, {3.8433291161629143`*^9, 3.843329121249997*^9}, {
  3.8433292054209647`*^9, 3.8433292184256325`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"a7f2cbe4-c6e3-44a7-b810-d6074a67b69c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempcheck1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.35355339059327373`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.04000000000000001`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.12000000000000002`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.23570226039551584`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.09`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.27`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.17677669529663687`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.16000000000000003`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4800000000000001`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.1414213562373095`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"0.4999999999999999`", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}]]}], ",", 
      RowBox[{"0.11785113019775792`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.36`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.08`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.10101525445522108`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.48999999999999994`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.4699999999999998`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.08838834764831843`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.6400000000000001`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"1.9200000000000004`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.07856742013183861`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.81`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", 
            RowBox[{"2.43`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1.`"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "-", 
           RowBox[{"0.25`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.75`"}], "+", 
              RowBox[{"3.`", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], ")"}]}]}],
           ")"}]}]], 
       RowBox[{"10", " ", 
        SqrtBox["2"]}]]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[CurlyPhi]", ",", " ", 
      RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[CurlyPhi]", "0"], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Error Plot\>\"", ",", 
         RowBox[{"FontWeight", "\[Rule]", "Bold"}], ",", "Larger"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.2, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.3, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.4, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.5, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.6, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.7, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.8, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.9, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=1.0, B=0.5\>\"", ",", "Smaller"}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8433279123477087`*^9, 3.843327978246816*^9}, {
   3.8433280225585732`*^9, 3.843328116088525*^9}, {3.8433281882278323`*^9, 
   3.84332821029428*^9}, {3.8433282844400263`*^9, 3.8433282981219606`*^9}, {
   3.843328357794376*^9, 3.8433283725186663`*^9}, {3.843328460125285*^9, 
   3.8433284737658396`*^9}, {3.8433285203161182`*^9, 
   3.8433285675606637`*^9}, {3.843328609205626*^9, 3.843328638845194*^9}, {
   3.8433287422268248`*^9, 3.843328861218461*^9}, {3.843329137317194*^9, 
   3.8433291473276653`*^9}, {3.8433292307389097`*^9, 3.8433292428794994`*^9}, 
   3.843330106648742*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"6edad230-70d7-430c-9170-70c5b36e6ecf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
k/TW/mWjdp79662wb1w61Jj4g40i/abWR2PXrh61UetkI8vzw4yf2ApNr0Zz
WGxUcTBvmS5unzteeo+217PRfyl58+HYLdrfpCqq2OhFvOmzRWyVn77Je0vZ
aG51V7kLbn+vcI3t9blsdKowInAQu92IYJi9ZaOC5nweF9xfWnO3rdrj2GhT
6FHJBewn2WuHbCLYSH38TtUr3N/d5z56/nzBRrQsbYnteHxsk7okfvUJG4VZ
XeF+w/51u0Db/RYbGcjS8fqHx4OaVfWiExtlp9yxXIPHX1jn4nFfezZavZ6W
9hd73+7D7qEWbGTGG78kKwP375I+lKXNRseP1KW9eYf7t/yJmY4aG92dh8k8
PD8srm36XroOt8cZ/7oWPH/4W+8IMSTYiHggIqGK55tdjLhx3/AMCttuRjv8
HvePSWG3468Z9O20k1ZmKe4fvtMuI10zyHpvwnJpPJ+rLqaEzjXMoEJm824h
RIN1Wrs6pDNm0P6r6n9O1uD1yfxPmGbiDJpj7xr9RcPt7frq2P7oGeR5oGnD
fQYNmkr+NrgFzKCJz4pSNfU08Nj9BrVemUHS0tvzCwgaJJ8/dG/o/Ay6VLR+
0LsV94/P9A4B6xl0IOfrrjNtNNhYdzRv65EZ1Hx4QUW5gwat5otJIRozyPhY
K2NlHw0WXTNs05VmUEGIlr8qXg/Vwk/KVa2ZQUatX0z2/ML9+fVd+JjoDNLW
F+gMwOvppgvn/E3/TiMDnsm4+xM08HWrvCaWPY2Cd+0X6BWiQ264k4ZyyjT6
6xvnfw2v153vV/3Z9WYaRSdBr5AoHbQXrts5BU6jzOG4gSN4ve/xVTze4DyN
hoskpLatocOOiMe6/pun0SpwP+y+Fe+XpfsEhXKn0N7LXptTHOiQEVxcdzNt
Cqn8dvC6iferq46qQd9ip5D6cL2N0TU6/F2xdPWHwCnky+OZIXabDqMurVqu
V6dQp/nWtgVfOkwrn7fu2ziFdt6x7riG90++UK/8ijeTCCnGVtuP0eHjpfE7
GmGTqCUvT3rHNB28KRcMop5Poof+A2slZ+kgOHyg1u3eJPLea6DZJcAAspF4
j4bVJCre2ePTtJIBYosxS6JXTKL6tw+vy+xhAL91lU5z2QSSKJpIzr7LgNVX
ymxvP5tA2/xLM0WiGBDFYOxf6j2BmA0Xv6XHMkBWuU098e4E2rBJLMQ0Gfvb
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
AfoJN0Nz1ghRTo0dyVkvRUBO9CQr2kCI8kRx7PZylf97v4Kyy/RzlwHOHxGB
0xY3HglRph1vLQSaEEDLEvrwzleIcmn35YoBMwKmGqQ3/PUXorS0R2w0tMD5
RmT7lEOoEMVq06WhPzjviPrdfnUmSYjSGvBrUcyOAK+H7E8HaUKULp6BU4U3
CXB05Z6QX0KiHHd7NHAe562s009Ul4uRKPoxbVWbwwgY37N8jixJopy3t7jD
xvns7jLN+PFVJIp3R66rF85zgdm2gzWqJErW7Wa/ywk4r/YzHlw1IlHKv9q1
Jb8jgNt83NzWmERRJDU0G+TifFncp3TCjERxqN78ojWPAIbPXC2cIlEk4u5a
TeO82KmotVzqEonSeoc5L1lOAN+Z8LT3fiSKjRX5xDucNw/sVbqb/YxE4Usz
kVxeS8Az9VzjxCASRYmr4uWG8+kKbt34swgS5cbujiuaOM+qhC/on0sjUVa1
E3Z3CAKOMu2ZQgwS5cxty09XOgkILRlPnK0nUSTfqa2Pxvm4PfbBrdFmEsV4
bk6C3k2ArXPk6o7PJIrjigTGcpyvXUUa7bN+kyjVViHPnvwkIHqfDvcYiUxh
CZe8qv1LQHrWyfAKETJlV1ajas8wASUr7uqoSpAp+zJZt0Zxnm/7Wem8sJJM
Ufi9cbsQzv8Svibf09TIlK43W7UXpgiQH77hJbWZTCF5DTuPTROgeSJs7f2t
ZIqkwuLp3hmc55W7Th7TJ1Ou+6ob5nII8KVdbpg3JlM6jdlq8vMEvNIMvORo
TqbwWvs1j2AnheUKsU6QKWu/cdaULxBQeZFNSTtLpkyw5d4d4GHBnJBvofl1
MsXvRXWkGj8LRK69Nf/gRqZ4KIU6t2PLfm4Y2ehBpjjJzfx8KMCC7alSavOP
yJTFx7nv6YIsuHEg/k3qSzKFaLbokyOz4OG7aj3JSDJlpljy/VvsIJn+9nsx
ZMprquEmLWEWZP3WlDJPIVPCamiDm5ewoNzEPKc8nUyh6JP/e4tdV+xmvPEd
mbKxNnqVnAgL+p+UP5krJlPEI+rzuNgzIz1KDuVkSlztvYt2oiwQsuSvYlLJ
FK+xt/k12OtVDs2l1JIpAmGfVj5YygLtIKfIZU1kiq2vmNYnbAo7aNs9Aj/v
+I4eZTEW2DA+u5h9JVPcZUkCH7CdtGaXlveQKTtWiLrz/rsPi5DLUP5BpgzN
VHrvxvbn2XMwuB8/3/uHsid2pKP9z9khMoVvi87ZAuy0Fr9HF8fIlGTlW5t+
YxftyJRnTpEpYOgavEKCBTVxzeV6XDLly8p5f/h330ieOJWyQKYsGf6+yh77
u4v0jAS/MEWxgsfAF3u8fefLuyRhyuGdWjMJ2Dy7z2z5JSJMKa0+tq8MW/yt
V5OphDClysNMpfnffemypCtly4UpM2rL47r/vZ/pTicrrxKm6FsFZP67r9T7
NpActFaY0rsnw/jf+5v///1Oyv++3/n/AFHTfRA=
          "]]}, Annotation[#, "Charting`Private`Tag$58486#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$58486#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
STN/lxN2w7zBoJjEHNKoLglej/1ton7Vd/Y5tGmTEsMjiQYxY1nhq2ZnUc4L
8DLGthwJ3npofBZd/LRtryJ296DBnlfds6gy97jbYCIN/v6qN7Yum0Ubgh/l
XsZ+/zPre0jRLNKKuph6Atvle7D9h9xZ9Gjs9o1d2JNtBre3Jc2iqF/H3acT
aEBrUWQ3jplFUzdS3nRg324WDPB7Pou+XXsaTWLPf6mP7vWbRQ9ymZ+fYZfW
ZkmJ3J1FGeuz5m5he1cHZ2i5z6ILGka9VtjcnwxQit0s0j58r0kFW6C0vvuy
1iz6j+NmRc9rvD+Lsq5EHZpFwT28Vo3YoQXBk1X7ZhEZnxJFYIvkG/AoyMyi
32Z3euOw23IUn5lvnUU/YkNHg7CjsgTXPxWdRV0X7oXcx96aXr9jmHcWdQjb
PbHB7k7NytnCNot2nGj9aYydlBKsrs9koYZEfvI4tmyiwcmsfhba7e0lsRt7
MF6xpauLhbaXl8Vsw06PE7ywpp2Fbpf+iVmPrRhV7+L6mYVard9LcWE/0rvJ
wSJYaOX1q12seBp0LW58fp/BQgblvoqj2KrZ5HaeLBa677xS+A/2s4uX6IEp
LFT2S83/B3bfulU6wq9YyHP0wqMW7EOVOd9ehrNQ4K/fol+whxUWF5IfsBAM
72knsbV+Jj7beZeF5jeephRjx4XoSOS5sdAtKx9Ew54+MpKjdpWFTBhpC9nY
J6efHyUvstAespXMwE56q9Zy/DwLeSD5lWnY82Zdl+qMWCg6sactGdt4lT/L
WJeFUgXOyyVhpyP5Jx2aLKR7hmPpNTaXa8MmmwMsJPDI4Uw8trnUrff9iiwk
dnWf4ivsvJZNVGdZFjrycHdgHPbKxx8apray0PVNSo7LtlF3uOglykKuO/dX
LbtwaNUUx2oWkrhjlL78fqH4XP/HPCw06pcjuLyeo9G59YKLTFT/MH4mAfsD
11Jq+BQTuXh5W7/BFqMnqW8eYqLBtQ2n3mK7XtatTexhIlqBPPEO+/PGUUu5
Tiba4H+UloktXvdiNKuJidqPDO7Jw77tre67v5qJztrzqBRg1yv9Ei79wEQC
3LElpdiyvf5vjhYy0ZWvNV/Ksb0jFPZXZzPR3LYvV6qx23QaKw1TmYi7dia0
EVtx/pZZWzwTeanka33Dfvh+8z/LSCY6djD4UTf2D6uyu73PmGgMFMz+Yu8T
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
h00p48lql0ZhcsGrugv3L6Y9Kb94nUehb+3HNiPc39RbCp1NuDcKVhW3ZHXb
6ECc/qPZGjsKmlbsjg+q6PDqYIioZucoyP4sjlDI+l9/BTX2t/gqcX/FFdU8
+cR6DHbxq7hJ3KVDmmS5NKfjGCTlm/Vvxf3ZjHJiwJjnGEj4jq1RcqND8Blr
o7qYMZibKfmc5kCHsujvvx52jUFlab9rvxEdHKVqhZf6x8Cfuv3LKQPcb2YU
H7s5NgZam+/2FJ3E/VppdKotxzi0rNq5JU2bDtNd565rSo3DYs5VjpZDdJCV
bmGbuzQObK9ERmwV6FD3vkLJ1WUc8iNfWyrj/tN9f77twO1xcGKz4afg/vSD
9vPK1sfj8HHvRvbybXQ4f8UoOO/dOKxaXWH9YOP/+l94v5Njy/J8LiirbqvT
yDiU5L03l+ang8qBUsPemXF4Jv01wRj3z9/IjP/M2SZgXnhf1CMKHWSaAv/o
rpmA0wvXbrFz4+s7pZspozwBcy89evYu0mBC7dOhXzcn4BH/e7nXYzT4eDrr
2Kd7EyCVR9UD3N9HXn2pl+E/AcVr+b7/GqbBobgrZh7hE5DStSSv8o8GAeyC
N9fQJuAO8SmG/8///j8BrPbwc+7uo4FkpWmG5tQE5PDfffPgOw2mujTzZBYm
YN1JwUH7ThpUsuSKVnFPgl4O50a9Dho4yS9Utq+dhHyREXHJdhoUBr3uua4y
CZp7a5vnmmlgaDK4MeHGJKwoeRplWUsDKacmyUd3JqGZ2+6DZw0Npv2Ldzj9
NwkBFDajqGoaxDCC9quFTUKY7O2Hvz/ToH+j8unGnEk4vLPANvYjDYpUNpkx
Cidhk8Xg76YKGgSd5LaO+zAJVyeEHq/CVrnf6uTYOAkLEQlSAWU08O6+E8Ax
PgmWc4IlKQQNTs/ZhvSzJmGm6MCjaUQD6bWnIuvYp6Bu9z1VbeyaY+LJUWum
4OvgCdnJEhqsTy0nlfZMwW3il921IhpkOq9i2bhMgVdUqfsPGg3+NSnOjN+e
gp55+TQ9bDlV4ylfnyn4dCwtuySfBkls0WMJoVMQrXJe+G0eDaJCZAe786aA
9rZTJDaHBq1TJ/pdS6ZAe6CmTRx7rZlzH8fHKYgskJBMyabBM0lat2TrFEyk
SEsXZdHAL/dIhw1rCu4Ibphaek+DD6KX2sfZpyFy3fGJcOylOwGtviumQXVt
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
E8k=
          "]]}, Annotation[#, "Charting`Private`Tag$58486#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bEmsILb/rSv+/bxRGrGKdcjZE3NQqPKjTZM0Yufr0MEfmP1uV+88OUsjvmeu
2WOH/Xk8fkXSD2E6oelkVngE+9/xyUczKTE6cfGVaP0gZtt03xFLcTpRLvKx
P2Juv0LBe8uSxXTCUO2VQxuOr63F3rzRpXSi/WUGeojjT+3d8tSNSnTivxdS
exxwfC6tOzf53zo6cXkXR30M6yfJb0uffdtAJ046KEbWY/00r7XMVkKDTshl
HjLl4Pjm9cplXtOmExvfXOr+D+dD//C7vUX6dOKq3L9/yThfOiZP0UcM6QRz
1sgtZ4YJ9SJv7U9Y0An/yhiRNqyn3ot7CTy2phNP6a768/hIoGRlmV/20Anv
jN8yujgfc1Z5CJs50ok/QjoNRTh/bxlIFqz3ohOmxYWHNouSEGRafNTlLJ1Q
ts+LyMD572ftOj/Rh064w+H/1uF6ceLQK5cFV+jEqMPkVROsvwwuHpMciKAT
nuYOPyZkcX0KnI/WRdMJgbd2JRSuT2rXC086P6ATW1KuMyOx3lp6X/RN/WM6
UUGd/7xLAfcHZu6ZAiadaJraEWeE9VZ/4aGl/Xl04s2pYK+D60joKBGuWMOh
E3XnIs8GrMfz/8eDCg9f04m9iscWNeP6+qKTv/pSHZ24cvXswOLteH2KdusN
humE74U6nwArEs73+xts4tGJPFeLKmEbXL9KnuxXmqIT63briCfYkvDIsf8a
XYCP0LfdsbdlP+4XcbeaXkvyEY9rVr6qcSZh+6LXdww38xF3fVXtD/mTsLP1
b4rGVj7ifIFZmi/uR3YvFrxcocNHhH8WKYkLJOGUlWMH3w4+QvZ4qc5YGO6H
N8f039ryEVGrXswujSFBjE+Nu+McH7F7n/l9YSYJS2rthDR9+QixfOGTWVhf
rf7v0lJlfz5ip/93zn7cDw30K00FgvmIkD0mZGUJ7rf+Lk/eRfERoUXDOySq
SWgZjLc1JvmIwXWn4jf2kcD6LZy/k8tHKHL1dZw0WeD99UNZ+DAf4X6jLddt
Owu2Vt39WsPjI6ajjv28qM+CogLZKQc6PzHyR2ZRgSkLSm+u2XFagp+IV0tz
jDmE57ONJrUPNPmJDd/bg37cYMHMpbDeTj9+4idLW0z5D9YXUoKrw+kChLSv
SP1LZi74mmtqZdIECcsFxSfm7cmH/h3Pku8JCBKLQt1GIg/kg5ue3MJLDEHC
SqZhgaxTPhxUp3VaiAsSyWL1qUpe+UDIfHzYqyBIGBaey1W7ng+ibcem1UGQ
8HX4u0r+VT78dzH6XeFlQeKwTeH1z0oFUJk+aFs6IUjEHr8infu3AHjlfK/4
ZgUJa1cfn/V9BbD6r8RKgl+I4E9Dqx8PF0Dwqs1DL0WFCMHlO/T86IWgm3w+
mrlUiHAfrLncL1cIzEfD9Y/0hQhhe7+Mdsv//f0i0Ts/sTgnohDiIkbtzgUL
EVVXw8ICswuh7LlQ8YswISJlzNDHmFUIIx9lVvXeEiKeX//0jZ9dCLaiW0dc
o4WIj54rqj3fFoLYjQv3D6UKESPmuT293wohMIj32bRMiFCbysT9lA1u3hP7
FOYJE+JB++df2M+G5wevr5NaIExs0M9WmD3IhkFDqSmGhDDxYFpQJdCJDZcW
qT0ZXCJMCD8z5/dyZ0NEztHu0nXChOysfj3Xnw35nRVXPc2ECbeQRX4PE9gw
8Wmv7VErYaKxjSHw/D826Be2Ke/bLUw8cQmlc1LZUBE6VQkHhAlzX3LTy2w2
NK1Ql5J0Fyba+IYjnIrYwHfoQTrnhjDRpdiUp/WdDSZGypdybgsT4St/Vlc1
s+H2etIqJVKYOEyEtjv+YoP0xPvB23HCRMKF+3+dO9mw9sGMrlO6MHHUYeO9
+aNs2FV7vFaoQph4ba3S9GUhB6LZgymTH4SJZFup1G4JDnx9fNWX+0mYeNt7
j29MmgNHTz2U//5FmNB9f8BzWJ4D3qJVx5//FSa22Mnuu7mGA4+MNSf2CDOI
a5YOdTJ6HMh8vv9BiSiDsHTZG9kDHGBLX9JcJ84gituOuhcacqDxz+tTM4sZ
xKbvJbaqphwQD7P+na7CINKM3tres+WAQt+5QMmNDOJx1ftt4ns5oLYvdtmV
zQzCMTGPcW0/ByxWN+/fo8sgarPuWps4ciCs7OTHaSsGYXD7S6vZcQ7cV4tw
d7NlEEaBWQGnXDmQGksK1e9jEArdn79cd+fA6xM8Iv0Ig7C69Ysd58WBKaGw
fNuzDOJIYESqhg8HRE9n2Bb7MIhHwTKcKV8OyH352L/Gn0GEy4u7v/LjwNZn
kirTwQzixfcj4TIBHDhn8iTpWQyDuGx2+fSOYA4EvXinI/GQQZip/R4mr3Eg
Urbza0Aig7iZfpUnFcqB53/VJG3T8PdrOV7s6xwosrZlFmUyiFM802+8Gxx4
X+hjteYFg1BJGyjYcIsDndeLrk8VMoilO+KKvW9zYKy/Rdm1CLP1oV9hdzgg
ZM//ppZiEDuXvfe8E8GBlWvNp9IqGcRFOWvyQiQHNCK9Hi6qxvZXFjhxMIoD
BC9SK6COQfSnx1/cfI8Dhyu+nNn9Ax/f8CGfiuaAl/rk/KIWBpGl8u27z9z7
6rjlWavbGcT9A8/3K9znwC2aoWlUJ4NQu/tOpRjzQ7fjfyZ7GIRfQb6tdSwH
0mtuBJ8YYBDDFzSqP2Mu2JatUDvCIKa3CyfYPOBA6X+finQmGMQaJflXCHMD
Y+hA2gyDiBY/o7IyjgO/z8iMifOLELqZK/75Yx78uj3mkrAIoWF9crQMM83g
0KYOURGiWeHhbuGHHFiYEVhtIy5CqE/JT+hgXr4o1eOVlAjx6Zp/v8vc7xdc
LGesXiJCaMvs3zS3n0DnV9fTyGUixK+6Uyga8//3+wfE///7B/8PDjljkg==

          "]]}, Annotation[#, "Charting`Private`Tag$58486#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H55L8mGrTCXOnET8//5fAPa//y/g/wCa5JdY
          "]]}, Annotation[#, "Charting`Private`Tag$58486#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9732/wPwDKSA
          "]]}, Annotation[#, "Charting`Private`Tag$58486#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
P2yNPf9y9yEK06s2P/erdoD/ACae4QQ=
          "]], 
         LineBox[CompressedData["
1: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

          "]], 
         LineBox[CompressedData["
1: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
Ze06PG4KUWH+bt+wnzb+B0UCpro=
          "]], 
         LineBox[CompressedData["
1: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
5IyQpptuzldI5PWbcsrKo0zxPzGlsS4=
          "]], 
         LineBox[CompressedData["
1:eJwV0Hk81Hkcx/FBfr/v7NRGI+mUFBE6VhfV57NUju5RqpWiwuhSlIhKirGu
xjmG+SlSIyVdrpqKlQk7SFuILUVlIh1TE4vs2j/ej9fj+e/baKcfz0uTxWJt
Gt7/hW/PE47spzBNYhZ83MMeXuoW3Q49ROEnoYdBvDYfRs6VT7pzhMLFiyyK
0rQPge36xjO9wRTqWN9nfFoPwx6/dx+sT1A478nKDunYIEiL/77RP5xCyy2n
vxz9cAzk+dS9gkgKJUKN+MTQ46BW6M/oiaawSFCiMaLpJPA4C9U+SRQy5hOa
1OxwCDN3cL8oovCbf+f1Zo3TUOC0ubI9g8LyBeMfLeo5DSOjjqa451DoZflS
dSUnAmykgh/puRSatp/umBgQCb5ykVfzVQrP7kp2fr9YAPIRJfNdCil0M1XH
8W9FQdipvmeOcgrf3CyL2bk7Bq6dJ8siayhsiJh/eJp2LLx4YHCpoo5CrWST
g6+zYsFmaFHgsiYKT+67M7TqcRx8Oxasb62k0NCUw+VqCYF/uN/V8CcaFVs/
t5j2J0C+m8BM72caa0WliSvmJILKTm+QjKHRv9pPGu2VCCG6Vlmq8TROzY4a
lVObCPHXPLsrzWhMSsjuLUhOgkJl1cl9TjSOMrC6bayZAv31m3iea2hcvXDG
WI5lCiwrbp/uuoHGr+//Kdu+OQWqIgarYSuNNq1S6aa8FPh72hw9ri+N0mpP
TblTKmi6i3JLo2i0b5feCD8oAofl00OuxdJYYLQxfnGSCGJn3VhzQUjjpJW2
YaGFIhjbX6OKTaMRu2dPutongpmioSUeuTSeWZJZ/iw4DdY2eDVQVTSqjS3i
VvHFkFSiujDwJ40OVyKOrT8jhuZzJwM/19NY8fRhtOqcGDwPiCe2NNEokwXO
1m0Uw2FOrVd+J42tjdClWJoOGSus+11ogoH3q9vqBtIhL3+z6D6HoMkO//kR
ehlQMjbE2kyHoPc+Vr3CIgMa35YfGDIgmGPz784x2zJAJ3JdR645QSnzXSUo
zADDj/5h3NkEJ5fPDXxekwFWrqmTT/xC8IaDxauytgxYZfJis8sSgvO6c3e4
EAlEyvcofqwhuD2u9H3SRgmkWMX78nkE7Yx2ncvylkBO6g3qL1eCPdq7KxyD
JFDu3Ye5Owj23tZ/tjtdAoNUZCHvEEFXI0X7i+cS4Phd5t07QpDF0u4sU0pg
QpPik+kxgkcj+RT2SmChlGv+I5zgAffIIi6XAX+HrExpMsH0bsdZBisZOFXw
0HaMmKCPo/Pejg0MCMcpm0MZgp+Klleudmcgv9OKy7tEcPnZ8en9/gzI1vGu
y/IIup/nBMNxBmqKj6wxLSDoPHWpjbGAAaVAJhgsJsg1rdOrEjPQ+6ltuo+M
oFnYx1O/ZzNAbdH6o6GM4MSK9qCuPAaMZzoPXqomWDq1KDXmDgPzhPvFunUE
z9tZairKGcA+4YLQJ8P/hxSHXa1iYHtV08ENrQRHLA21WPuMgf1zBkbJ2ggq
fQ2Eo1sZCE2bcsXkDUGj8tSAQ68YiGbZOSYoCW4YqewJeMuAmO/1duADwQeG
LnrjuhjIfRwV7v2FoMg3uP+3jwwULbpq2KAmmG/sdhNUDFSer5fZ9hPkm7mt
rlQz8JR83XppiKAswK6pu4+BjoP6vTpabPxqa+9xa4ABVfPi5BCajfqPBlQT
hxhg/eo+9x2HjXtagsQzWJkw+nJY3XodNga1LNz2WCMTpujm7L2rx0YqZabd
JK1MsAh+REzGD7v42nr2iEywfd11UTiZjbUfs2NEw3Z2+tl+wIiNGndd1PJh
/weB813f
          "]]}, Annotation[#, "Charting`Private`Tag$58486#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
sY2XnQ==
          "]], 
         LineBox[CompressedData["
1:eJwVk3k01fv7xaWigUoiQ4Mxc5maJDuSzIS6UroylrFwJbrmVCohs2P6fE6T
VLrhl4QGpJKUkKkQhTQ5x5mc4Xt+fzzrWa+13u/17L3X2sreYS5+oiIiIm3C
+f998uKvbK93M5i2lHf0/McShbIiaYt6ZmC0Y9Xa2CJ/mJf+qo//NIPTfpGd
9BvhmND4/IPxdQYqVe1tfd2nkF7VsT701wyOb7ZNNlh5BsbbG/eNM2egKzku
v6UxHv1P7yQfFqGh678J3bvJiUiwLa7pWkTDZWNN5/L5ydDouvTNVooG6s2c
6gUBKeg4dEb+mTwNyxS7zzs9OIvIsSC77So03H9uMC9wOhVPZm3vaRjR0Mj+
EiKqfwH+cSYjJTtoKMpUMY0zS4OkuLa0rCUNnjWJTHmLi/CQW3xqwX4aiOWd
CUp6l0EzeWE2EkWDCsUlw9EtA62uVXtexNEwX8l0j3pNBvKDC+zvpArfH/yy
7pZ0JsxKgjxO59Kw5EnPR6tXmUibtyJKqpYGidHKWjHlqxA9/Mz4bT0Nvnz5
l/aHr0LfaDR5qIUG1dipPSXPrqLHtzrzVjcN5nP84qgj2VBpc79jPkuD7bTq
zkepOZgdNq/W4NFwumK4eeBNDtrY2vWSC+moswr+Ni6di1AdXlvfKjpEleUH
PlJy8Si9fOykMR0eV05MrSHzsG//lCIRQcePKNXw7tQCqIV2qZyPpWPH+hGX
4aYCMFIfa4Um07HWp2jtVlYBKA/Tt5pcpSNJzzSp178QE4pGru//o4MSKHlt
t2kREkZj00Rn6PjOz6Htf0WB65xv5gSbjlUn+lbmsinYsMoxv2PeLMxkbKiO
msVo36N0vVBqFk2r/6nTTymG3K3mp4YGs5Ad7Jed2lyCe2GSbO8Ts/i7SGbn
xaRSTHfpM2eiZ3Hi/M7PPndKob3NbTYpcRZL16zTrustBVWk6A+RNYv8gJ+F
YTJlKMzUnBqtngWdGhFT4leGlAe7B7zZs3i3yXS0mFOGZ6sD+mbmMWBGvK7c
IlEOQWxab9ISBmihedG5a8sRY/mui1BkYM2iQ1WVKEdY95H20Z0MjHScMzFL
LIcH83SDdxIDf+p1o8055cg7VFw/k8ZAmLTMi8hFBD40PalLusqA4tnrDpGy
BJzOi9cSVAYa+9eJ9BkQsJTPuTvaykBLWHIa/Akk/fuwMvwtA22SScYD4QSa
RgYqRD8yUMcfGbeMJ2BSoXJDZZIBX+KgZnIegU07qkq9lzJRciHFq6qFQHBp
V/GMNBMZ/2anPO0kUDGfWZS0hgnlss71xAABtfad+YQeE9L0xkPvfxNQ8Hyd
MerEBKXcaAlNjsSC+K+J3tlM6AUVfHHxIhEaMX//UQoT0TxvvbEAEh8DlDS9
qExoJj+csg8jUens0eFZzUTPUeaKa/+ScFPpUDj4gYnj1oPK4fkkGmW///hr
kImwuuMqT0tIaC5d9PTAGBNbI69rTVBJcGnmAW50JmpEzl1srCJBttQ8cFrF
QkpetGl6KwmJR+9THdew8Ppzg0zpaxJRd38ddFBjYehnTcD5ThK2eVoidsYs
TLR8uTbWR6L6olWXjSkLmv4rb/31icS6BJ/r1pYsqL+ZcCFHScwcK7a3cmPh
2qmXz5unSBz2fLR+z2EWLj0NKCn8SaJ1X+/Mbl8WDt/4aGUzQ6LQRKrAPJKF
3dvHVA3Ywnw2bQzedYYFlbv9xwK5wnxU7YAUFgYonpQzAhIWEmfHTbNZcCiJ
+66zkIpKEeLhDgoLvyX8Vr0Up0J2tvGiCZWFQ6mBVlhCRcLkwJHtlSwkvbQ8
ly5BxdQQy2BbNQvJ9+wGa5dR4fZeZuHWxyxQJ07bPlxBRWOr4cfNzcL7lSE9
WSup0Kx3um3czgLf43iK1Soqsu4Fxxl9EOYh4+beJUMFl7ywz3CQhRirR/u3
r6bCP/+6msEYC88VO+Kj5ajovPScuWmahaOcgL4MeSpMEodfbaSzsHFYzC9J
gQrqP7xiPS4LZfWdag6KVCwLVDipu4CNydoshT9Cjj6y1VJHgo3pqKd7Q9dQ
Meritlp7FRvyjqfvNAvZfu/JKc01bGz2ibOnC7l2R3qDhhobcu2m6jwhK+nf
ztigy4YvpW3rZyGnqbX5qBuzYTsxlFwoZLrc+BY1Uzas6ocXbRLyEUnRJaqW
bPSIDrVQhPfb5q0fUrZnY2tIat0XoV5Dxo4qJTc2JEy3jc4XMmXKPXn9YTb+
LJndyRP6Ffv8z4F1vkL9F/xfvRXmcaIrS2ttMBu5OkMpsbJU9L+4x1WMZGPj
C6dAEWF+lo/b3yqcYUNq46FTR6SpuFs1ScinCP1Wm9/MkaIisUDVZnU2G1Fj
I75XJKnQFb/G/VHEBpEmcdZzKRUfIzdUNZNsiLle3i62mIqNzlqrwx+wEUd6
2X6bT0VfQ8Ur63qhH9ddRevnUZGioxu3/jkb+J1+3JBPol9s03j7ezb+evLE
5xuTxNnIqnyyX6h3qV/iBToJ/VED+5hRNq6eYwkW/iFxrsH4gcYMG//NRQgu
T5IwjjRJTJLi4Ojc2eV9H0l8Hqk3PijPQYXRbzOHDyTSnHZObFLmQJzyb0rR
WxLD2ruchvQ5kCbV1VtbSFwe2bN2mzMHWxPtglyE/dzm9KJzmTsH36K38nIq
SIw9tk4Z/5uDFerJux4I+2ySb/c9K4yDRuaxshhh/7867qv7kc5BQYz48h1x
JDIfvw9uzuVAYUtVtO0pEqbabkpFJRyc9gqWMjpBImvhX+es73KwHCZnrxwl
gceH95NvOCgabLSNsCAxpfVpUUw3B88zdyy0NSGRm/f3Y+chDgondW3ZBiSm
w71V+dMciEYSMiNKJPK1jv1xl5iD1P1tvPdcArvzJqmbVs3BrXmRRxCNwM8F
Qe5ia+agGikeOTBJYM9wSNMDnTkUr9QMsughMJMbcXmZ3RyUJiyWaN4hYLcg
Xqv5whykWaJuxq4EvBpMPlhmzaGVEuFpZEUgKooR11Io/O866S+ynQAxEfKh
9fYcIPcjZ/46Aqz2w/Ev38whknKz7cZ4Oag5Jt0dUlxolCwP0A0qxyNHRryT
AhdGr64NT3uU4634f9qdKlwYBilMRNmWg3NaK+GdERc3LL0Nv2qWw/mInM6H
/Vx0m0FC40sZuBsYCX0FXNwzrqt6Z1+GlcP3dTwILvo9awLZ28qgURDS01/B
xWSRd/AXtTK4LB3XGaznwia85BmTWYqbv7p6Pg1x8SttQOugYyn2P7yvO6bM
Q2kAI7pzpBiBJ0N6fbV5yGt67tF0vxgJ2lpJ44Y86O3ZkiufWIxKSlnv1908
xPt7RIivK4Zo4pWkST8e1C+Vzz/nTMFdm5CPP2/xkBCwuPVWTiF+Z6m4f7rP
A51SoyPydyEMB3t739TxwPyi6nxboxC1oRa9lS95yFpZkPCntgBNV1f3BE7y
oLr3y/eO9nyIDrXv9/jDQ6ji7VrPjHxYbkjqtmHz4H7MOXi9az7aHk5/0FzM
hw/kVTb05KFz6GnXV00+vI9rpuW/y8VKjVOuPfp8iAyX6sql58LthG5XyzY+
CP/U8lybXPSJ5r2nWvPRYEQvDGnIwahG8DvvY3xEzS+SO5GXjY38lgiN83xQ
FD1OrnG+CtpJ2befbvCx+UFy/r7FWdhS/9qx4x4fBxRsvOZVZSJ6QWJHw//x
kSXZqlztlglu7vc3lBd83Aw1LyLzMmA2XOZw6S0fCVdnLuVtzkCC1oE3sb18
XPhubccsv4IFj5+0e3zj43VLf1M2/zKsFkbZ2/7iw1dv3qdY1cs476jTvp3J
R9lNiy4v80uQHMl5LScuQL9rm8khvzQ4a9vZLVouQHiDg0/d8QvIihB5zZQV
4JCVnlq2z3nIigW96tkgQM5gTMxPg1S4OynZtm4UwCuDPnpF9CwK87tf1mwR
IIPUulz6JBmDI2k218wEeKTguNHtWBLW6ex6mW0lAGv5cM1RegK8ImetUxwF
EOnZEvmzLg5EQ0VbxAEBjnW6f3XRicWYmJe1zxEBHNQl/fpXnIKGs0ybi78A
+WnFdA2JcAQWvNprESpAxL5ZE4ceP3yr/lBYGi5Asv6N87dGLPA/VkE42g==

          "]]}, Annotation[#, "Charting`Private`Tag$58486#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NJvmWFZxEiwUhg9Nf83C2vIjPfzkHfA/KHZKjQ==
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$58486#9"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        SubscriptBox[
         TagBox["\[CurlyPhi]", HoldForm], "0"], TraditionalForm], 
       FormBox[
        StyleBox[
        "\"Error Plot\"", FontWeight -> Bold, Larger, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{-Pi, Pi}, {0., 0.2979093821953227}}, {{-3.141592653589793, 
       3.141592653589793}, {0., 0.2979093821953227}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"A=0.2, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.3, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.4, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.5, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.6, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.7, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.8, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.9, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=1.0, B=0.5\"", Smaller, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8433279611796784`*^9, 3.8433279794186726`*^9}, {
   3.8433280423408833`*^9, 3.8433280689647093`*^9}, 3.843328116543295*^9, 
   3.843328210784273*^9, 3.8433282987443*^9, 3.843328373150047*^9, 
   3.843328474420884*^9, {3.8433285398424387`*^9, 3.8433285689270296`*^9}, {
   3.843328622631626*^9, 3.843328640438965*^9}, {3.8433287433844852`*^9, 
   3.843328748345684*^9}, 3.843328786048016*^9, 3.8433288622834044`*^9, 
   3.8433291486319923`*^9, 3.843329244655876*^9, 3.8433301110331173`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"62b7633d-b1af-4dc0-a161-c76aebac1e30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.08838834764831843`", " ", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.6400000000000001`"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "0.6", "]"}], "4"]}], "+", 
    RowBox[{"0.25`", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "0.6", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "0.6", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.75`"}], "+", 
       RowBox[{"1.9200000000000004`", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "0.6", "]"}], "2"]}]}], ")"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.843328890078554*^9, 3.843328898294267*^9}, {
  3.8433294991953526`*^9, 3.843329510945419*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e206e90b-2b81-4d89-9130-791c6da521fa"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.031042817871546214`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8433288989259033`*^9, 3.843329511915324*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"4f2a6ef3-3203-4246-bde4-0c113d92365e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g3", ",", "g4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g5", ",", "g6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g7", ",", "g8"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8433289422239466`*^9, 3.8433289711550083`*^9}, {
  3.843329277199774*^9, 3.843329290709568*^9}, {3.8433293504483767`*^9, 
  3.843329362253304*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"766b6b71-571c-4aff-a8ab-c28a6b1232b2"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
7E03/fd+4/+9/0j5//cf/weQAhTa
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45542#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.17677672802135122`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.17677672802135122`}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.17677672802135122`, 
             0.2979093821953227}}, {{-3.141592653589793, 3.141592653589793}, {
            0.17677672802135122`, 0.2979093821953227}}], PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.2, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {240.53333333333333, -124.74}, {
      Center, Center}, {450.99999999999994, 230.99999999999997}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw12nk8VO/3AHD7jLRYKoWyVEokJBVybkVFtoQU2cpS2Soqa5KkTaSFUEKo
yL4U3eda5yZZSkhIkkolu5mxfZ/P6/X7/cPr/Zpx595znnOexcg7e1u48PHw
8LzCP/77bWS4cNeUvDDl9iBxVVwYDTpFQUPMlcLUP7GZ83exVeR/Jy2VEqb8
Npv738RecfPQvtVLhamdxY9Wh2Iv5LDY6uLCFCqbCvDEnjumlQ4LhakD3wKC
rLCHmtIOmMwTpswIbaWt2D26Ery2QsJUi+2Ri0uwmzMvvnDnE6ZSNRde/nuR
hsrFQ7ZnZ5kURy9Yk8LOD7UXDucyKeNjX2/dxE79U18cM8GkZPjP37fCvmOj
c+zRCJPKHAzftwz7cvVTsexBJvXUyyLrYygNZ9WWoVcD/11P/dVNbBvm+PLW
XiYVzxfR/fcCDYa+R1nfupmUVM7r8bvY2j3NvsMdTOr8imtlW7FlSl80zv/A
pBoSn1t6hdCwYPWKYKlGJvV9cnwdL/bsrevr171lUvMyUXZUMH4+N/fLu6qY
1Jg339v4IPx8H1o19iMm9Xd/2jFJ7Eow6LEvY1LiMpJ5twJpSJNU0AkoYFJQ
zHDxCaDBjfV5KDeVSQlWpBuPnMP3u8noIfmISTU91Iw2wN77qHRffQKTCu85
cSP2LA3rz91N/xHLpB4u1cqX9aNhUNHMbmU4k7q00reefYqGL7dfC6uEMqkw
CYNBeeymWeWSbUFMqvPxxiYDHxzfVqa4lS+T8re91B7sheMVUcm6foxJtW3q
X55zAt/PiJpfvCOTYugvs31xHN+P/SOFDDsmJdTo4ZLpjuOlFRRcacmkYvcE
dNxwpWHm++ZNHH0cT8szJySdaQg3ePrQdQ2TMl86ZKNpQwN1PcBcVp5JLQsq
56+2pmG6eR9fuwyTOnMwOdPEioYz9oMuhouZ1E+thb9MLWhwPrdpgwo/kxr6
yXtR2JgGePq6bLiHQZ1A+xc46dEQ8C/K81kng2IKXHGN0aWheLOj7NF2BnWy
Uv1LmTYNqpV8l1oaGVRpj9u2OS2cz897jEpIBtXSkN0JG2ngzn/fHpTIoEyy
Xlo+X0mD1oHUa5vjGJTj5P3hEBkaTsf76g7GMqjE9QWfjaVo+LVGMtnhOoPa
MKWR1raEhnY9O7edAQxKbMMqx6fz8ef79I8zbBhUdmOGB8FhwakWrnisBINK
vrus0qqBBfcszA7fWcSg7h7vd3r2lgXlTamP74owqMoz9724NAuE3hmrxfEz
qMhY0c4bVSxIrHlokjQqRB35megaWMoCunhnZMYHIWrq4+PdYY9ZsDL+2kxZ
rBB1vkrvlbkPC+qOSP3skxCiuIdFVBp4WWD2SBe4i4Qo9PVDgOpsLbT02N9b
NF+I8u5NPnydWwtdR1P1tQWEKE5ibbf2aC0MHVd5fGtMkDq54IHvqb5akDyr
d1j7oyAFCw6RRG0tHItyrr91T5AKfBLw8cqVWpghn+VqLxektgbcXlfNWwvf
8odj9gsLUFnhRQY61dWg9Vio5aYIP6Vv1R2gGFUFugrvVa+zeanJ2g6FfsNK
SJYQ0TwwxkutEm9JWmtQCfyC+tukh3gpUR5dx5NEJdT9KNr1/Acv9W7DwyaO
ViXYZMfbvG3lpaR9pEc1VleC71anMJEiXso6N7NKaq4CskyHPl4/xUvli/Lr
fSuuAJnAhcE3BniobexLrAMbK+B4Wp1kUj8P1ZG//W6McgUUv4vIz+7loU4q
bTnwfm0F7Jeb+9HQwUOVPHj7zE6uAiJq/lmIveWhXDZsl7grVgH/FjWvu/ec
h7oJPcL3xyioTItteeTBQ130Y2sPlVOwqMHMO9edh6rhSeuIfkmB3aTIvIpj
PJTYx7VFmsUUTBqGQ68dDyUO1goRORSo/PN9ttqEh3rrrCVmnkLB3W3WoU83
8FAml+DtxUgKmhLVbVy75hBX/XWx20EKeNK873W1zKEYFWntTZYUqD3PbrGs
n0N5lEUV334Kol8q7d9VNocGY0X+ZhtRYN4qbyQXP4dk5EWqNfXw9RaJ63ZY
zqEWu/B4QUXssBFZ0/pZNN52b+vZYQQ819Tsa6pm0cYlT2Ql/iBQi/FK1C2b
RV+uKO4v7UcQ/WhgmfKzWeR3OvO+dCcC8/JeMWbkLDo99b3egIWgafw9f+Wu
WZR+8ONFpUcIGt0Lfmwum0Er4DlD3QrB+y+T5noFM4ip4ymisB9Bq7Xuq93P
Z9DIgTcWUiYIOvVrbhxMmEEVrIPP5QwQDMi1qfsHziCp0vTA8M0IBD5xA8t1
ZlCPrJd+piQCpjl8r940g+TlrW0WLEYgwrpk+k55Bi3ht3jqL4pAvGi+fLf0
DMp/pMzjLoxANmZl7dzUNLpVMuadMEWCtuFO0V3l0yjY7Alp95UEPSrCf1/h
NCq0O2+5uZuEHVve9h7ImkZ0kozMks8k7F1jWXQscRqVztzYPtBCghWv6+GI
oGmkctshb4Amwefl1bQ3utPI+ovz/V35JPiqNSx4rzmNjG9u6o3KIeFchvi5
DpVpJPQ21vxrFgkhdxMMf8tMo+Mum+4kZJBw/VT24PyZKVSYL5DokkRCulLz
VvPXU2jDD9EW02skuK/NqwgtmkJy379tlowkYf2aGKO87Ck09kjBpf8yCS/k
9tuJP5xCx7Q01sVfJKFEsvlCS8gUEgv4pGjuT0LAkjym4Lkp1Mva22F6jgRd
iZiYzd5TqOhLwwFLPxKohftT7zlMIaoy7O6ZUyTQgs21NsQUqmsI1OY/QcI1
/jyzq1unULdMlOBWdxKMeWPaX6pNoS8PE26dcSWhedp8QEp+CpkKa3bNOpPQ
Mdq0oIt3Con6XN3takfC769Nlk5VXIQ+O8efM8f3+yW3K6aMix7nmAxJmuH4
dUW7VhZw0cu7BIc0IWGs3fz8qjQu0ug3Xym/j4TpxqaE7+FcJHdJ/fHm3SSQ
73JXLw3mouf6Tr4iBiSEvo3O3u3HRZY/BMZ+7CJBkGWOMly4SP3C4onCHSQs
JJt6j+/moqvLpkYfbiehqSz35AM9Lsqwtl3+TJeE2y+jx+q0uKir+HB/mQ4J
S4vMhVTWchGVOc9vdBsJ7flqt+xkuWhFbvbm5dgPckWX3ZTkIq9PLQkGW0mQ
zWpSGmRw0XGBMut8LRJ6n+bmr+Thold5kc9GNpOQlhGtY8bmoIsDk4+3Ya9L
NTfJ/clBT315Aj5vImEgWa21p4eDgupqDmlhZz0UdRD7hF0d/vm+BglqD5p8
Tr/hoB0ap6q81EmIND7Lx6E4qOX40It2NRJ6ZqXvXCjloL3rMtyMsLfmVawR
yuWgsVOqf6s2knDrqFvJjQwO0i1fDQbY/UsWGEo84iDhiQ1HGlTx+KfzO+Lv
cdDwrdHdDtiDKrMz6Zc5SMLWLyhuAwm7v6Te2hDMQaNaySwC+2GMoXyhLwf9
aDnWNaRCwsSuf/naHhw0fSfydSa2ycQd/YqjHPQxpNXNHTstU7t1jy0H6e+W
7dyIPX24x63BgoPszbZJzSmTYLkggmNpxEEy+TwKrdhZSPn65x0c5Lv94Ggh
tsDpZhnnbRzEH7A6KgHbbvW5Fz/V8PuzrEauYhe2yhDe6zjI/2OXbCi2yNXK
5nFZDjIuLloagu2s4340SJKDfr373HoJ+9XfBeN8izjo+2FLxxhs8eSCiKtC
HFR0WKkgHfuExaFlorNs1BF5orEKu1Jg7um9cTY6d2RD0U9sqZI0nRV/2ei8
yM1jS/DznD5u9C61j412hTzrMsR+Iz1kv76Tjaqts+QisOUa7g7lfmAj1Z/k
hjrs86E6YVvestE8zcWCS3E8mzS+SpCVbDTy/Vv6cex13yOe6L9ioxemJyVq
sEPvq2x5m8dGPfZ/jdbh/LQbvqf3P2Ujncf5JrHYatPnDrcns5GiprCMEM7v
lRcr/tjHsdFwpX5xKHa3Y1Xw91tsdDOElOHH40NL4vgijytsRC75aHYTu/9c
oYb/WTZit3iteInHl976w9VznmzUEFZXehiPv3udc1YRLmzUJeCrIIDHp8GO
ff6xlmy0Yleis5cmzu+8XpStwUYsj/a05C04v+VX9muuZ6P3YxIVobg+LL03
fHslj59feyrHHdcPf8t5IVqUjfKe2DLNcb05Jy0y6R2cRIkTB4uDAOfHrKjb
vX8SuXlWBiQQOD98tj7/uibRp7WnJCtxPVe6psdO108iTW+yU1GfBHm17R1L
n0+iIvWZbFND3J8sft1TTZ1EqrXuGXeMcLx97x7YnTCJyjjLA7/iftJQ+rfe
7/okWjK9o/CWKe6POx6ilpOTKH52LEzPkoQnR42C/hydREHHao6WWeH8XJ7Y
KmA3iS6vF1kDB0lYW2eav8l4EjU36xnbHiahxWIu7bbKJNIuLdfvdyRhzve5
07PVk6ifmUQ8wP1w/f2DKytlJtHE1rJVVsdwPj/n3B+eP4kWyeukfnEjYcMx
x2vmfydQyTaP5D3eJET4VXgvfDGBvq045HTsAgl59z1VFNMnUO8bC70ruL93
vlz+a/vDCRTDv18s7xIJGrOnnD2jJtCd0xuSluP54UuEglW91wRymdnmpheD
+0HcJe1rGyeQ9bBPQlsa7jevDASF8sbRiVNusmbNJDyPKak7kzmO7sS9fBaL
5zcPd6Xor4/GkSUvGdHTRsLfJQukX0eNI3uhhZtj8fw45NOi5usxjjbtNLhi
9wfXv+JRu96142hPUFTbBTzflsy0yJvLjiON7u+9hgsQnG/Z/eP10nFkJvLc
REYMAefi+tPxguPo7L8z+h3LEEx3Dl8x/zaGrt8wrXu1DgFfbGgB+XAM+Q7w
ly00QlB1fOS8yr0xlDo+xHAwRRBOHNN7cHMMmRET5SUWCAQH97zxCxpDjCBn
xzBbvD4wXPRF5fAY0igNuR3kiWDhXNK8hCVjaFXCeL5ALALpk2VO526MoqM1
Tjud+xA8oOndC8JH0bD0OfX0XwikFFuVUwPx6xqWaiOD2F+HxhtOjKJr77ce
SuEgWHZQ8Zqi4Sj6I9yVkMegYPGumPyPgqOow1lkTmMlBfOl3fg1L4wgwaNy
zeqmFMzWiT8ZOjWMQrZPX2jD68P9cYpFkieGkRjyTNZ8TUGai3aNnvMwKnNt
G7tDUWDE4/z9hsUwshWrVndgUXBvc94apU3DaFHOcNXyjxRsSDZLdxobQrzO
w2fWDOP1pt+NjPdnh1BJ/SXeK3h9ewbmWx6fHETiDzYndmVWQOmmd9R40QDa
I7R8UXd7JeSI1eZKvu5Hxw4M2+2cXw1ntOP59bx7kYHDUNqNQzVw5450p7V9
Lzoid2tPuH0NFA4mFXqb9CKBoHOqAUdrYCIlxeWxci9a+is329GzBs6LZLEE
fn5FMU6MfMmLNRDSSV5/6/gVDZRu/rw2swYiQ/okDln0oA+mvn6Px2pA+7LD
3p8nOpHi5qslVy/Xwht28BP7fZ2obvRkdezVWrDxSOT7qNyJPnQU9j24WQt+
Bz6VV/z5jM7s/rYv+W4t5MofUE/w+owKCxxVrjyphbXkbinT0x2oeiXMUdW1
sHhyw58C/3Y0LFo1W8XDgtQTxobrD7ejzfsW73QTYIFG94n0ZO121H/Ikp/B
ZIF5TYbjzak2xJzjGdRZxILrsfIfXYPbUNKPh78CVrCAT20JufxiK5r4+afQ
cBsL/rlP37oQ2YJ8X3o4LfBiQcsLdVFT1xaUvWdQP+gUC16NuUbL6LegX4oV
Hv2+LAgPbY5+OfcBJVZ/9ssKZIFUXHrM6NkPSLX+d/9sJAv0Weaxbi7v0R2L
iFUvU1igtCBCQmvXe6Tidles4wkLFh4oixWQf49kzytwxjNZ8Kl7zZ3Hnc0o
5Sk3ZWUOC7wmuHc+H2hGx75K/tAoY0Hcmif3zHY2oQyZJt+j71kQfLJj6Uq5
JlRb9Gdc/SMLapxlVT9NNaK7PP9UptpYcDhgTFXiTCPKHqrOCu5iweWnD9Wu
ODUgCyP9iJ0/WdDBGN3krVePPJPMTOlpFlyqTtAGNgsttOjVeS5Pw8+GbbEu
pSx0WXZj7JNVNJh+avt9/TwLle+6+efBGhqkBiWS2tm1KELhTcJZJRpyJW/M
neLUoPf6L54Oq9HQdSKoOo1bhZIqDS6N4f39Tj+pFW9fVaG/+Re/JxE0ZF4o
9RsOwK/zta3ZuZMG3ztjinpTlWj6Q/bWQAMa5pEeV9umKtC98ljvnH00eCm8
SlyMl5s2exMDVx6kYduWCROnAISOfeP55GtDg4Cxxlw2l0SRlwcmag7RkOD3
zGnP1GvEaKzztLGjgaYfKAZMl6G2DY+k9ZxoiO1qbasNKkNbl3ebn3CmwX5E
/KrEzCvULrdXO+YoDePS139nzbxEi43+rmp0oUHBOzD3y2wJ4rsqrSJygoa/
l0qcVC6UIL+21Z3zT9JQGjcq7j9XjJpt0zYLe9BgVnnST5ynGJnrKfUMe9IQ
tMRO24C3EP19VDgSdoqGPevjfsdcLEDz/J+/O3SaBnFoSezmLUChOSKGymdo
eOpuPHeOLx89Bp4VpC8NrWW61c/4c5HTPPbK1HM0yPg7d4/Mz0Ees9LR+87T
cCNgn2a0+AvU7y3RNIh9MnhFT92KLOSh6v9yTQANHSFCWu6rniODdX5OL7GN
Qv9dF1R6hoq5Dh/3BNKw/lLFFkIzE4XnOa20CqLhQfizm13bMlBM55aRD9jz
ImK/BUA6GvEKvGUSTMNApMutIqM0tDptwWr1EBoOXzP9bmGeirS2m0glYNdd
36IzZJWCdit3ts1hP40S/rHeKRl9PLQw4+UFGjTkvvtHv3uIzlm0lCwMxc+/
qmTN2/ZEZCC2Mcoee2TN1WbBvgeIDENKT7Gb19kGE//i0Pd3KtcGsXOVNygF
cu+hDMvVOaoXaYhWnWspEryL1hceijuO7aPeHDokGovW10QYPMI210xVUZaJ
QdqJJ4sbsR28BnLfmkYhiWsNA1zslb5RzB0u19Bb6aBeuTAauv01HIsDI5CE
9J6kHdhJF1pLlG+HIccopvQR7NJ54yt37g9GMi8f2Z7B3rJ0e4NKiB+qlh6x
D8c+uWvelKr1SSTi+3t1NHZToWYB0/Eg6i8Pzr6H3eKbpaeRB/BE9TH7/n/X
P2fwyzzxKHD0LIXuYJvnHq7Z/vgUDCYntF7773w1TXzpAV9/GNEPOx6E/dTY
ZVNhaihU2ixH7tgDuys+690MhwN7zreZYa/fsSL8zdlIYJWW56v/dz86/iqW
jjdA7/a8/QuxWx+cOPFvdTSUjl/P/46ff+J+HFm4/Db07zjVVoK99G6teMDC
OzAuNozCsbfcHnMF/ntgun2vhzG2zS2FMgH2fXBpe9m5EPv8DfNFdX/i4eDG
W2L1OD+lEVkllq1JsDzk6Rst7PZLHSJSbx9Bh3aySR/OfxAhkPvvSzIkEfb3
b2AnbdcQKGpJgU6N9uB3eLyo6hq+kGxMBefCc9Ku2KS2o03AmzRYkPkklIPH
X/eWqCwg02F/YGmqKLaX1hPrlNIMKMrJd76Dx+usZjmPYEEmpMy6/BbHXqkx
YFmX8Qwkf7ra8eDx7qCye8Yy5gUY6mk1JuJ60Y1Lj5pIzoE1ZnTST1xf88P4
RY1tciHhw11zVexff48+/uuWB7PneNwy/GhIqVldrXalAJTVKT9zXL/RUy03
eBcVgnhnUvhJXN8h6pet3t8rBL/3jaGhPjTYJn3vP5NeBBt0HXbHedGw2C9d
uKSmBNTqTFUu4H7C99z6/RWTUoCvRW+PH6dhqEcoweZjKRhcfn7U1J2Gd8Zu
Kty+l5BJhV4SdKUhYvU6s+0C5cBj75irjPvZ9C/LOid5Cgr28u85ZE3DqEC2
qpELBadgsW6fJR4fsoKxGk8p8D8TvPv4AZwPqyJbfvUKWDGQk+pkTkNRxZK/
aUQlrDJ6UyZihOMZ37rop0M1rAyIctijS4NLoapvU2o1NPqGFvlq02DXGNFe
+qMaovu/GyRupWGf4JbHV71rwJvlI9ehScO6U/c1lC/UwkyGBENsAw1f99pY
eT3EeR05KewlQ4Pe9yCnd134uvMFSRcp3G8uPvZUWfEGWuSlYm2W0WDxauDy
QMIbmP+Dzty4mIZK5eBi1/g6GG+aepMqguO/MEXS4U49GEfu3pzOwfP/wPif
tQZN8DrdyXstnh8dtzLPtB1rAtH+jrDIRhZERUhxIsKb4FHzBfHv9SwYUADB
/qomyMvcURDNYkGKbeSKtJ3NsONZlHV+OQsk3kmZyhHvwa/v0RKFdBaM5UDO
Mp0W+N3kIl3vx4J6ZR1xnyMtsM6V54TDabweydDyY11oAfkP8sN/8frB4tEG
nbPVLVBBfS6fdmNBXpQ064PJRyj2+NL69RCe3z0nu6McW8Fs84KYBl0W/Fif
s1Awoh18LBVtDs7VQseTlV7DTZ2wfivD+dj5WigWyrLIHOmE8zuV2wV9ayHW
bdsWh8VdIHqjanGady0YK1nyvDvYBdbb8jitrrVAZl29ndndBds2LFkpaVUL
jwvGih3+dENjpbOOkHotFDp+n+u/1APucb4Db/trINCrbK/Vo15oinM77bSv
BmySNx5MvNkPhaIc80apanC98obvS9MAiC3kKxhpqoSqcGXlG28H4Xbt1Lb9
hRWgPXc3WfHzINisPLpKN7cC8v15llYMDILhbssrSlkVkOL1kWdC+B/ET2TV
i6RVQJjNhVaHvf9A8l1X1mBsBexU+XBxU80/mBXnZKn5VkDP8e0eng5DwLDc
/rpMqwJkMkbStd2GgP7N1ZnWqACbvoyvDO8huLzhVhxsrIAme/GDKSFD8GmE
MdGwtgKoAz92tCUNQQ/T54bo8gp4tD1GckfnEOzQkDgmP02Bvdj3ysWHhsFw
2PzwtWoKBB60jF13GgZrNz+RXrxef6ZQrch/Yhg+WDr5bsfr+clNqdeGA4Yh
Rt303FwRBdHWThYNicNQfOTdpdwMCqoSur5e6RmGuT052fR1CtYptvJMuY2A
i4WG9hdrChpe1Gic9hmBv6G2U3kHKPDbUnTs1/kR8GBJ5UeaU1C59w7ddnUE
jK8OCe40osD2pEV04fMR0Fpz0KNvOwVRuQ2yXv9GwL6z1+DXGgpGtVl6X8+O
QuCxc15jwwhqD+QasEJGIZLdJDb5B0GcR7xxdsQoDMYsauT5iUDv4cnD/vdG
4ZNF1AOlbgTXeEXPihWPwksb1rWmOgQKtE32jvFRaPkraOf7BMF+qwHplDNj
4KTp7rTUEcFqrw8KkYFj0KB0YssM3o9NRJQreV0aA9HlKeq/DyJILI3aoh07
BuQCodudZgh+Sm868D5/DOb5BE4vJhCE9gZe4xsZA1U+202d8ghyvBdwnH3G
QZTgGaAGSPjzQW1y5Pw4pKVvb9z9A++vt1qOh10cBzXjs0Ifv5GQxpMwnHJ7
HLYH/HGd10XCg5h1A72F4+C88+aH9kYSwgt2fXbmjIPbULsHfwkJlZJun0Z4
J2A6x3psQSHevwdeawubNwGSnZfL5fJICNBv/pAiPQEm3XvmOTwnwfujfX3v
9gnIa1sXoJdMwuFJ/9fOYRPwdmFX0pXrJNy3TSobuTYB130EHy+5SkILol6G
xU7AAoWE5ucRJJhFMopT0ibg0zO14iG8n9dffvdFb+0E/LopcbLzPAlhwaVZ
pxvx33sVljw/SwL6+vkZX/sEBOcsX3fJlwTtZwoZCr8moEr4lLeRDwkbdXIf
OYtMglvl8XPa7nj//uhD0ojEJHws16kwciXhGf9kQpjMJLQbhKw5eoyE1fXb
41I2TEJWe/PWLEcSpI68je41m4TIjKcnHx0iQeBC/0XnO5MQXaEhIWxCgtcZ
fiunxEkIWn/tav4+Etrd5NY5pk3CTU9ZvqNGJGSZH244UjgJql+mJ9r3kGCp
0CB1qGUSvKz4Pi/bRQK59Pffg52TYC1cYMrdQcI6EWaFdd8k/LrdT/YSJEyP
7nCzHMOv5265TeuRkFpTVGC2mA1XdoyO/NAmYf6r9xGmMmxgLlq8jRf77It/
h0xWsyHJsf2s/DYSjO4r8ezTZMNiSqHt7BYSCq/v/mCoy4bclQ/Zz7VIWBl6
NH2vPhv6SjIW/dxMwoh7kvFuSza8+Boo46dJgt2RV7IGdmy4U2ArVruJhNr9
bSO7jrFBzmqMswL7gbZY/A5fNixvzEjrVcfx2ajqQQTh++PhuJhhe63aBxDO
Btcq7+VVaiTsnH/5u+4dNogcOm6FNuL48KSU6iSyoSxOv2sP9tJx8rp2Ghsq
zSes2lRJCP312X5bFhvOx25GntgDXWz1rYVsePXx9TIRbMv3SwS3lLNBc8zU
OWcDjmetRvvmajY4bM1OOPzfeWGZ2XPNejbIHHlcPR/7do5HyKYWNkzdZnfW
/Hfemnp1v0YnG7aHh/ddxnaNS1+t3scGYxvpz8bYTTeqJjf+YcP8kvuUFLb2
xZ461TH8+W/b7/xTxvXkN5O0YZoNp/ZUHnyLvfCE1CkVAQ7YH9UVfoF93n6L
vvJ8DkT1bnp6H7vXwlJy/WIOBEg82BKJbbzn1MA6GQ5INR8rvIBdrBP1eu1q
DuReipL973xWTu15tKIKB0B+qf9/57PXVtNH12hyIH7DHHULe2zZd63VuhxY
9mr/ZAq2/QK+eav0OcDnIiXzGpvmle2SN+ZArM2Jjd3YGhM6uXKWHEg2PKgu
hJ8nccDmkqwdB0b9puQ3Ywt98bNeeYwDO1P8eE9i+3y4rbTCgwMsyV+NGdgd
rJxpaV8O3H0cfPM3tn55faNUEAf8rjpoa+H4vsj9lbI8nAMRd1DrFeyL8asM
Je9wYGvAh27A+VJhPJn+m8CBRQ5DW9L+O6/1VcytTuXAtMQl3UU4/6rmSpKn
C/D12pcZcrA/vX5Wt7eMAzyns/efx+MnXFklRLaKA6ivQ2gWu0No4/f69xy4
amx2foUGCZd9c+NSO3A87+/ZXPLf/wd61Y0DejmQaKOTfBCP1yuvNQvWjnBA
KD/lYhYe35q+2hfDxLgga7Y6JB3Xx5evZZqHlnNhZWR0sd9WHG+z7T83ynMh
QM8veR+up571hFmXGhfCUrOuieiQcPOrwYqt5lwICShlfcb1udWM1bTQhgs/
txY+6AES+sr3hn934ILrzPVVf3A9a8ft+33bmwv7rHYcksT132+6/+XfKC7w
GcS4krg/xJS/96i+xwW5kVVc9l4SdNdbyiU85AJHnbVXG/eT24IHr+x9wYXH
puJSzcYkQLmdVeo7LjT7LX9sZoHrQ6mbGfCRCwmFAfLUARLu3XcoN+/igs/6
ductVnh+OO28avYPF/ZEZStr25AQp+Q+bDN/Cp6PG/6Jtidh1/1faRsXT4GE
B//1Lbj/DQqctBGSmQLRl9uH+5xIMOjxRAXKU1BwOEnS0gX3i3tnbi7cNwVG
pfp9lzxI2CdwQan66hQccR7dtT6IBMfX2i36t6dA7KDI8pMhuD+dnQipeTAF
r4a47IJQElJ+erbUPsefX7Oi+8hlEtj1dhfevJuCgJjX9uK3cH3d1f7YIDYN
9hM++nOpJLwynbhgJjUNWl8qrCrSSWhk5K9vUpiGPza/w68/JYHrrxTavGka
JKPO7NiaQ4K5/TLlFqtpOKVXeGD0Fa53xYnQT/HTYGpg/GnoAwniPXnKh1Pw
3zceMd/cRsLaeM/WjmfTsFNAcPJiBwkWIt+VO8um4TOSbdv0lYTMfx9au7um
YfD8zAxnkASr0jyVPvkZcDRqKhCdj+CFoWf74NMZeJFssNTTGMHQbQWb7rwZ
0CZtAr3NEWh0trW9ezkDR+bvWuJviaDYa2db1psZcLnm8/OxHQIUK9l64tcM
nOqJEDXyRNDUVfGhf90svPCtOjN2C8HoqaWN3RmzIP6l1y63A4FW2VvThpxZ
uH36t3b8FwTnBS42vC6ZBf90ud1X+xBM3/v9LpE1C2+O9vSEDCIQKKfqD/+Y
BbGLKQxHXgqWCp2sa1Wcg522b4qMl1Kw9QGqaXgyB37Ou7wbd1LQp5qj6/5i
DqL/htWNGlAQU/WwgLdkDvqyqnfIGFIw8Cf4sSY9B1/y3of4m1GQCLrBDwbm
IDCub56LHQWhp+2kCiR5CAHptAVzZyn4LvmpOcSOh9C3EF+okUPBC+f3xNJ+
HqI6T0xATLkCnhwP+mM6wEO0oht9y/B6NNFHMe7KIA8h11eyavWmCrgWEvCP
PcFDuKfY5+rrVIDLA4WHnxm8RPf7d8nZ+/D69v3pqWQlXoIztiJP2hO/f4dE
sbInL6H6UeKkSX4FuMpZKu8Y4yWCvg4cljCohPxvjKLdQ3yEbersNwHPKjBa
LKh4nVeA6At7d+rdq2o4a6Sp9YxHkJDx/Dj/BF7f/9uVkXJbQJDYkPKl5M1A
Dbhvl1oUyBQk5gW2EGv/1YCtGs/PfaKCxN73+W2fJ2uAWFof/1dWkMip3Ba5
XrgWRHqPzqiBIGG6z8H3kHItJPvHVpcECxL9Y90CHZ61sPyMkHryRUFiwZbs
679P1cJtD/+kyMuCBBEqZ8b1q4XLDg5nD90UJHg+xJ5fFFILJwyU100lChLr
VhQ1SEbVgqZY1XW9ckHC9e9628TsWniTOWJRwxUkynoG91gO1AKbxVfGNydI
2J48Y2g5WAuKP8RXEfxChLCtrq35SC2Erdk0+kpEiAj6pRavy60F3ZQzsbky
QoRY8HhvnzALchPGPiToCREyNRrfvNexIC5qwvJ0mBCxt/r3WSNnFtRmC73O
iRAiHgMhUenCgvH6pWv+XhMiVNOqJDcfx/s5kS3jbrFCxFrZcYMFPiyYH3nu
7pE0IcJJsTr3cjALQi+yP+6tFSLOjP9JvX2fBe6+XGvZeQxibUR4+AzeX2bb
XlFavJBBWFZ6BWXWsWBk5+JppjiDyFNgcEzfsSBQTPXxyHIGMZxtfiYK71+j
Xjj9rlFiEPPcesXbOllQ9JO+4GHIIO5ztQ1uDLGA22hl4WTCIKpe7Vk0OMIC
vZLe1db7GcTQ5VqVfeMsoC9Pv4FDDCJl+W3rSbw/7lRQWyxxnEEsSf69RJKf
Br4j9zNfRjKI6ruin0/h/fUe/dWBL24wCKsu06grS2m4oZxnkhrNIMKlwo7H
4f34Em7dyI04BuG5t/jmc7x/X3d/Vtcxk0Fc8VTee381DabNLs1CNIPws37u
HbaJhtjSkdSptwzCo+lhqOFmGtofXTg71MggylKmYkW20ODkFS/d0cYgbuY4
vwzVpsFX5J1L9g8G8dLzYLXqDhoSDDS5BxhMYqVBglScCQ3Psg/eJ0WYRKSQ
XPQ2MxpKlwRqKokyCX5CNb3FnIbW7xVes8uYxOw61WeTB2gQjTD7lrmeSZz2
bWgcOkSD7ODpUImNTOJpoSfDwZYGVet7K0I2MYnbYgrvau1o2KfYdfCALpNY
3GXIDXOgIaL2RP2MCb5etHZK9jEa7qpGHXe3YBIjw72iP11oSLuXJ/TBmkm8
GXg0I+1GQ4Urm8h0YBL+AhJGPsdpmBaKKLI4xSQEu9eF1HnSIOL91OK1H36e
usCsJi8apNrq/60NYBIyGnb7mrxp2JIhsX4mjEls5kUtZadoOL3n8cOMO0wC
lS4c3OVHw8Wcah3xeCbxoOfq+SVnaYiW/NkelMQknMKuuvdgZ/9QlbBIZxJ8
POa+zudpKDezyC1/xiTSPtffXO5PQ12Jn8naHCYxtEmbWYf980r5lekSJhH4
h5KWDKRh8t+X1W7lTMKR7MkvwBay4a9sppjExMhMumEQDavWGU2nv2ESJluy
UpyCadCI9owXa2ASctZ3Mr9hE+xoraD3OH7stUyHEBrs6Taf/Z+ZhMIPr+Yd
F2jwVJtaUP6FSewXrNv29L/zv7iVzxX7mESqkRxHOJSGazw798b8ZBK/vnUv
PIYd7+7yfeoPkyiWCg4owc5sigxzHWYSStZBOgIXaSjemiXbPM4kbkq77zfC
rkluLNfhMgneRa1lV7FbmKOH0meZxLwxl4BK7G8+SydF+YWJZS8qboxhj7Rv
uxPIECbGiKQR2TAaeHYcUe8XESa0mouf62MvehraYC4qTNxJay1xxl4plnay
bLEwoanQuDTgv+/T+rOYisuFiYH3QfR/57M6XweeRK8QJk441db/d377f9/H
Jf7/+7j/Ay7z6Y0=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45755#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.11785114340246955`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.11785114340246955`}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.11785114340246955`, 
             0.19148542155126622`}}, {{-3.141592653589793, 
            3.141592653589793}, {0.11785114340246955`, 
            0.19148542155126622`}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.3, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {721.6, -124.74}, {
      Center, Center}, {451., 230.99999999999997}]}, {InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
v50Owfk7DI8ULqGuxpf9/NJ0MGiR1JV4uYS4y48fK9iI11stpPHNeAmFF7F4
VfnxeqIGnoZ6S0g5yOaMzQq83pYgRsWRJdSWy+kUSsHrKazYS1daQsU6NQ2c
3Hg9HY5dzwWXULxSna3cIg3qfMfFT1UvogGDp6L3xmjAFqBoWV66iHpPHrzM
NkoDxRCnGI3CRVS/9WHfw2EaBL8aXC+ftoh4Fw6oJ/+lgUFR9xrKo0W0I7Z5
l3gfDbxLJQzu319Eu6yPoS89NMistAyavrmIOlN0dnj8poFg+7cVvXaL6IVw
klVfFz7+VAPnxyOLSGtT9QFWBz7+guDhA+qLaNplt9uXb/j4XPremUqLyPTs
mEpcOz6+UNV8nOQi0iE/ipu04uPvLp26s7SA1C1y3WcaaPDVIefP3sIFJKqz
c46rigYNP2cMDuUsoBN6SHt7JQ1azmgUaL1bQCuelk6f+kKDzqPlgWejF9BO
tzNGyZ9pMCjRusfjzgJatEMbvcpoMBSxMdrnxgIiKv5655fSYFTAiivgygJC
prqcsx9pMDPf3xJ1fgEZ39Y95EfSgKt99k6R+gISspJ+U1RCA4oB9JYpL6A3
BSErhbBXfv7vVI38AlKQFDrpWEwDoTx+yR8bF5Ct1Dvq1iIaiIds+bQ0N4+s
pQx4afk0UNM5LHikaB49WTwsbJpHg0OEv8eJ3Hlke43jUmsuDTT3V3WfTp9H
fm8KRM5ha28zzrONmUd81V5XLubQwITd3szfax5xnNIVCcuigenttNIgN7ye
X7C7NLb5yLBCxFX8/7Ypk/RMGth8v7WUYj6Pmu0XVXo/0MAl/3HSF415ZH69
ZeLsexq4KdaualCZR+NW3/xZGTS4lSJ065vCPDLo12OLxb73Ilrn76Z5tPJ0
TsBAOg2eXM8Y5l+YQ+Ns1Qcj39EgeUe9qkHxHJpXUz+hlUoDB9ks0jtvDmkf
un6NC1tuW4huVsYcGow5vlj6lgbvJQzNheLm0O/gv8bHsemi9feb7s2hiBJS
1TKFBp7rsijct+aQYdsJJVlsDeGQkL3Oc+iDzjqnsWQaEAKGieEX5lBgvW7E
Y+wK7vpPptQ5ZD1XLV7xhgYBnFn6j1XnUMXOW1FR2HrsIW35inPokmbeLifs
+nmDQTHJOaRRVRy8HvvbRN2q7+xzaNMmJYZHEg1ixjLDV83OouwX4GWMbTkS
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
wf7v92LU//+92P8A+pyxoA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45968#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.08838834850949852}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.08838834850949852}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.08838834850949852, 
             0.13578475614000143`}}, {{-3.141592653589793, 
            3.141592653589793}, {0.08838834850949852, 0.13578475614000143`}}],
           PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.4, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {240.53333333333333, -374.21999999999997}, {
      Center, Center}, {450.99999999999994, 231.}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
2O9GLyIG8f/9/wHY////Af8DCY4REA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$46181#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.06614382479727478}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.06614382479727478}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.06614382479727478, 
             0.09999999999999876}}, {{-3.141592653589793, 
            3.141592653589793}, {0.06614382479727478, 0.09999999999999876}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.5, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {721.6, -374.21999999999997}, {
      Center, Center}, {451., 231.}]}, {InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw1m3k8VN/7wM3YhiRblK2SyJK0KuS57ZLslSiJLEmoUJFCUiEtKmsSmrHN
YKxJ7rVlzb4lqWTfd8b6PZ/X6/f7y+v9utxzzvM857nn7c5ssXI2siGzsbHN
sbOx/fdT5xT/0cUtPERIJ3+SYSsTNLLuj1OkeQjbksRIXcTKW4bei4rzEA8q
f7ocQiz1/MJpWVEeYtmCUJBFzM8qm98lxEOYHHz8jQ3x6tX9VODnIW6ZOZxs
bGHCeF288RleHoK0tiglEvEfTWGSORcPkdEzPnsBcX2CD8OezEN8KL4hx4+4
SGTc3H2FQmTUFWrkNjOB6W3B47dAITR9n6qZIo4brs5+NUshnMKdxUebmPDG
VOPqh0kKsU5Wrece4scliYL0UQqh7JUettjIBHfVDXjeIIX4faZ4323EppSZ
jS1dFGLgcaTqsQYmnHK1LvvXicb77v/yfT0T1P/Uu060UwiKgXHncB0TJHMZ
tXyNFEJPL077Ri0T1spKeYnXUoi+I5120TVMWHkRqLi9ikJM2lzzKP2O1mdn
//hoMYVI6094OFOF1tfYstsQpxAffGluK5VofXD8j8UXChFeFGCzXMGEeDEZ
DY8MCqGfckn9VxkT7Mp+jqfFUYhTv2rHZIvRfPfoRBd8oBAGbWuHfxUyQftD
7unqSAqRGFo1GUQwQfHOW2pfCIWQqL6p8P0rE0bl9C9K+6H5i8k8aslhwu/X
X3mUvSmEs947cSybCXUrSjkH71MI0Q2F9R8yUXxbKEJnXSmEveC+5MPpKF7+
RWWBVymE2tmHVuuS0HwmVd3CLSlEvdk6fcUENB+LDzK0ixRC/c0ONw0qitf+
+15FJhSi7dGV+1gsE5Z79u1hHaMQuhrNnc3hTPA7nhhtu41CvKMk39r1hAlE
oIfBpi0UYmJXebCnHxOW6k+T2yQphFDWNc88Hybcthi1OSVCIbTZ73WK3meC
1Z09O5TZKUS6qLqnjgsTIPHrl4k/3AR/Tsuf2HNM8BgLvpHUwU1sO/lL6JAx
E7L3WW6ybuMmPnzR9q3WZ4JKEflRUy03Yf1P5kCVNsrnz5M6OQXcRCfx9Je2
OhMW+Bra7kdxE2cspUx0JZiw3zguYF8YN6Hmma+qJcaEW+GumqMh3ET6iQMN
24SZMLBNLOZyIDehN372WQsvE9q0Ltod8eAmOuxEmgtY6ZDt0jvDbcpNhMQp
xmc0p8PNpgWhEGFuovpC4N97/unwzkjf7M06boJx8Q/5tU865NfFfXy7hps4
sEPFMfZ+OnB911UNY+cmVvnTsZRb6RBVGn3m/RQXMfJYTNLGIh3Ks488pTVy
ERrXqjTc9qaDdHjA8pcQLqIhZqHA8mcaVF4S7+8W5iIqL5hYaImlwXJBUpr6
Rk5iLGONyo3WFKhu38m3KMJJ7Os1dX1dngJRs5l2XwQ4Cav0KWbu5xTQVMGl
NSmcxJaS8RlKVAp4vG8MOjTHQXR/ME4usEyBWc8le6yZg2Daq9ulDSbD+AG9
LSdecRBaKir7T5CTgTBpvM/1nIOYN1MVXZhKghcupm3fnnIQHLGV2tk9SaCS
YPXipDcHcb1X6IN2RRLcELuzrO3MQZQEXhj8+TIJBmc+/Dh9hoOwu3dEb3pL
EvxjTrwy5OEgIp7xcNHPJEIU14KvGScHIXB8WIM4nAjnzMiu1iQ0vhlfwt99
iVBOEj7nxmInhJ61zehLJwLDYK94+AA7cY19r8KfsQS4O+oe+6eCneDFXcqW
3ibAriMPQwZK2YnZ+j9zawITYPDtE7/JQnZiwnpDrLJ3Alw6FGbLkcdO4NFs
u+IcEuBI0GfF7UnsRIHU2yoHLAH4FJeYzgHshP9traEXYzQo9eKIv+vPTixo
cFyp6aHBg3q+tz6+7MT9DCunLR00mLgrdSfEg534GVbNz1VBg5YyLY0cB3bi
eJDy85o4Gny08Sle0WEnWn6FhfpdooHZ52eZ3CfR/JRP7JU5SwORta8/CRxl
Jy5RkzRadWngnxn7REaDnRAUObHrqSYNHNlLTp9QYifm21aUeKVosP8jV9Pz
NewEz6fK82ldVFCvvVlxmJuduDLz2Pf4TypoLXcUzJDZiZTS3QvzjVQ4cSEj
8dICmVDz+nXnSykVzgtaPtwxQCZymPR1GUlUuAhVrn+7yUSzJtcaiKeC5Y39
Dm//kAnNg9yBg++pYF/Bd3a5lUx4VyvFxbyiwl2fz4rfv5GJuanB4iAPKtxP
ld3sU0QmbuqLeW5wo4L3rxfr9xWQiQgDSC9xpsLTg7Zs77PIhNIWIY6HNlQI
squfMUhH1w1bjZ5bUuHlW80hDjqZgLQyv3xzKoRNCLU4xpMJm2aLQS8jKkRt
elC1OYZMXHt34aSAHhVizgwQTZFkYu28THvxKSokJOLJmiFkgn3Mui/4MBU+
X3H04fMlE5VGyrrZu6lQ8KLVnfAiEw+l1q4x2UmFoq9HHF3vkYncX2pOwspU
qNy48XyHC5koumhzZG4bFWpO+um+dCQTb24OERJbqdDgNnb4mD2Z4FcgVq5s
pkJ7falyymUy8c9Q9ZuxBBU6V1VlLM3JhJBIjvHqBip07YgSEzlPJo5RrBKq
RanQa869ttyITGgEyBR/EaHC4LNb5Pt6ZKLzfubHaiEqjOb8mtupg+6nGI2t
ClBhskd75N9xMvHjuGqk8ToqzApndoUeJhPl7P7JFWupsHB4U9vpQ2RCwfyx
wxU+Kqw4B3xfPUAmHl/6XSu+hgrk6JmijL1kwiJNoGGGhwpc1Za5dqpkIlDW
ynaSQgXehSq6hDKZKLs+4C2AmH+7WlytPIr38DMRA24qCJ2LDXu0lUysMGeE
0rmoIOq3NlhtE5lo9WE47kEswbz7aEgczX+ZS7CVkwqb//y7+0GUTLDmt45G
Ipbl13cyFiITZ34sj/sg3q6ZZ83NTyaMpKw4nyFWdth24QsPmTi+NL0+HbFq
2Es9Z04ywZDZw7eAeO+3xaNbSWQiKOB2nTUa78C07cHWJRJR4zRwahSxpkyD
SuA8iUi6QLUIR/ONEV6z13iaRMj9rZ+0ROth5zx2UGKcRCjbduAn0fptZ+9r
/RsiEf0RG5PO8KJ892UdTe4jEaYv2t7cQvFS+TGqffsficA4bK2yUTxfVcrr
afwmEU6N/NMb+KlgSg83rWohEYP2M/8OClIhP7rhUkgDiTit3L06h/K36eUa
a/MaErE19qx5E8pv7y2vG0OlJGKs5OPhPlQPOlezb2UUkohsmzBfKVQv9LNj
dzy/kojaF/rON6Wo4Hrgiu+aLBJxZasa46YMFdoUIp40ppGIIKMzqVKoHjUk
GoMiU0go/7Ofe+VRfleOhSrFkwie7rNY7Q60vjGvqKkPJGLCduvVUVUqVPzJ
/vglkkTsHsr+q7AX7a/i7SmnQ0iEuozXrhl1KkxnXkkXfkEiHq2/+slPC/UD
akT2zwASYZLrnb3zCBWkn/EVXvclESeqvIda0f5K0RtvDrxJIkQOZ4leN6OC
AKbw0/gGibDfnzpWb0GF27us/khcIxGuZgKVRtaoH4k0DSZbkgi6PS3hoyMV
yn/krFbpk4j0KwembnhTofvqQwU+FRKxs9Nva3AKFbTP5ao0KZCIwNppYw8m
FZJPTuyJ2kYidG6SO+/nUuGWorWWshSJuHeKwllSQgW28RPGunwk4l2XbpZx
JxUkPfm9ggbZiEDTFD1sPQ2uxVeKve9lI3aclfk0J0GD7O/+THoXG8EZGThS
IEMDw82rfTXtbISbXLPnfVXUb0vHjASr2IjHsYHv6aj/jq2r3/4umY24+dxG
OfcJDYriQ5o+OLIRGu4vg0a5EqAuapep7a9VPCH76SU+9Dxii3d+96tpFZ90
2wc/5BNBNZneZFK9ilvKGxxK3JUILz8rGB79sorXb6sINTyeCAYtW3Q2h6/i
ocYN6786JkLdOiHNdpNVfHNSBV75BbHv5Ca96hXcu7PSXOVCErAFqFqUFq/g
9bu3HxyxSgLVV05Rml9WcJt/6uIJjknw8sPgBqWkFfz0tLmEoHcSGOR3CVKe
ruDyT0+EJVGToG6mgb3o6Aq+ViI3om4yCWrtM/r2fVnGnbZNKMc/ToaG33MG
WhnL+Mbrgbbjz5Oh5Zxm3onkZdwn2Xbn3nfJ0HGsNOh85DKO0/hHPlKTYXBz
6657nsv4jOdwuFBZMnD8WPDM11jGxwN1YnZwpYD6qSMCR/OX8CMNH3se3E8B
LcL/3unMJVw7UZ3l+ygFDqtVdRmnLOEjLnY8ngEpoL3NJOtq1BLuG5T39URY
Cpwl2Zr531/CT92waT2VkQIun5/FV2gu4elcLz4M9qYAVaH+gMHXRTxd86Ux
6Rgd7OXTC72zFvHAU6dOwyk6KG57pZNOX8Tl29n2O+vRgbHZ8KJQ9CJOlpOP
jzelQ45Y/cOmB4v4o4Je5auOdCjnrP9mii3ijMNBfdtf0SGAPV3/2YFFvFSD
a+rBWzrokl61fVZdxD3ps9zfwulQv2QwKL5lEY/O7BSXj6VD+1Td2l+kRVyx
1uzpHiYdhv7WmVwpXsDNXEqOXq9F4/9O+/XqywIuOn1Up7qBDi6/XtoWZSzg
ttFv46Ra6DDdZnB3a/wCnqvYKv+qgw5LtXWRPX4L+IVo5s28fjoUfE+TFfVa
wM8palPeD9HBu+ol/YTbAt69azXBeZQOnGUGOM1mAXddI9XfPUUH/oK6rmsn
FnAltgZf/hU61H1Jux6htYCTuluCXdgY8Przy+nK/Qt41txj+yIyA0SzDLiU
5RfwexqHHfZxM6CNqfri4qYFPDPI7fE5HgZEpAlseC62gJ/eH29it4YBm1Lq
FEa5F/A3fsZz59cxoCsxjSnNtoCLkR7gaoIMiKe91NCfZ+GE06wstzADtscZ
nEnrZ+EMz30ZrqIMGIxRbfnzh4U3asg1CG1gQEq0wGXBHyycQ+KzR8xGBqhG
1LncqmDhVLvt5wMkGfBU153MIlj4R5aOKbs0A/6sSLx5mMvCeQiJbvtNDDiQ
XriNK42FH47rm8nbzIAX1nY5QTQWPpp86BlrCwN61689JfyBhV+ZHw2X3coA
rXJme/g7Fp7M5JfVlGXAqPLKMvUxC5eWVH2nKseAE7/jXuzwYuHTlNg7a+UZ
EP3q1JZMVxZuVmtV2oJ49ugYU92Rha8xqb0ftJ0BZ2bfHCu0ZuFvTf0jVRTQ
+hPUW06as/AMN/tNXxEvmf2xqzFi4QdFw7gOKDLAZK0/y0SHhUffuqf/AXEK
rhT48zALV33OnJ9EzHGrXtLqIAtvUlEi7VFiwEXZO4x+VRbu0M1nfxlxZosk
5rydhTcsFSnfRbzmWVH9zCYW7vdkQc8LsZWGvfV9MRZeZxxb44Q4b2TtDHkd
C08dH0zWRSwUk+H/jIuFa9FP9IkidjC6sEFgZR4vCb/m8x2NX8SxmvhuZh53
fHbK0wWxeE68htTIPP5ERLplFa3n1jWd73Hd87hrpGWIJ+IKiXELxY55XEan
OvMfisfmmrfjaY3z+EFJC80DiO96a/iqVc3jVX9NlO+h+NXt/itcUDSP5x7b
9YSK4r29x//Tsbx5/GNNlj6xjQHeocpqVenz+L2x3qffUH7aTjWUGyai3+dY
s/8zyp/q0h2ztph5fOeVJLMwGQY8YUgNW4TN45ZnXyxYo3x3WhZ79byYxyMP
fNsoiephv/C1dY5P5vFXt97nE6h+eu9k7r7nPo9HbEz/UCuB6kHRrGT1xjxu
z908cFCcAe86Vs/628zjrKv2VS9RfR4/fPpeiMk8bn388XWO9Si/vF04ffc8
LhSTWc2+FuU3/4nhXsV5nP3RR69GXpRf5x3/8rYgfrV24QWFAexNd7nKBeZx
JuWSay07ys/7dWe6RufwxTzDc9dYdMjTz+q0753DU7x+acfM0kGIbO4y9msO
D9FPOl2C9nORLTVkqXoOHzK3SWwcocMW1UPtoslzuEHF1z6Bv6g/GQ28U4mb
w8swrG3oFx3uur41PhE5hwd7jL3NbqdDTe5ItVvgHP6tOfyDRBMdPA5H403X
5/D4pg6ubd/o0GS0Gv9aeQ5fsOSjatHosOqafCVJdg4vrDhmKRGH+mnoeeki
yTn84pR1RH806j8/U0Mn+ObwCylqRSbv6LDjqmWAwcgs3tXPed7Njw7+boXO
/IxZ3ECrbvHfJTqkh95QlqPO4gpOBWq1qP92fN44cCh6Fvcsc/6ZbEyH3Ss3
rW4Ez+Jyft6RB1H//u0vc7baaRZPWq/YlLCHDgfCHqkH7JzFX03bBvVw0mEw
7zgnV/oMTrVSr7WISYHkVzmVtxNm8NXF0FZKeAo42iu8/PthBo/frPYx/lUK
jKxfK/E1eAYffyg2nu6bAuMuTaqujjN47Pp7zXJXkf/KWV/skp/BtewCw97K
pgA5xDujIHoaX5b8qnAnKhkkrn+5cidoCi9Y+nds0CUJIsrLT6z1m8I9mmTl
TOySQFyuRSnOcwpX4eAQzLuE+O/4TI3DFN4zwSj30EmCDeflAuROTeEpISX7
mrcmgcjRV8xmzik8Z+uzavGWROCTsGPf+3ASj0p8ttVSPRGC7rr2V7hP4sqn
WG1pqomwpsXn+2WnSfyUwR0LDnS+4H0VFRp4aRIPXi9climcCBTuBqV/GpN4
XP/nqMMjCcA5pWnyen4C/7UhKgX7mAArlUKfxm9O4IPy2e2B/AlgGCaXJeYw
getE47wn0Xkm3ka9VMtqAh9bWfd4zQoNdNiseoKMJvD2QK+d6SM0eLcvfZvC
ngk857z0YbfvNNgRo0+9Mj2O809dyl/3ggbeN6yznw6P47UvsvruovNSg/qd
b6nd47jaowfE6EMa3G2O7l1uGsdJTXtMSDdpUMI7KheRNY4rs7XNlRnT4KJb
EK3BfRw/MNyYyCtJg9QjMTksp3FcdGTbJlN0niMLZJZttkPXOaPjsvhpkJD0
s8/p/DhuJKOR+pFEg+nfitvXHBjH4x6bvD/aj3zl7WvDJ5Nj+KcjFdEd6PyY
vzPvZnPXGB776BbtaAYVrCr/vtraOIYHqz1a+UpH5/FV1QY8YwzXqzC8PBJL
hWMOtUbzrmP4+XfpeprB6HwLfCbX5kZxP4rc7xJ7dP0o/ti6dxQ/pGNnInEV
jXfyVs6l5lH827XLq4GXqZCr1yZulDGKf+Ivb84/R4WlS/F/1Z1H8eyYBg+r
E1T4fuW88D6LUdzkxo2wl+i8HW3De3znmVH8slh5WDs6j2M3XBK2Ko3i97XC
eIvVqOB3X9OZr28ELxb/yTGkSIWz3mMxXC0j+Aus5cUy8gE5v9gGttIR3EDP
z2MH8oXyQMr+mdgR3C84QKp3ExXCX3yxG3s1gtsPTyk6I99wCHEKH/AewTUz
lY6IIh9ZG9m09MtiBP/6TFoFR77aGf1Epe3MCF6FBxkUIp9Ji1W3bNAcwW+a
K2zoQr7jQx15Va00gkdP2yZuQT5klBRT/E18BH+Vli/vjXx1K8N4huAZwd3P
x2UtI1+dTueS/zI/jI97vXaNQH5VmvXZNKtvGP9TtOx3DvnXu8+OAaktw7iq
jBHXbuRndl835SeWDuPsl6ZEdyB/O1DYMBKXOYzz3j3YdBL5HU/p403RccO4
uYGTmS/yv/byA4Zhr4fxqyerSjqQHyZXD/m+9hnGXbnu7DiP+H5ddGaQyzB+
1uwRfQL55Zkmw17/y8O4nfzQxRTE0m0cG3z0hnGm+0ujJ4jHfuac8jw0jF+M
Uo/3RUz8dvB0Ux7Ge+68sY1G/OqfFN1ZYhi/V6NIb0ds1VfXeY13GO/EHQLU
0Hh7hh4JXGUN4SLnYtZlIeYY23/Eon8IV1Wd0TVG822ZHLht2jqEB2k7Gwqh
9dBmoz4ZfRvCM1rGFP/z87sL+q26WUO45JndvZNo/TorZJ6T8UM45+2qYBEU
LwlytvrhkCE8JmL7zvMonsOc1xw1fIfwN1PBdXko3l95JKP33RzCNy6IewLK
R/Da2tqdlkP4VzKxr0cA+fb6fXtktYbwp1lGEyEov6SN/VeldwzhagXnFqJQ
/hskI99tkBzCv9vGbC1D/uoqS1rgWxjEvxTZtD9A9XN8e6YS98AgfuB1ki3f
ZlT/ynaXSG2DeMNqmcAX5K+5e74TM1mD+BONK6me29F4Ys+1haiDeN+rsX2m
SlRIWNCtU3k3iD/+6ednqEKFsMLq33bu6O/jhiwikK/e0a9e+bF/EI976ybp
h/bH6O4g/1m5QTy7euvycbR/bEV1+YXFBvG1W9ovyOpQ4dyvKinduQHcRu+U
4X4jKuy/XqVZkDOA097qvaAjH2XoBZa00wbwIKsjdEO0f+V2n9adCx3AOdkK
SwVvoPmzKs1V7w7gD5XM3/W4U2HGv9Ij9sAAvlHsrtmPQCpkxlbk+n/ux69c
Yop35FFB2f8ZFpfYj38MiB3bW0iF+GunyvHwfjzj1rPtCWVUeKNa0Tp/rx9v
x9do/2pC/aOgfNZBvR8vPfaN+mCcCrvby/bqf+nDTSzvKD1UpkHS1yf515P7
8GfG61Sd9tJA5uPJY08j+3DjCxvN3DRpIGhfZlzo2YeHn//sWYX8dHzm2609
mn04ZAzbvnZC/VLwW5rY114882jh7NVsGhhZCOr8Se7F2VI7YwMJGswmXfyX
ENGL14zIOFZV0kDz2NR69bu9+KMHiTZvf9Og3H2z58U9vfgn6eendHkT4M9P
j+MfE3vwXh0vzXVXE0CQurNd8V03blS65uM29Py5rR7OruXchcuXmM4udCSB
+uPL2v0OHfjCEOVakx86D857fbI43YHfOdj4/vJrBpg6RpGblTrw1lySWe8H
BrgZ/8gvHP6Jl/8NaezJY0DaFuNdkU4/8RyTnuKEcQbIF5wQ17vVjr8Z2EHe
ZJ4KInM7hjPuteFWV5KP31ifBnEOuqcUzdrwez7J0hUSabC704Eao96G3/55
OXSzTBoYlNIsny+24k8WfioUqaRBYMiWZluvVryWkJerOZkGZNX1BRt9WvAu
g3qrpbtpMGa/9OLh0yb8QrHMwpnWNGhi7BLQs23CJSfype7/SoO8aduXksea
8HVrcyhx/9LAz7v+5efVRnztAHW6fSwNxMOor6bcG/F5dXWHCe50OFZmEGJn
04A35P+1SN6fDmHbPr3TP1KHhwpY7hl9ng5e19tFpTfX4VXqcc4bQtKh1GqT
yo/FWtyKg5l8MCwdzDymVYRv1+LGdpMTlrHp8DgxWvXJlRrc/s2Dq4ez06Gd
e2qPs1Y13uvQnwQd6fCoJFId5svwNIppac9mJvTXHAyxyS3DTVXNL4XKMkHv
R+tQ4N0ynHHNehq2M0F8VPh92/w3PGiBTnbfyYQ0saDVm6xSXDClrt31EBN+
OdwviV8oxtdpHHiVc54JR9zEparyivHLDXhXsxkTEh7muk14FOOV11QqBi8x
wfXNtJzWYhHOcF7UnLdmAm+B47PWxULcaNZA+qMzE5xk8qJEFnBcJnwna9tj
JhxUmz1zxQPH72aZspKeMIFDd/cqfaEAz/UyOyAXwIRIt6QrJxe/4iteGy1X
g5lQXh4h57H0Bf9hqNyqEcaEkF8trd/uf8HXdKjp3YpggsWk0DPh5Tz8ZJTX
n+goJsxIBA6lLH/GL9VfPNEewwQZZ8+03ys5eNvK7sQfCUwYeZRzRflhDj6+
3SCQSGJCbtiU0L3VbDyka/ja+xQm6BdddxNiy8a133zmP5jGhPvrL6ofJ2Xi
M9VO4XPZTDipGDb0yicDz1OqJQXnMkEImqI6SRm40P06XfE8JiTa667eITPx
xof7H4p8ZULLF82SJPY0/JXfGZ4XRUyQvGfVOcmXitdWaI1/L2ZCkMfpvS+F
GDjhe56XvZQJ172k/lRKpeBR/xxr9cuY0P6Aa7/91mT8XKmuu105E3S8xwI5
FZJwjwBxbbcKJig+KlTD9ibgJ17w2NyuYkKEX9LzXwdp+F2RqBTrapQP/5B/
HkDFqzhWxXS+M2Hwqc2LLJ14XKr4pzGrhglmAXo9RgZx+M8Uky1FtUyoDFTT
GD8bi9vtj+LzqUPrCebpU7wSg//eZar2t54Juzf33Hv5PRrPtr/g6tuA1r81
Z1tVWxQ+9e1I5cZGJkxue1bP2R2B3x7kOkBDXL/d3AsbC8MTNyflKzahelPa
oeC58A6PtTlyPh7xS5XVpizOt/hO6zkukWYmuOyq9x4XCMG3uJCr7iE22Bun
rCT5Cn/6ghHbjPiy02BalV4wvtbF9Ll8CxOkXYMph20CcMvrTgHOiDvv7bbM
9vTHEx67hNMRv3/YkqP02hcXvDH++S/iXN4Z6SOGXrj1vVdDa1qZoCZ6qEb5
gRuemkxRUUZ8/Sjvosq56zg7Q9LnCOK6zL0ZFMvzODR+6tZD3OSaorU7HaBX
NNj0v/fr7+8cHzCIsoa1UvUdpxAbpJmVHvp4E8x33795AHF9vJCoses9ENBl
iEohTtS12ZMZ5w3bKGHVc2g+gycKf2o99wM3umdIOWLFw1J+Fe5PgU2Zfv0F
4usa95RNLINgn9Trs7qIWyIcHMZkX4JJyUfDVRSP2dCwgsyNr6Gd38YyAbHo
229CHvxvgO2tu+9JxGqvp22B/R3oRfjmdqB4m76Q+cIxHwpq/CfZ7RHfDTJY
VzkcDjVBIdYDKF+5/ik5Ji3vYdXL3L4G5bftUfsa8aoPMB1cw78b8X2MI23s
dwzIDuTWBKJ6eH9oN0dWUyy46nz6sAXVi4rmKYZYbRwk31XOuITqqUDd0tSj
Ih7isH09L1C9daoFp0ABFZ4xw5JaUH067f90LjaXBgu7uA4Pofpd2ZvPxpmR
AOtY4kszlSi/uwdNKmlJoLl2a98Iqv/LyieWTV4xILZ5qMSuhAmaYdTg2ZhU
+JCeFyGE9hOfL7uArmkaSJXaD6QXMmFgxPrjiF065G/YsPy9gAmxpbIlqk8y
gMdv09n7aP++XGwKIq3LhCeVodpVaH8/2PX4bMO7TBiU7Kjhz2KC+fue3tvU
LMhY8zb2djoTRNyoPDmlOSB/tKIxM5EJ5ORzDU/O5ML45ExFAo0J43+4Ik2b
cyGFje/2q09M+K5rp7zQ/RkObf85hn1kgr/sdv1DHPlgWVUpuhH1s6UBk8or
WwjI3y3ny3zEhCkOuoqODQHn9LKnprxRfWziDNmdSED7Hpnrig9QPs5mmbPv
KkRxy3vkfpcJWYXrR+KxIjh1O5U3yBHFM7xlXf/lElDs0TzINGKCTaaKa11c
CfxiXBE6qc+Ei7X+bbl9JcC+8/2l+tNMOM2p9vGZcynMhPTZfzvGhO03Q3cr
PfwGmZcvquzZz4S/2qZnnaLLIXT1NVVajAlaPfevfP9VDkP0NwdNhFG/8fl4
Q1mqAliGlet81jHBKG/w8WBkBfzLG4ojuJlQpOSVbRteiTxE9kjbXDrE8seK
XX5TDYGdSYYuLemwe3BmWP54HbCphJY9RM9HywOU261X6+Bha0Mz/Wk6BPuL
s/z96uC3Nhc0PUqHQRng7C2ug6zrhTq8Huh+5k+l4o/Uw85xFTtJ23QQ/i6u
txlrgMBe2txfzXSYToXUDRpNQOEsW3u4Jw2qlTSEXC41QXJA98H1v9F5grbf
rexhEyglbdnY1ZYGRh92aLiXNIHl/Ve7bavTID1YoqzxTDPkGpnGbcxIA6cb
c53Bli1gvFfQXfNhGvQppvJz+rfBePdL03GhNGj/JO00UdcBPEE6HT2mDPB0
+qJ99kMX7JO/9+9nZhIcgZmr/KldEJmzvus7qmtegZ0+ZQVd0Ft2enN5RBKE
pcd+PtjZBVJu8VtbvJMge/qZorTUP3gdlVNy6UwSTHqY8vVF/AMQ58g42Z8I
Dk9mau++64ZTQee/Dcklwm7TncO7qN0gqXpYWlsiEVjbr1GGsrrh0EZH0Yx1
ifC0sgO71NwNlopXM7PmE4C6tiT9sEgPOLHeHrpdlQB/Q16H8L7ugdTk6zOL
txPANGbn+ajnvUA/w5Ya04B8m7vzSmJ0L1zXe6prV06Dl85BjtmpvVD2Wuzy
iQIaVGgN+NTV98LY8Q9Vekk0UP8Vm8Ih2ge3dnOwv3hEA0lxUfKN6D4wuBlx
almdBrk+JXweqX0g2m3gaLObBiYDt8SeEH3g5t12bUCBBs9za5U/dvVBFHl9
3vGNNFg59+x8s1w/nOPzGzBhUeF3yFLKodR+mI163j+N+sr9xaQcHaIfvKZb
jqoi/99gfaHofH0/PP6zsC8gnQoGu7Nbb071Q7UOyyUiHvldnTOZqjYAWVkB
a1WDqHDxgPTaDO0BELIPmLD2p8L8h2ox4sIAeD3yupvjTYVdzgo72j0HYCJ0
seurGxVi1/47z08MgMdUv8TpK1TQcntlJVE/ANI7J9Y9vIj8tANubO8agNwn
tbcbz1NBOCXK9wjHIDhVB//6pYf8Wvj0c/31g+CrucjzBvmMricr9KLcICTG
Gkw5IN/x0zlHd9cehPOFnw95alFhM5Mj99GFQfiw6J+fqU6F/I0ZRS8dBuFn
UcqedWrIX/rXtSUFDYLPFWF1eVUqvDYo6Mp5PwjKqxyd3cpUUMl1HClhDELA
RkZcsQLyqScV5N91g2BuNZjWvRWtf931nIo/g+AS0UAz2UIFw1A+x8zxQagR
9n71V5oKmjT95mcCQ9BuMnDcSBz5zM6JZ66bh6Da67vQfuSL8jmvtS6rDsEe
jrKW/cgnhcqaaXsNhuCug7/WCyEqUPTvXNxkOQRphhd+9SIfXW7ZIMjrMgSu
oebXzJGvTlrklU4/HAKdxPZfw8hn+3vNPX6/GALDZ9i+SOS7v5yWVSo/DEE+
r8g1W+TDDbPR/zJTh+D5FtZNPV4qlD/Awj7gQ3DlePpJY+TPX7m6dANqh5Cn
S/x1RX7NDH5Ecvs9BCcX9+/NQD6eILot+/LYEKiEbNrPj/h99DcHndUhMA8W
+vkY+ftrOftN+9YNQ7LZDVFxxE8ZPE2bNg3Dm3JGeyXyf6/9yU95dw5D+MSd
jWGIbxXoHprRGgaOXc+L/3v/bX9idOK33jAkqrSW//f/BYuaF9RKi2GIX7Te
kITY+Nwu8ywndH/MPqYfsXZnw7qYB8Mw64XpHUXjadm6lgQED4PuxVv8eYj3
jq6/5xY9DMLrGNW6aL4K7jk7LBnDIF9We3sRsfSKaZdOwTAI7v87UorWK+K/
8G5fzTA83CIhm4LiwcsfdXpzJ5o/V98KHcVr9e0htjWjw1BU/cemCsVzWup3
5szyMJCetgEHiv/gJ+9rf9aOQNupplum/FT4s0NGukpqBNaShLrLUL6as4ob
snaMwFs7nrtGgmg/lXJpBp4ZgVbRXe9yRaiQfSZh3O3SCGwceNQTguohufnU
J8sbI/A658ffZ6he3vUE8e9/PgK9qUzrUkkqBN1QKd78fgScPTwSeDdRwWem
9s4a+gjYSzZucED16Mgp/PdP9QgctGOfcpejgtXzzLdVHSNw+GygqCyq5/Pr
z+lkD48A+2ueH4NKVDiyLTwjkG8USCtz1JJdqB8c3+S/X3cUNjofUvuE9hP/
d0J9y8VRsO0ol5c4QgX2s1ZjaxxHgbdc/GHicSqMXv1k+jdwFKpoYXn8Z6hQ
7KekFFQ1CkusqPRZtL/VV9/GyP0chZrtP/PXo/3PvMcmWjg4CnrH0od1bFB/
cGpmm+UZA7/cj3xzN6jga/qw5bL2GLy/3eFuiPrJEeVGnz2lY5BZHDXem0CF
POqhue9NY1B1o26DMQP1my0JjvbdY2CRLOXbkEEFgcCC5BrSODidO2vMi1OB
zTvkHfuWcWDImnubtqD8XDvkeOPyOLT++f31CAX1W9okVd1uHJ7fnrev4qeB
aTftL7fzOPzZ4il/dT0N6iyEzsc+GAfp3km+UhkaEMZ9h1vfj4OA3NlsLS0a
fDj0Suxwxzg8kN6/8d8dGlgI9hSJXJiAmIZnjh7TNOCIaJoOvDIBEROm1gbL
NEiSKZFjd5iACfrSjV1cCTC3Jy5gwmMC+F5sTBfekAAvz10xqomagE2l5e8M
NROgOPLX3yd/JkDg+76Eu/4JsF2uhW3RbhK+ruGOS9mUCFPqZVp/3afgEMsl
VMc0Cb4Zpx0vezAFvaELogZX0PPSMVyX7j8FbFYte4wckkAr+rrZvXdT4HfG
Ke70/SQIIAm4C2ZPQQC+yOKPSQKZclP64ZkpcPuXezGrNwkMzw5KxN6ehg2y
Dqe9nJNB1qlR5qnnNNjoLTdW30mGWf98BadH01CoJWUn4p0MUbnBauoh08Dt
XKcU+DIZ+iX2GDcwpyEwLytTOD0ZvLs8A8iT00Au4SlxG0+GVOe1LCuXGTA0
JsqZdikw3Kg6N3l3BgoC2cqvOKeA4gGTGV+fGcCOah9kv5MC8WyRE7GvZ2Bw
5uCMpH8KRLzaPtiVOQO/NUo8E+JSwC/j6E8r1gzc/kfdwNWRAkVidj8mSbPg
N/znWE1XCqx6BrT68s5C+dYz658MpIDHsfrGWIlZsDp2XL1yNgWcmy2quw7N
gqlZTmWIAB3M5u59tfKdhXUyLtnSh+kQav7+y2TALOAFKgE9J+jQhBOffUNm
oWAs4VGkLh30n3Jnx8bPwhfNvNdN5+lwbONbRte3WTApONF59wYdfL1yU27V
zsKTh0UR2bfogP/9mURuQ/erudvedYcO6kkyNJmBWeh/3xPK5UuHnRppH6zW
zIGx+R6ee2/p4Pih8f2k8By43hn6uT2CDknsc5G+knNw/xFn7LdoOshWHwqL
3TEHuYGDpVU0OohfqnrZpT8HtDyt5IVcOnA87PWxejMHj9LO1P1qpYPTbfaz
V6LmQGBAzVLxJx3a7DZvt4yfg4CqBnvbTjqkGJjVXMqcg9SZF/kp3XQwkakR
v9A0ByLmijY3x+lQIDo0cr5jDl4rb0k7MEWH7Wsohee65+D9ByXFsRk6LE0d
tjOZnoOj+gkBCot0iCvNytAXmYdsH/mtjRwM4Mtr8NeTnActBaU1wtwMcGeM
XTgjOw92jZy9h3kYoBOqwHZ67zz8MxI2c1zLgMzAE42nNOdhmTez124dA6S9
ranax+aBcOE+YyTIgEn797onTOahW6bvxZQIAy5eytt0/OI8vE57ciVJlAHf
DFsnj16dB4fz7HP6GxgQoS4Yfth1HvY+mrtgJ8EAjp0qjtj9efDeryD9Q5IB
TltPA/jNA79uQshBaQYc4Xvco/lmHvz1jvh+28xAHhObqxE1D3TJvKnJLQwQ
nSkIVI+fB4vVA9z8WxngPfDT4mDKPPjounwWk2XA4K/5XQcy5yEu4Ti3wDYG
mDSs51TLn4frbI0js4gLvu1u21cyDy6+tg7V/73//aKfvLd6HrzCfT1eyjPg
darjgz1N82DQ90vi6HYGLMU9M9zdgdYP1rrdiG3DqLK7uufhTPwuXlcFBtQF
Fc/tHJ4HBSzKeBKxus+fSpXpeYi/qih/WZEB8W7L73cszYOwf+ijPMT8DuI3
lTlYIHGw0Y5DiQF3LdSOKfGxwEWV1KiJuMvIRExRhAUcGvdKrBHrnrw5uF2S
BZFHyjTuIc7WCP4qL8uCDp3kA/+9b9+smvxSTpkFZS4bvzgjDpAtt962lwUR
gweLDRBPb+jZL6vJAnnKNcPNiC3Wknm3HmPB+z1qtp1oPuWkTb+26LIgZdKe
HIh496xG2mYTFmj2z8rJIY4aNH206SILHFrWNqei9XH9djsnfZUFaz/y829H
7NL4WkHKkQWfDIIbg1F82stSlyRcWZC+/px8N4rnsfzqWvH7LJQf6zXbETPS
BmI3+rHgmk+fjxmKv0/41lNib9B4WzerBqL8KXN/WhqJRPPvDvgUjPLb5iqX
VhLHAgWT2as+MgxQMVAQu5XBghklsZq9qD5+fE2q1P7Cgi/Xrj2YQfXjp6T8
YFMxCw7wzz7+JIXmw7Wzp7qBBXwf+JIaxRnw2DUtLK6dBTfzs2sM//u8R9cu
XY8uFuzJ+GmGizHgyde9GfKTLMgwHf5ij+p7r6u6j6/gAiQ8l1Oe4WPA779f
9l7YuADCi4aiY7wo3vqH+nduWYDspbev2igM+KOI6f9SXQCTe83GHmj/Pf97
XOqAwQJ07BjIZy3Q4YB+WR2/6QLEG6t3u8zToTtf26/n8gK0eHo0tKL9rB52
eui18wJc9rsg44b2f6+e4eeR4AUgFC1cRlF/eJXf4FjybgEEb0cwuv/SQVPR
ZHNk9AJskRmfqUT95DXn+SfajAXoqUwpsWujA+RfPBv3fQGqj391+ldJhzAF
+wlTvkWg879eGkqhw9HQgfidIovw9/25R30JdBjluG7KJbkIT9MEvjbG0+H4
nxt4htIi8CdXeTyIosPku9vP+U8vAk38qp90IB1OczxUKHm2CAb+Pz++saGD
5Vf1pmOvF+G7fcLLfZZ0cHeffVAasQinPlj7lZrRIbb/RtO35EW4duZ2JVOf
DvPVFx9WfF8Ev+rUdaUH6BD/Vr25RnAJQn7fsfvJjfqb3Kz3j/AloE1rsLtH
pIDQn3Qls9gl8KAf/bI1JAXkw2+0tCctQZLzVv/iwBQwWtOj1PFlCXRFHSt/
3E+BhLHGls5fS8AUTza9apECZ3PTlbu3LMPX95ITfJtSgHHqRtto4jL0RDYK
hYUmw/hrGdPO9GUgW+VttniRDLs7Wlu/f16GPh+7CoknyZDtdKQ1pWIZYnpz
HR+4JwMeItbiMLAMzu/F3nabJEPdr8LG3u0rYJmTL2IkkAxTN0VrO2krQGHJ
FaT4JsGBCLy05tMqSM2eSBaxSIRulVRNe8Yq2Ou+PStnkgiviqMzSDmroC8u
JqCukwiDw14f95avgo1sIsN+fyJEgaZXxOAqdJT73RrgTwTvWxfFM8TYMHOD
VxLpRAL0iP2of3CRDRMK4CVvV0gAzS6D51WWbNh6PtEW1qYEeJ1Srr3Bhg3b
evjomhbRBNA6nIun32DD6lN0mQyOBAhzCKV3P2DDmtfrpPT/oYHO17PPdD6y
YXJz4fe/RtKAYdWAifai++dtWemUpMGna/eH9QbZsILnlkMJ6DwX5SIX9mSU
DXvpcNzxMTrvBTzwGJufZcPyHZ/svsNGA5sImeif3CQsPuIA5XgP8r2P1adE
+EhYIteGqqROKhgluM/oCpCwS+6LKtvaqIBlV+oWbCBh5uqffppWUUGy4dZi
jAIJa7z9u7iIiXz2hyTtxw4SJvlZKqgpBfnFn29GQrtJmIGy1/gSFfnziHjS
I3USlvRQxe91JBUaeYpNbU+TsPUxe71aH1OhUuAGxwd9EjbjxV0bj87DhJhY
WqsxCYtj94wO8KQCY9t17lMXSVh4auH7mJtUCDgsnK10g4TFqDobL1kgP9D+
euXqTRJmdfFmVYgZFe7q261970bC/Lj0fI6fQ3576ctV/gck7CxJznMend8v
XbUROOlLwi6/LpRfOEUFk+vr8h/6o+sBLv9EkW8fvmctPBFMwpLz0wxjkR8c
8F6LK4SQMLVVbTtBDeTPT3IcrELR+EaLhlHItyXfrilq/EDC7pzyvsqF/GI+
LcMlO42EOXBV+qpuo8JYziXJsUwStuouf/qRDBV6C7jL5T+TsIYTjvpTyG+a
qs03hReSMH/d7alKElSoauSsqi8lYfLT8mbTyI+K2lPdeStJ2PjTjX/akT+l
9rPXeDaQsPevewXJwlSgjtHvZbaQsD1v5jiPIv+Kmj2/baSdhO2svGwTi/ws
ZJlUv+03CWv1aTPcjPwtgCPlvsU/EkY5LDOcj3zaZ8257aF9KF/SZJO7yP/u
CrE11Q6RsFplSDBCfui8MekhZZyEfVr6wKX73+epN5soHZ4mYftV+wOvIr+8
PeZxeNc8CetYr1WVgPzTu+Dj+S1LJKxinteEgjj4efkNQTYyRr2oqfEI+Wvk
xbFHJA4yZnJo5s1GxAlKohET3GRsDzXItQr5b/aCZtrfNWRs1jRo+D+fLq6w
/la/joyd8Evl/+99fF1YQEehMBnzDPg75I/4l136ZLoYGXvTpvmGhnhwfxsl
VoKMMb7ziHUjnuNclX69iYwpZXz11fzvfXzztn2+W8kYUcrqTkMsGK97+pY8
GfPWD9A5/J8/3759xUqJjKk22uAjiJWPRNwx2knG+rVT9LLReg8KFj4/sgfN
15FKjkTxOPGnL263GhnrkCjtjkTxMknlz5PRIGOmVTHLuSieVx7sqxMCMibB
xTKZRPF2OnOxl3yUjGVzZE6cRPnwlHy0NHmCjJFNOn98Rvl6OpQo9E+HjGkE
Jwlpo3zGPpvTKjYiY0ePpfl/Rj6daip9NuMcml/2mvL/3tfnyx+/HmdGxv6M
6dpGoXppLX0d+siKjFkZWOePI5/ufvOZftuWjO2iPb19HNXbpPWfYmsHMnaA
utc/G/k0H1ll/OgtMvbks33GCPLpjfUmXHvdydhtzTvfMpBPy8V4Ssp6kLEh
I3G5d8pof2hVaHP4krG8jf3M1N1U0Fs7bjH9mIx5GP2p792H+kmHqFv3MzLG
X8azRf0gFdw9rn4seUXGRCKuKe7DqPDoVGBO5lsyFstbU9txlAovNzC/x4eT
Mb3ZQs+Yk1RIyl5l+X0kY88F8UxPfSr8nowwOp5OxgT45yS8LakwXFhovy+L
jD0zv+fIhfx64WX/g22fyVjU+sRTCdeoILJzfzJnIRnbzTptoXWbCtrX69m/
1ZGx0PyVjPQnyM//cWedGCdjixxhpTFZVHBtq/oWOE3Gvly3CLuYTwW17y/a
6ubJGMkpm0OtGMU3W2zJjMSOtbkmrztZT4XSZ/JHnYXYMf74i49rR6nQtvNk
fehedozh6jZnvpMGEbJr/nUcYMdefqgKGVGjwaWNtdNbDrFjisL65EiMBl3k
8xtSjrNjuh/vBWgb0WCo2fYycY4d4wu58abfnQYrnv4j/XfZsfTipHVrS5GP
u+is7vBix0jCZ/AjtTR4ZMMveNuHHVtVOVn/8gcNKPrv9i4/Y8cGrEV2uo3S
QFCG6ikYyY51uleD6cYEkC0v5VH/yo594cpbMbydADoinHKBJA7sNolLzRQ9
z7bWH499wsmBXZJ5E3fySCIsPfeX9uPhwNw6ydeP6yUCnZsi5iXIgQklS+29
bpsIAou8FOctHNiG2W/1F0ITofmvwKDRYQ6s4scWkzeLiWCZKskQ9+HA1hfo
XuWpTgJ3nb37k9g4Mbxt40SkTwpUJEwalS5wYuzvOfo+d6TCfBn5C3mVE6N8
Wg54P5gKcn1CWzF2LuwrV9/QnflU8N22ZypvDReGcZ6UofCmgWbs7ZA0SS6M
6VD20GZbGqRFTjdGanFhHORtt7aap0FY8KzJLV8urPirWpdSURp8o3N9TfXn
wugX+WVtytNgplp020gAF1abYOETWpOGzitqM3YhXFjdwm69vvY04Ht65+2l
eC5s87MMt11TaeDtM9+s/Y0LYw97428lkw72rgvnNvFyY18CGvkbPNKBbv5E
QYSfG7vjHHEo92E6TB4RWaIIcWMiH491vvNLB09BlY+TG7mxdJ6fuoeC0yGY
cWWoVIEbC1n4Ub7jYzpk9Zc/dDzFjUW53Kh9U5oOC7Vnja6c4cZE65oDlyvS
QSunS/acITf2/R+njEVNOpQ/XqqAC9yY//XnuVyt6dAhoyoifI0bO8pnHzXd
lw7kS6EJn59yY42WH6Y0KEw4eUzWkxHEjX08qXJemo8JQUrpZ+JecmORkmyC
8+uYsH6hcjIojBtzvH/m2isxJmwPXdG0TODGNLyFOs3kmKBXb1PPVc6N7Rj1
/nTkCBNCcifjFqu4Md4TBfyhx5nQ9uGh+3gtN3bar8CiS5sJV5zCJdpbuTEZ
/bbwS/pMcF3z3Ybex40NZdrX9ZgzIfL43gVjbgr2bNBe+sBtJiTRz4cWrKFg
M4UpjqfcmZC73nOvggAFuxwiOqF3jwktPYVOKxso2Hz9Fu/9D5kg4K//L0GR
gv39tzTnHsCETaO3vIV3UrAAFX81hedMUDn3TurBHgqWHFN8p/YFE07L/Tpv
rEnBzNMb/869YYL/N4fq5TMU7F4EZ05ONBPeqgRfszeiYGNh0ud4PjIh/l06
V+M5Chbu86NML44JhbbzWMJlCqYhdoE/i8aEJS7/LKObFEzv2e/I0VQmrHFO
NPrqRsGK+CKPdqYzQby1ekzeg4Jl2KuFFmYwQY0mrLjsS8EUnv5Utc5hwq2T
H6NpbyjYUHjiF8ECJviklmgIhaP1XburH40z4aVYf9v99xSs82CKs3QhE+h9
KsJGVAq2STf5JKuYCfn6Rmn5SRRsK9/UvHEpEypz3M7Ip1IwFzxMIfYbE/qf
5D9ZyqFgJTF7lzdUMGFu7LesXT4FE9QKjjhcyQQuU/aieoKCPaDypVyqYsLW
7TpL1AoKllDiucXlOxN2v7wRLlhDwbycs71ta5iAzb/cf7+Bgi1WJOoY1DLB
orzVxfAnBfvCGSi6UseEG6qLa/N/U7A87kSRonom3A+TTpbrpmDGs7/d7jUw
IYDtiParfgpWlv/igGwjE8LtbXoWhykYlW2feRHihLqnvrYTaH6br3UYNzEh
+0DKpvoZCkZW7cprQ1waU5uvsUDBqhduzRg0M6GJMnWBukLBMld4A/MR/3MR
nRNg58FSHLM9JFqYMNl28I0nNw+2Tz66+AZitsOXdvWu4cHMC7ltMhCvS/Su
MRDgwf54nbUY/u/zA4Lx17+I8GB39LhSN/z3/fh7ZRS5jTzY3sasc/+9v9f4
O/jppRQPts5M8uxpxP/3/Xrs/79f/z/jSjd4
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55063#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.043010764237438465`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.043010764237438465`},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.043010764237438465`, 
             0.0735980072193974}}, {{-3.141592653589793, 3.141592653589793}, {
            0.043010764237438465`, 0.0735980072193974}}], PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.6, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {240.53333333333333, -623.6999999999999}, {
      Center, Center}, {450.99999999999994, 230.99999999999994}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw1m3c8Vv///7ku4yKVIkpGKrISEt6o50kpSZEkGSkpKu3IaFDXZW+y97qG
HZJ5TjbJSkhWyt578z2f2+33++u6PW7nvMbz8Xy9Xud5v51ziVo80b9LYGJi
aiAyMf3vV/vCjjNrohzYH6YbzifNGaCW93qaJMyByaj1npfHtYzoWDSfAAeW
d9kglgvXQj43Lh7m48C61npdG28yYMdK9bL8bg5s9X3FpgOutyyVUmAHB2aR
dJOdC9fTTUlXL3FyYFZxYvEUMwb0qfMwm7BxYCbKqfWDpgxoprlkWBM4sCR6
pOcxXJfxTpvYbZKw/PyS3+YmDPjkfJODvErCjibMYq+MGZA4Xv85YJGEVUsq
qb26wYBgIzXL2FkSRvaLuXjTiAGUCvqu9EkSRgs2nZO5zgA7ub1o4SgJa3Is
Ov73GgOMSAv72vpJ2MTz7WS2qwy48PJO9d8eEhbhuT/0xRUGqPY1v5zpJGGz
vkwXanQZIPglo5HrBwk7M0Pzl9BhwPbDQm8EGkkYxcRESlGbAZt+XlIS30jY
yW9lD45o4fFZWVPOlJMwt9ufhivO4PH9aFO4gpIw1dgNqSen8fhAs+9mEQnb
t4ssxAwMSOI/qOaYQ8LUro0Ldf3HAKvq39NZiSTszYXIrsey+HyPa8eUxpKw
YNdX04bSDNCK/XKxPpKEKdQF1YtLMEDq1ceUoSASNhnkOvZGlAGT4rqmwmQS
Vh++Is3Jw4DewBIOGWcS9q8DG5bbyYCmTen8/16TsLydj71hG+5vG2n3tZck
bPN2ZTgvEffLtazay5KEKX7UuBgzQwerWTnb8Fu4/7+NS1gm6GB0M/Yg1ZSE
PRKKV7s6TAdVpddvygxI2GuCwTNaDx02Bk4cXzlLwhax+9cV6+hA1qTH3BMj
YY/n1Pnao+iAeTnqiYiSMJnU0hr1EDqsN18kdAiSsCcvlCtc/ejw4ubk3Qu8
JMxpb8+Xahc6WLw6flSGSML2CpcEb1rSAeglRTN97Ng0lfpIS5wOjlO+jxhd
7Jhb6DnuJSE6fD5xS+ROBzuWd7sl1HMPHWTLCB9aG9mxNOZil1ssdBD8fV47
v5Qduw/nNmr6aLDK1dLxOood87xUOh0STAOlq4meJ8LYMaW+N0bhnjR4Hv5S
fTKIHatXUbrn4kyDETH+OHMvduzjgRkawYYGHadMrTQc2bEKMZsL307T4PPT
wQV2I3YsSen5bZdhKjxrXd0dxMOOWe1wEBg/SIUQfV3j4J3sWA1z+qE4PioU
NyXGf9zGjrUYcw+e4qQC23cduTAiO3bvKrlZfSYFoipjLkXPsWEOjmlDaqUp
UPNZw536gw0b3lYdYWCQAsLhnhtFQWzYueNqQxbPkqHOTGD4Hw8bRrIkY0vP
E0E3Vh1Wd7JhGsG/+1UsEqG172bITi427I/V8/0PriRC953Es6osbNhfSQ3J
6GOJMH1fJt5vnhWTCFRW0hpLAH67U8aqP1mxitNe8VXmCWDpa1HvF8KKPRls
1+Y5FQ8bpYws1X2sWIz+taO6adFQ33mMa42XFWNzHzQ55BINUYu5VkXcrBjx
lEjR32vRoC6LCquTWDGHB/W5UltR4Bj9w/vkEgumV/TAp1svChad1q2RnyxY
uW2jgvpMBEyrXBY9F8CCxSTZR76UDAPM4MdrNh8WLEyTPoGth4LfU6OOKncW
rEWZN5+zKRRkaRZ+551ZsI6DepHhdqHwiP/VhtYTFuwXdxRbYXkIjC7E/rp4
iQVjXPlVgt78CH8/zQRc4WDBXqfHcQ3FBEIU2+p7Y1YWTPFJuWKQXSAYGhNe
3mFmwTILDt80uRwINcw8hrYrRCzxWQef5mYAZOgpCoSPELFrH+8vJZsHgP2k
XUJfLRHrSj4hzCTlD/Ia74JGKomYyncy4TCLP4x+dCPPfiViD94LcWwU+4HZ
ybB7LIV4f2xVGegRP9DwLpCSYBAxtW+/2g8TfYFLav3TE08i5lrq/63upxdU
vmFJsnclYhujgTVHgrzgbTPXR5f3RCxdhueJ5hUvmLEXehXkSMSqxo7VdTV6
Qlv1KbX8B0QszYSdoNbuAf77z8tg94hYy382L00iPeDCE12hWgsi5vnqKvry
lgcU893a6jQmYoUiL+uzJtwh/q5L+aY2EfN2Ax/ZPe5gXOCRy36eiNULM+zn
/7gB7/bAZO4zRExR56PKfKYbuOYmuB1UI2KmIfL25bpugJBS7aWViVjRWoZS
kqgbrJjk3Fc8TsR2L7uc+jPvCjbEiovnpInY8wv+1YGxriB2vV5d9wgRyyCc
J+995Qo9jNajRoeI2LlzqQuCeq5wRX9g54P9RMxpPC+0nM0VOFMmmF7wE7Gr
Ugrn7f5RoGJlYcaJB58PgTOyppwCSvFsrT7biFgI4YTMQzcKqDY+qz3NTsQG
WW+e9r1PgVMbXaULBCIWfNqTu+QSBTSktXLpmwTMdF/0HiZFCpy7kUM3WyVg
Z8kruuaCFNB2E47dtUjAgsv9lPvZKHA5zyO4coaAXSRd/uQ3Rwb9v/MeDhME
bN6Rl/NxPxmu77r17ugIAbu/qvP3/Q8ymMK3l3/+EbA9nOcUf1SR4dYjpQcf
+wiY2sjjk3eKyWAZGW9+oYuAbffzf6+USwbrWq5rG+0ErMxMsFI3gww2S6+0
s38QsMs9yVtZDDI8FfsLdxsJmGdhmIUJnQwvr14+se8bAfuVoqyvi1+3dymQ
+l5FwOw4x+96p5PhdebhAy5lBExr/4j1rhwyOHf77TlRSsDqN0VMuwrJQN62
xjlSQMBEbr5xGK0gg/t/95ii8whY7NYdFZVmMnhbNS/oZRMwPsurV7/2ksH/
o/oYSzoBm9BObnCeJkNwObXvC42AfXt6gekZkQJhM7vbbJIIGHX8TpjXXgpE
ibz9diCOgAloZTFqj1Eg7tII1hpJwGz/enw5dIECSU4Gn91DCdgTA4eiAEsK
0OhoqnoQAXt1Wlxu23sKpLVLxU/7ErCUDB9Rt3gKZLGGhCR5ErCwAjPF9TIK
FNy2ceF6T8BO6NA+Mra5Qqlfux32hoC921oNalRwhbISDZuXDgTMROaBZKWJ
K9Tt23e96ymez/V2iaVPrtDZXCmTZk7AfNP39J6xdYOeLbmDt0wImGrkXbti
uhv0H43i571OwMy5WdbSe91g1OM54fVlAubU+Ei9SdcdVk+LdFw8ScC+/qlX
GAIP2Hzi+X1LhYAlsx3SX3/rAYSYhbIcRXw+bJyYEuoBnKvf0vfLELCnMybL
8xqesP+T/YcxAQIm+PqTT7ChF6gfbJH1WmbGqj37+glUH4jj2aZ4dZ4ZMz36
UGZy1geIrGf/2z/NjFmV1lm9Al+oG8o7kzrEjH2b9x682OkLRunhRt/amLFU
tXxmuW3+8FLl9vtteczYgq8WffhKAKRdnv7p9YwZ01FV5f+xFgSCTjveeI8y
YeGKY5/P2YXD/aQ6/uhBJkyAUiPAFhsOn7+7fkrvZ8Kq7oa1FVeHw5UDW0MN
nUyYZ+4O5x37IsC1ckp/1zcmjGPxhKxSUQRM7WyWCEllwj5phdj/txEJZUlB
rbE2TFh+mMW7F7Yx0BQlb3Svews994uvEQuMB6akJyHdrVuoNE/LmWMp8SCX
mt5qUL+FXvZu3+VTEA/+BZJXzhRtoY/vkOT5+uJBr01U+0D4FrqUkN1kLJMA
TTt3q3cabKFNEmLKAV9x/X5W5HL9JipvXLGrpzsRmDzlblaWb6L+sy3/VicT
QS7gcZR60Sa6x9hXn8iUBP6xo3ulGZtoRqlmSJtoEugV9+8iuW+ikyVDcx8s
k6BpoYVYdmYTrZR7aPxvIAkarXOGThRtoDLcPk/2diRDS++S3qmcDdRAboeo
60AytBmqF55L3UBPjNh49c4mQ9fZSu/rkRvohvn7C9e2p8DogXZ5Bye8/Z5r
dO3TKcDya9WpWG0D7eRS0tdNTgGSHgxUHN9AHS9zyT7LToFt1R8uf5feQB8c
E6l/U5ICu/O4RHv2b6CqMUF7rv9MAZEA4aqttXWUV95bn8RCBdULGtxnitdR
VSa9tzfMqHAKc3W4mLuO+l65RxC1psJp5W/9V9PW0fVa7GnLcypoiRnkWUat
oxxzVztn3ahwjfmesevrdTTxc5uHRDYVnhZ4JNWqr6Oie0eZzLao8FKuYXuL
4jr672SmVwmJBq+ou191yqyjRoUy59h30+Dtx8gLY4Lr6MJCjIjhYRp4PUuf
5NpYQ00ayqHvPA1SJJtV9ErWUMTX91E0Xm9ZH8n+6py3hv7mzX1pGUgDKbEA
7ez0NTRu1nWJN4IGGQeumO6OWUPzjqVcVqDTIJ+/+V3r2zWUEhVsZlZFgxrW
5iojZA1tUI6SfLxOA09itq6Hyhoa0xutUEuggw5zQEeB3BoqSG1R385Bh+Z1
vVEB0TX0dhf6nx5eL3bONW3vZl5Dd/7NEfoqQ4exP00Gt8tXUdmBhoMXrtMh
ozerO6BoFX3zsOK8vCkdnnb73yvLWUVzTGE74TYd5jv07A8lraLl54Tumj3A
69vGpsgB8io61elUsupEh9LvWYf53qyiufljxkec6eD8zT/9nO0qqnVc+rk6
mQ6s1Xoo9e4qmr8teV3Emw47Spv6759bRYXez3LVR9ChqSjrYcSpVVT4VARR
PYYOgQX+83VKqyj3zfKrwfF04MvTY5M5sop2bhrNblDp0PFJzs9UZBWN5R74
b2cqHSKyuPf68K+iP1Pkv5My6CCS1iQ5yb6Kvv5rWZebQ4d+etYnYaZV9EmR
sqzVZzokUf3VdJdX0EKHxGbmAjpIJOpdyhpeQfcZKNdPldBhNE6ura9vBX0q
t1f4DEaHtBhu812/8PufE5PfltFBLqLp6fPaFXSu64NWRhUd3HXsCCvYCnp+
Yn/dtxo69G3uD373ZQUNuPXi1HecF1Syv4qxZa2gt6OJiZ/q6eB3xyrfm7qC
8tneX3BqoMPgnu0XeGLx8Q7dPS7ZRIdTNZ86w0NWULnLncaFzXSYlNncSKGs
oJ/QpzfdW+lwrjfR7+ibFbTqFqdy5U86xARcEM19uYJeUdgxO9BGh8UzU59U
bVbQA0PcvqPtdLi0GHz2650VVDGijuNHBx4/TbXtvMkKGtbAZxn7C8+ncZ9V
g/4KeujJfKRuJx0MtruuGGivoNcbKFl/cZ2GSnv9Pr2CIinc8Sa/6cDyvFnQ
4j98vL2bNvm4Nj38KmNYbgXVS+/kWcJ1bpsg8kRiBdW8ZvhRoIsO2zzKmhdE
VlBrq7Mzori2ULO+85p/BRVJiDyyHdeFE9sXCDtX0C0pO5UuvP3uuBxXDzY8
Pt9dh/1w/UD/xl7uzWX0+deGUTFcl7Fs0UMWltGzwgo+cfj8BPKT1IQmltFO
q7/btvB4nt/X/p74bxnVqUm3Oo3r2v3TN6W6ltFzze/irfD4DzR8nM76sYwe
f/2w8Bnuj72z2nvlb8uopVRKjjnuX5PCH57SsmX0fLK7rzzur8SAa/LZwmU0
WthPZ+gHvr5DZZS/ZS+jOXI3ppxb8PV4oaXmCn0Zzeqh22/i+ZNbf2XcEbeM
/gq2GjVvpINbhtD4zbBldFAi6lzydzr03Cp/M+C3jJp3vvRr+EYHJZ77O23c
ltF5fY3q37X4eniVq+Bgt4wmXsvcnlCJrwcp44qtR3h/F+JFTcrpENK1dc31
7v/ayxxbxten5umLDkEGy+hPbbUzPUV4fjn70XSFZRQqhNOMs/D8FrtdUZRa
RnOJjcPH0/H8Pjn6t1B0GTXYwa42Q6cDsdWerYZ7GUUXU+T2JuL5id55qX9y
Cb0THtjFH4znRzevx3pwCVWIs0V2++P5IZg8nepeQgU1UnumvfB83EsJWq9f
Qluy9vQaf6CDqNzJTr7UJTTkVI9n/1P8fNIfCZFNXEK3rx6YuWqD+/3y49Vz
kUvoeZcyvXQrOjR8mai39VpCiycquPfexPn3dAza+nAJPbtbVKrhAh2S72i/
Hr+zhH5yWZp+dxbPD2VRhcV0Ca1zPNa9D+hwpO7yp+M6S2h5V+VJNkU6tOpv
JQXKLKGfNV2+fxWkw9bL1NuMw0uo7u4omzw+OkiFXhcuE8T7v915J4Abz+fv
zNAZriWUReWwHQHn6aOWtzz1JhbRgAPeU7UjNHC1/fpkR8Yiyl2SWDSfRYPs
0Ecy4imLqAsnTfsZfl53FewbORmziC7HJae2xdNAYfOZxSPfRfTYjUJWU/y8
73U9eK3+8SL6Zv7DTv3nNFAJ+6DqeWwRFQDtN3NHaTBaqMnKlr2Anp6tpVwJ
pkJqQH7dC9oC2slkkb3fgwo21pL+f2IX0Gis8UD9GypM7Nm+v8R3AdXSsCX1
3aPC9NNWuZc2C6iL4Lusn8pUWBS/Y9p/ZAEldhwIZMOfn4Qg55zSmHn00psw
veX1ZCi/P2svEzKPkunfwlInk4GMWJ6K8JlHBVL+mJzvSwbWyfO1tq/n0ca5
90kq5clAurCzV8Z4Hj1U8J3C4p4MO7aiOSP3zKOVzf46BtuTYf/DotuvvOdQ
Qkmd7wv2JIioqTm3nTyHXvmrpJ29mAgC4m3SiU5zaJaPofjvAVz/mV5oeDCH
jhttJs2VJ8Le6+Ke4hfm0IErjyiq7xKB90zAp5+sc+i7R4KNSrMJwLXfiqj4
bhY1v5OinV4XD5t1u5Onn82gC2K5glLhMfACuAzuL02i/l/miqVdg+HsGZRy
Z3ASTfSTffGfcTDwnX+eb/ZzEpXZKHlmKBsMXy53COjnTKI5vRH7ytuCYN0s
6Y/qk0lU0dOzwFMiCMiv1Z9wDU2gyLBmAndzAFxznopja5tA0/aWns9PCQBx
ckILUyWuB2K5Ka8DoMaLpLSQMIF6ndiWFS0RANsjW9e7b06geXzo+tp7fwgp
sPHMbBtHuaz3fGon+4JViUgxvXIcLRHy3btP2RdUvrZMJOaOo+wrlOqFER/o
rFG5EhY4jq5+sP8TfsUHhDtY9rpcHkcpXqoDmpLeMPU7/4LTyXF0W6zc0X1/
vADrfeBkKzOO+zEfWBruBRZDTT33OfH2g7wbMdu9gLoYlaxfNYbuouRNRTF5
gv2qbrtO3hiaK9R0eRCv17U3CRznk8bQvdwrZZrOHjDOet9G7f0Y+junqtSG
xQPk9pw4fvjUGEqU/tX1aL87MO8bthQ+OobSQ5nOOPxzgxbByJC9gmN4vTpW
MJrhBi8PM69yrY6iJslbl6S03ODL8e/YQt4oeshVjl3LxxXk+H20dqeMorVi
2/tf3XUF2qpOk2zIKPoheo+dJLhC2Nf6Xiu7UfTV+dcRx5cowJ3sbUW+N4py
aewvjvpJAXd3nak4w1H0X4VoKi2PAq906zd/KY2iPHdIy9WOFJhU8HZdFB9F
yRnHVUbNKXCPT2cHD/8o6viPea3+HAV6VraFHGMfRW9/5Ji0w3nNsPubkM7S
CGovs2IxuY8CDZhXsvXQCPqWV0nrP5yHzyVdPEppH0GXmgtFzebJUOq2LS++
egR90HyOYP6PDEoPv6mX5o+g2hGz5DNtZMi47FXRSR1Bf9JVq3fUkUFc4aLO
UugIquwUeKcCJUPMnm2tPO4jaLyYv41VPhn4VupM5OxHUB5P1Ho1iwy+XZ5/
daxHUOMLUrrv0sjAhmk/vG80gnbTY8lLOA+/TeSco2iNoAK6lb/u4HrBtc4x
QWUE7Rde8qjA+djmgScBlRhBMa5V1X04X/+7pO35e+8Ialf7fuMWzsem8py7
l0kjKLuf7+UInI9beevCeVeGUaqvx77ycjLoLHuIyo8Mo50DakUdDWSo+H2B
funXMHoh4AVrx28yqKMc8g9qh9FbweZnSkbJkJtQ+8W1YBj9E+57irxGBhlX
DySRPoxKJLicldiB8+/9CzVo+DDKxFQmk3SQAoKXOPS6PIZR2V5r81kVCgTL
1bYvOwyjDVOsXVxXKMDF62G+58EwGuvQgkw8oAB5SWtI3ngY9RUTbvF2pcCL
0prFB6rDqG7ak6VxnI9H493fukkNo4ZhvKExfylgQdFiSxIYRj8K1HjMsLqC
vk7Nnu7VIXQu9y23ia4rKHRWK+oWDaE/H7Pu1J93BUaJW/HD1CE0UFblvJio
GxyMP3/WPXIIPXFGSMRQ1w12WVdf/eo0hLJYVvamZ7rB9ELV8+PqQ2jPFivL
2XfukLmrKou/ZBBNbGd9UKbvCfo3d2n3pQ6i+0L0X9SEeMIiw/QvLWIQFR03
1mv67QnqZ+f2qNoPonlxt3TKrL2gxu6Ak+nxQfTCNo3Fsz7e0PfbUTOePoA6
ufKKHFn1hV0pxzqlQv6hzSGxpKuCgfBCNZx46kk/WlfDLRaTGwqqFHOt4Qdd
aMlnRec+xXioXX6TfPNiF+ofZr1COR8PRjZRhJ/SXejUfa5bwsbxYHv1V/HX
8d/onwx3lyPv4iFL9Kp85OPfqLo151JoTTwcKT0ncPl5J9o+c8/tl1EC8C4d
Hc9x6EBr/zF/lXycCIkPdC5IGXegDl7lvCtvE0Gh50FKnGoHWp1ZcvCLXyLo
VVJv+ay1o6/e9fGwZieCV5Doz3tv2lHCYMmf9tlEIMjtKd3n0oZ6SGVYX36R
BFPW637v3FvR1JD2qel7ydCaIc99+V4r+u+Zp2WtXTIUzt/zFzzbir7KnC33
csWfV87N/gVbP9AnDV7D35OTQSAsJWDO7gcqYadrrPk3Gc5W6wVZ3W1BU6TV
1idupIDkdlcepTMtKNuPz3+MrVNgx9WiIBbRFvQ7t61pll0K/OoRC47vakZt
ExTLeINS4PHiavDvq82oYO1R6a91KRAmlhyiq9GEOrDHdYWeoMKbh518wgea
0JzmxH0UDSpUWojI/lprRPUTr2E3dKlg7Dgvy/OiEU2KMGItwHmUQo+Rc7vd
gP7wcPW/FEGFTva5409O1aPrNjEItkyFDxWRqrBcjWbPvwq8lUCD4Yb/gu5+
qUYrBZ7VvEqlweVf7WNe9tUodZJn/FUuDQQmeaI7lqtQzheXfijgfJjF7731
bKUSTfryjhQ4TIPuB68rklbLUROr2fgJCTpo2AoIfSssR2fqB4T85OhAe/fF
dsaxHLWnik3vVaHDy+B58VNrZahMr6ftwDk6cJbaeLSvfUX/i9wmePsOHR4f
LIziXUXRUx2R879D6fCf8uKl244oys6jzrMVjfOAjsJW+mopGuDewsWZRIdI
W8bt82slqGxwl217Jh1qaiLEHdeL0MwAA2tdnJeCutvaq14XodS9P1Ky8Pr3
5uxuD56NQtSGk9tnBa+fF/Z7jaVtFKD/3P/7TwOv9w8+ccrq3cxHPx3yeZYx
SYeJD/m3Zd7loz2Jby/rzNHhS9jcboetz+j1xyMpzUt00C17aLub6TN6uIP/
cyATA17vMVXVZM5FSdmW1RPcDDgvFTYW4JKD2gyOLlfxMmA3tEb1MOegy/kf
nd32MoBurbP1ivAJnf9T4lIqwoC2IvUKBjELjWeX6iYeZYCgg0XPLFcm2j2u
yU+SY4C340VF/90ZqL7G6Lt5BQY8fCPUVyeUhn7+da+JosKAzrdsStaHUtHS
hzqfpNQYoO085cUqyUBTtv/8nH+SAVIfviojijT0VylRyFODARFkhk/3f1Q0
e/yDQ+NZBnC6Bv11hBRU0Mpkcv0cA0bd7/rlaSeh5N09/NwXGWDseXlAXy8R
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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$46394#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.010088647791318257`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.010088647791318257`},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.010088647791318257`, 
             0.05150787536376967}}, {{-3.141592653589793, 
            3.141592653589793}, {0.010088647791318257`, 
            0.05150787536376967}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.7, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {721.6, -623.6999999999999}, {
      Center, Center}, {451., 230.99999999999994}]}, {InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
P2yNPf9y9yEK06s2P/erdoD/ACae4QQ=
               "]], 
              LineBox[CompressedData["
1:eJwVlXk41dv3x0+G9DNEynBLhkhmUt1QrAhFZSilK5WEuA3GQmYZMmTumOdz
PqWU+UZ1rZMiUi5CpUTUrZSuczjOYPp+fn/sZz+vZ+9n77XW+733UnH3Pewp
QKFQhsjx/7PettXaAcEURmlk5Wlq3x7QOLyhNDKIwtijPhkjn3YOLoe9MU73
ozDeFije6R70hzZa9kDpBQqDDsWpbPsrINlj71vrTWEsKVo8y/q/q+DKERN9
4kFhHOwr1Tl3MALuKHfS+twojPK1nzmWitHAsYmDcVcKQ2nf2K8/g2PAMnDP
MOs4hXFqiNPh0BwLWUULQYJHKYwfyooR179cA53/gu6oHaIw3tDy+63WJECo
/FarHTYUxn/2Vama6xKhw3xq1MqKwuBbVlgliV8HtxxPmXOmFAbu2SN2ejwJ
bhofi67SpTA4sbq5G41vwLi79IaHmhSGh0qEYgIlDQxSe5pebKYwOqumTso+
TYMXH61//NhIYbj9uhoWvTEDlq7tPKa3msKwuxPwriYyE3qLth73GlnGyNN6
ORn8bKDQfKkjA8uokxDK/WqbAwZ37w04vVzGwR8x0aIFOZDRoum499EyptoH
sj5tvwkOQyq2yvnLGE5VbhA4RYVeSendw07keQaF76zi84Ai53DV8eAy2npZ
7qJ35IGBYlpz595l9N24VvCQSD5k6IjueGC4jFP9fwUnJuSDg42AXo7UMiZd
nyqSiyiA3liWkt3LJSxOtuSmHioCSrLBqfanS7gintKlEl8EBpmXinY/WkIf
jm7x1sdFkFE6Ka99ZwlFSjHrhUYxODweX7Pq+hLuSDj+XXahGHrZ/YJte5fw
7O+q8tdTS+Ef74avOx4t4uXzcmzUK4f+UY6DWcMiJv3h12JhUQ5Dx3Y/tL67
iIuTx8OLjpbDB8v2VOfCRVTkz4sMhZXDpPKbraFhi1jV8kTKu6MchN7xwx7v
WkT/bHdBY6cKWOUAX55tW8Qo6oTWPs8KEHt+ze6V9iK+vFdfr3+lAqSbxFU+
bljEExOXkzJyK0ApU7FjeX4BPYVPld58WwEmNhZSex8voFpK6LmXRyrBjJEQ
eqBxAbuvrxrJdK8E853d40eqFzCq/NngNv9K2L/ZqcmjaAE7m7QeSaRVwtEV
Xi4J4QtYaqoqp9BRCX4tSbSu3Qt4ssxU6IE+DYIMeiT6ty9g46Njnfa7aRB8
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

               "]], 
              LineBox[CompressedData["
1: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
Ze06PG4KUWH+bt+wnzb+B0UCpro=
               "]], 
              LineBox[CompressedData["
1:eJwVlHk81Nsbx4fQotyUUnQjRCLZbiTdzygk3EgqW5ISlWxJIWUrLbIMyi5m
5quLUOh2M6JFlMgWIWtUpLozZrf95vfHeZ3X+59zPs/7nOfZ4Onv4CVOIpE6
Rev/+6ugmxt1DjJR0xmau4BkAXfZsRdyzkyMFH1ujk44DonMTvatY0xE9qxY
pzwTgCKVV+oLTjNhvadYdeXUedgXVziFBTEh8Iutj5gNBc+AepMZxoSiISND
NyICuQwKwyeGiec1/xQG2EXC3CL65+AtJiR4AdwnNVFIOnTMoSWbibK9MlYq
drHYNmgfa0FnQnpOWdM4/Cr6vcmPGQ+YuEOnfNuefg2bQ5UUip8x0S8Z2kF6
cB0vs/qH44aYGEis/a53Mh6n1ZpXzn9j4o9EuprlrttY/oBhEcJkIn5p8c/9
axLg9izr7xPiLBTdXaimWZkI7pBzoJkaC4d99iv6uyRjk3oXadqbhbxIzueZ
haloKa3XDwpg4cCvBP9Lh1Nx3qjqxPhFFr4PVcu20FPxwiq1sfsGC29jVLpX
Iw2uZxySKotZ+Ozn2ejmdQcJ5S1Kfr9YKJdIWlIdlw7D7c/2j/FY+Os9u+Z2
Yzp6nz+IcSNNYW2x4UTxogxodMR/tZadgvyvoR991zJQx7Eu0zCYAlnamXIh
PBNTJg1/DodM4fh/qa7BVtl4faDcouHyFPbQnWw44dlI982wfXBtCmX9jAUS
Zdn4M/eMS+idKTxkd59uW5mDm2LLQ2QfT+GS2/zXQx9zoNLo9MCMMwViscPo
tn154AyZVWrMTqHS6cTlneF5aBRsrl4myUavnMe+L4V58NOabeyRY6NV/5CS
LOkenibkjwYasiFT3luz5dA97D84oVhwjg2+HEUBwntQ8+tQuR7OhtPze0oS
MvngXmNo+sWw4fKt9/d7G/KR/STByCSFjaEYMyV3q3x8UzQ40P6IjeP7DwcL
UvIRORJ+U5zFRlvvTpth1QKU+S8TeAZwEMNQuFyvQcVkhy6PdZEDhzY9Nzlj
KjYbO3Kiozho2igxtN2KChopi1lA4aCZedF7sQ8VmcmbJkYqOZjV11R9Rqci
tmJ3n6eAA0lL/6r0tTS8kPfuYYlxcdm95qGHBg3z4Te7o5dwEX5uy0axP2gI
M2/rKFDkwrOu622THQ3+H9zfjezkQqgr73EzhgYXXmiNZzQXf7jTrGs+03DX
NaeadZML04Su2VW/aOisrfs3OoULsXX3ba2ENNhdX/i4gMaF9OgZzvbldJiv
TSsdec2FZavmVwcTOqIjnpQEveeiMnPhz1BzOmqH+4rEP3JxpGoVL2wfHSZF
KoUq41xoau41lfakY+uO8jxPaR52OHGfeMXR4ZvXkcNayUP2b3TBkSQ6ihbw
sqLX8aD9Kem2bgYdau92phds4eHphGH7iSI6FI40JY3Y8WCwZqJqSRMdEle+
RHmm8iD5KcPFQZKA37kFB49l8/C8I1onVprAR2/lTR40HmTW7L+VJkugxN6l
5UglD7Xs//479DsBR5UWBedOHiaFegOOBgSerf7+4/AnHuLEDXxjjAlskl70
/NAoD5Qsv4LknQRmpsy8Hdk8jFtw5f7aQ4BaX1VhJ8eH/8q6U2RnAkuftl/b
t44Ps+TBZN8jBEJKfzn/pcaHxsstYRePEbC+q0myMeSjnuOetvUUgcpblh17
TflQ1Fnc3OtLYH3kccLKnA+Od2CLVwABlk+OraUjH/2xUkaKFwi4HXmqZOHG
x+1KFFiEEXi9v5u1+wQfv3bYD9pFEMg0kc0wC+bjt7Z1XQtiCEhs1fElX+Jj
WnZbyoOrIj+qNkAsHymlw5uMrhPYtfTqmGkqHw2o/zweL/JDKniyI5uPZs0q
6ZWJBFZznt0yofGxrrdQdl0ygcjxPvftJXzE/NPAlUghMNHP1zOu5CP4qRaj
OVXks32VpBGDD/d73Z4hd0Q+X+t//OMVH7GKjO9zd0U+q+2KDd/xcXT+8WHv
DAKUMt/LBp18RJ5KKSzLFPml3tiv/4kPua+LP3VnETiZTqjpjfLx404dZzCb
QGv8S97WST4MrWw4DTkETKKG3uqw+XiaptWXmEuAdn42Z8sMHxOzrYVGeQRk
TisEaksIcJqX7lor4ovuRuZaSwVwE3/PVb9HYMTBUX6znABHH5eE+onYdk/g
xKZ1Aug2O4+mifjxjoQaDTUBFm2e3JYjYmXd4iR1bQGo/d6BsSK+qdZ4fKOh
AIs1alNsRMxeM7ZNzVQAYUB7Dkt0n/sy8SWq5gKstw1IDBVxo5hS/wZbAbq9
DvoMifLqc3eUKzsK0BGuvUlDxNkTTjFKbgJY2ia0/CWqT2rw/KH1JwRojRZz
dRTVH9BB0fzdVwCZAuE7E5Gf3oayGcVgAT6O96mKifyZM969V7gkwFoTjnth
OoHS8vGCtbEC2LBiIraI/EdlqO6VTxXArDrjWI/o/bQX0md+ZAkwEL6hbhFF
1C/B6uWvqCIfb2g71yYR0LHXlA+qEEB+1Dq5/xaBnpqit1bVAkS/Xe2VfINA
rJb2ZaWXAnhL6R5QjxPlkdo69q5dgMLC1otTUQSuBpenU3tFPhLPPNC6QkB3
RM82bESAPrswrvklAnE1hhUaLNF5zrtrFUIIGAabREXLCqH81Izv4ENgcLja
0HmtEL+YdTkpJ0S+7XZ+27pBiOdN262qPAgMbSbb9esKIbehriDLicDtYYvf
je2FmOvP1WBbEjC2a2iVcRJi4w6JMtNdBEYZVrFjR4VwvmClflLUzybpNt8p
/kIMuUt8dBX1/5d9+//9kSBEiuSF722i+ZDMaPd9dUcIjZJHaRvWEDDd7Kic
lStEgZu6nMMK0f+VPBxnVSrE0YGHEQelCIDhdpDaLIQgSyd+bJKOCc2BRWEf
hLDXaz+24wsdd+4eZdj3C2GWYfUtcJCOySBP1blJIeIc3aci2+hI1/RhOi2d
RmnQjTPqlXTsvjtO2yo3jZ+LFfWjSuj4KXHGSWrdNN7IdF1i0OiwGDpbW6E1
DSjtu9qZSgfrzrnbMjbTGJSuoN84R4eNxBXNVzemscKVmiGmRYdHjUmnOWUa
e/R0liUq0xESwr1cnzmNo74nhrmr6Cj4drbzdfE04l8cDz1IooP/zu3Km+Zp
uH0PYtp20EBLM/nQIjuDNPctbPkgGp7u416xU5jBYl+TR+ZeNLxf+Ghzq8oM
Hj9R77J2okEYqhnZZjCDbVIP50d20mDvvkar8+AM+pQbrpMX0jCjzo3syZhB
sjX/dRaFihVDD7VcCmZg7Bqr5xhDhUbG2a7eohl8nk0OHj1HhYP0mNan6hk4
djpIxjtScf9XR9dA/wwYh09Qp1ZScfDJQ+3RDbNwHZUYXnCrAKV7z378+fcs
JuX6yvqc8vEfRcVp4OEsCOXpmGyLfOh/6u5u/ncWbeUnqwz18/HYb1d3yZtZ
hKharJ9Yko/aFPmu0+OziP3svfzY03to7X/e8WXTHAZkTmUZyd7DCo0LB7p0
5/CgJO4IhZsHxwDtjnrjOfwsJXs4v81Dj/jddprVHM4tdzn5PiAPIxq+bZ4+
c0hViKSS/83FVODq9wOFc0hpIk7vMsrBtuqmfS1lc3DdxV6zUTIHFyWiWmr+
mYNpduSX9PZszNz53pzdMIeeQwjb4psNCUbdO5evc/B3aBLrzcjCaqkzb7vU
5/FrV8f90P4MONkpW7/WmUfNy86yq9QMZKZ/eFO1bR7RZOuEeZ8MrNciv0m1
nMebtPULdVnp0LBf1ehwch52whVC5dm7MM6srW+hz4O/2yE9jJmGUZ0yU5/S
eaQKaLv/JtKQ/DK3QuyfeSjktuS3uqRhYjIi37BxHgfOXLcark1FNkwjMifm
seDlBZ+X4Smw6tRiG0zNY7med2KwRgo4Popnmqfn8SKsbLyqjQKNvRHakVIk
8jLSb6o5GyiIDHJTqJAnkZX3XC++UJKELtPOD/OKJHKVy1JJbesk0fyyTbZV
JpGNVh6XM2hKRE/WjkVfNpHI1ZMWSYOaCdA9WfFSfwuJfLvlo9SI/W1c09W6
ckWPRH6c1NldERgP/XoF7hoTEllcUmyJZ+5NXE+kPPT6k0T20LJ83Xj/Bgad
l5x9tItETsix/U2y6Drifwo+29iQyKqnb4lpxV/DyJPAvHQ7EvlU+Klbk6eu
wjhm3GXsAIlcGnu4mm8UizH5nrbLbiSyd4RKi1x6FExFIZo8SOSG8L28AOVI
UEoardZ4kcjs9aUDdQsj8C2ELOF1ikQOuv9qZ5NPKP40e1L78Kwo3/mqkPW6
55EqrRs+F0giH/t6zWPvW398/1C4zSaERD5OEY9rUHdHRONVL/cLJPKqtbll
5XGW+B88wZG9
               "]], 
              LineBox[CompressedData["
1:eJwV0Hk81Hkcx/FBfr/v7NRGI+mUFBE6VhfV57NUju5RqpWiwuhSlIhKirGu
xjmG+SlSIyVdrpqKlQk7SFuILUVlIh1TE4vs2j/ej9fj+e/baKcfz0uTxWJt
Gt7/hW/PE47spzBNYhZ83MMeXuoW3Q49ROEnoYdBvDYfRs6VT7pzhMLFiyyK
0rQPge36xjO9wRTqWN9nfFoPwx6/dx+sT1A478nKDunYIEiL/77RP5xCyy2n
vxz9cAzk+dS9gkgKJUKN+MTQ46BW6M/oiaawSFCiMaLpJPA4C9U+SRQy5hOa
1OxwCDN3cL8oovCbf+f1Zo3TUOC0ubI9g8LyBeMfLeo5DSOjjqa451DoZflS
dSUnAmykgh/puRSatp/umBgQCb5ykVfzVQrP7kp2fr9YAPIRJfNdCil0M1XH
8W9FQdipvmeOcgrf3CyL2bk7Bq6dJ8siayhsiJh/eJp2LLx4YHCpoo5CrWST
g6+zYsFmaFHgsiYKT+67M7TqcRx8Oxasb62k0NCUw+VqCYF/uN/V8CcaFVs/
t5j2J0C+m8BM72caa0WliSvmJILKTm+QjKHRv9pPGu2VCCG6Vlmq8TROzY4a
lVObCPHXPLsrzWhMSsjuLUhOgkJl1cl9TjSOMrC6bayZAv31m3iea2hcvXDG
WI5lCiwrbp/uuoHGr+//Kdu+OQWqIgarYSuNNq1S6aa8FPh72hw9ri+N0mpP
TblTKmi6i3JLo2i0b5feCD8oAofl00OuxdJYYLQxfnGSCGJn3VhzQUjjpJW2
YaGFIhjbX6OKTaMRu2dPutongpmioSUeuTSeWZJZ/iw4DdY2eDVQVTSqjS3i
VvHFkFSiujDwJ40OVyKOrT8jhuZzJwM/19NY8fRhtOqcGDwPiCe2NNEokwXO
1m0Uw2FOrVd+J42tjdClWJoOGSus+11ogoH3q9vqBtIhL3+z6D6HoMkO//kR
ehlQMjbE2kyHoPc+Vr3CIgMa35YfGDIgmGPz784x2zJAJ3JdR645QSnzXSUo
zADDj/5h3NkEJ5fPDXxekwFWrqmTT/xC8IaDxauytgxYZfJis8sSgvO6c3e4
EAlEyvcofqwhuD2u9H3SRgmkWMX78nkE7Yx2ncvylkBO6g3qL1eCPdq7KxyD
JFDu3Ye5Owj23tZ/tjtdAoNUZCHvEEFXI0X7i+cS4Phd5t07QpDF0u4sU0pg
QpPik+kxgkcj+RT2SmChlGv+I5zgAffIIi6XAX+HrExpMsH0bsdZBisZOFXw
0HaMmKCPo/Pejg0MCMcpm0MZgp+Klleudmcgv9OKy7tEcPnZ8en9/gzI1vGu
y/IIup/nBMNxBmqKj6wxLSDoPHWpjbGAAaVAJhgsJsg1rdOrEjPQ+6ltuo+M
oFnYx1O/ZzNAbdH6o6GM4MSK9qCuPAaMZzoPXqomWDq1KDXmDgPzhPvFunUE
z9tZairKGcA+4YLQJ8P/hxSHXa1iYHtV08ENrQRHLA21WPuMgf1zBkbJ2ggq
fQ2Eo1sZCE2bcsXkDUGj8tSAQ68YiGbZOSYoCW4YqewJeMuAmO/1duADwQeG
LnrjuhjIfRwV7v2FoMg3uP+3jwwULbpq2KAmmG/sdhNUDFSer5fZ9hPkm7mt
rlQz8JR83XppiKAswK6pu4+BjoP6vTpabPxqa+9xa4ABVfPi5BCajfqPBlQT
hxhg/eo+9x2HjXtagsQzWJkw+nJY3XodNga1LNz2WCMTpujm7L2rx0YqZabd
JK1MsAh+REzGD7v42nr2iEywfd11UTiZjbUfs2NEw3Z2+tl+wIiNGndd1PJh
/weB813f
               "]]}, 
             Annotation[#, "Charting`Private`Tag$48663#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0., 0.04419414325238147}}, {{-3.141592653589793,
             3.141592653589793}, {0., 0.04419414325238147}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.8, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {240.53333333333333, -873.18}, {
      Center, Center}, {450.99999999999994, 231.}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
l4SVcw==
               "]], 
              LineBox[CompressedData["
1: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
ROybM3XsDsDXqs6CkvAFJOvfunBnxBL/A8i3Mhw=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$48450#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0., 0.03928367313099644}}, {{-3.141592653589793,
             3.141592653589793}, {0., 0.03928367313099644}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.9, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {721.6, -873.18}, {
      Center, Center}, {451., 231.}]}}, {}},
  ImageSize->{719.4, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.8433289725126343`*^9, 3.8433291633013077`*^9, 
  3.843329292439786*^9, 3.843329364600891*^9, 3.84332941682825*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"5453bc48-74db-452b-a166-34fcdfdb4181"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g4", ",", "g5", ",", "g6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g7", ",", "g8", ",", "g9"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8433294321613026`*^9, 3.8433294476081223`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"04c69efe-3b82-4375-ba10-eee338b46a93"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw12nk01N//B3D7jAhRlBaSZEuSNuQ1okWSJZUklRItpKKilAqJPrKULMka
smWnyB3bzNjNeyTJllJC9mVmbN/bOb/fP5zHOXPmfdfXnec97/X21ywd+Hh4
eELwn3//DxmLGc6uF6ZGtFx9PC7BAt2Ce6PkdcJUM8W3aBRbff1gjLSsMNXx
lIvbIPba/06aKEoLU4e59fG92GIcOnurpDA1yodxoBV78cKOZBATplZ4XrlI
wx5tTjpqukSYanW2cj4Xu0dPiveUkDC1obhn6WtsZurDLCc+Yaoq+Uv4Q+yK
5aOnbi2QqV+J0ojz2LnedsI+XDI1OSZdai924lB9Ycg0mZr4F5HWYr+w1r0Q
O06myh5c5T4pzgLfqnfLMofJVCet9lMM7FuaK9HHATJ1aKtyaQS2NXlqVWsv
mbrbV2JAA9vY7Tz9RxeZ+rRXoHhSjAU6PUy3sXYy9YujDk8R9prirCZRFpnK
nN7DsxV7qeJaL9kmMvW4wP3i/qUsWHgeqKpcR6ZqGPwYfI3d4+jka1hJpmru
VajmiuL+sVq1LBCZ+nHB90oSdgXs67ErIVMH2xWCDmEnySjoeuaRqQfr9Iyf
ibDAkf5tNDuRTH3WtSSuTxi3d9uhN2WxZGo7W3frTeyDscUm9dFkqsCL0wbz
ZBao3n6Z/DuMTBXNF+oRwh5WMrNd50OmzpskK4wKsqA79JOwujeZqq87V3gO
u3lBrWj3PTKV8qe4oUkAj28rWfKYG5larWjjE8+Px8uvgh54gUwtqQ1UXM2L
2zOu6R55Frc32LLdlQe3xy5WIcWWTJXyypeuXCRAZ8c9rworMrXA4PXG0wsE
zPdt38YxIlPfHuzNcJwlwGffuzcXN5KpCzvUxlsnCaAGeprLrSdTOTWEbu8E
AXNME762NWTqCYmSe3/GCbhpN+xgvJxM/aG2vX9wlAD729s2q/OTqa3xgo+o
QwTAu08lYz0kqlIj+/27HwR4jgQ5p3WQqDmv5Abdegko3H5W7nwbiToyPa2h
950AjQq+xy1NJKrz4djPZV0ErPl24FBRGYk6f0Sk4sVXAriiRNu91ySqyMLI
Hp9GAnYcTQzYHkGiety5GyvRQMCNSDe94TASlf1LXi6yjoA/G2XizgSSqFH6
MfffMAho07d13OtJovp+cen3rMDPd/01RbLGn69EVXcLCLjewpUMkyJRRzem
Hn0XQUC4pZnNC3ESVar+5JnOcAJKmxPjX4qQqPZGbTvFXhIg1HBYM4KfRC32
Djl2MYSA19VvTGMmhKijSwZdR58SwCjc65/CEqI6dYtHOHsSsC4yYL4kTIi6
N80HyZwkwEim2+jTcyFqegpK6z9OwKWX256VBQpRG3KKogqtCMgP6ZAtfyxE
tfoWEmxsToBxgMYu2k0h6jfXi0sOHyDA7S5xo/moEDVv7Y/xKm0Cak/L9v+U
EqIGIS7Py6UEmMXqAVdciHolU323jAgBLT124eKiQlQNyURWOJmAzvOJRjoC
QlS7xuadQfwEjF5Sj38+KUiV+d7KPs1hgswtfRudz4LUje3L9z7+yYQLQfb1
z8MFqeYi6f6TxUyYL0vL1lklSD1PbgqZsmHCj9yxEAthAeq4HTtqxK0ZdsQL
tfwnwk+NEo2/b7msCfQUCI1ANi/16gOK8HveBlhzV8zr2QAPdbHn2mtjsTq4
lFQrE/OLh2r1ZY5hSaqDwga/3MxeHuq6509G7XjqwEJ+8XdjOw/VaW+wqfd4
LfhVj1guq+Ohcjo3LOlvrYURcaZyeDoPVeFzTY9FXC1UJIW1xF7lobLqYm6W
b6+F5tdbrS92LqK49tC82Ks1wJN0LbyzZRFVskcL112sAc30zBar+kW0hhli
mXimBoI/qFgYliyiPbRI90+WNWDeuv6QfOQi0t7ea7djdw00i0vqtVstotCd
Byz3krAfjcsdqV9A3RpT7gspDOAJ0LSrrlxAc6nRGw0SGKAZ4vJar2QB0bPk
vAJeMyA4dmClWtoCSr9/2mhrCAPMS3uXkf0X0PmIDOlmTwY0TxH8FYYLyKhM
oPGkGQOanPJ+by+ZR0eO9Ri0zNOB6J4x18+bR86Bs7dNOXRoPa73cX/6PCLa
OiwbJunQYVT97ET0PIqNChP7PkiHAfkvWz3uzqO6OabByXY6CHzl3i3VnUe2
ss/jQ4rpQDaHvqpt8yhaYNe32/l0EKE/PtKgNo90X8qtcMimg2SB6Pqu1fOo
f2VIrFUqHeRC1tEWZ+dQRnNysn8EHXSM90oYls6hpRlv1xt70kGf6udhkj+H
XM0u9MTfooPBzrreoxlzqHad5wTvTToc3GhVcOH1HBqSf6XadoUOx3gv2vjd
m0NLsjQudp6mg+uHp0k1enNol/QqQzNDOrhpNi4ltOdQmJN4oByFDrdTJG+3
q8+hHp1VN2f06HD/ZbTx4Br8/JWy28t20CHweuaw6Pws6upK4Kao0iFZhbnL
/NMsav3D0BmVooPTppxy74JZ5Oq1ReTQMjqobgw5lJM5i65J2F1LF6NDlryF
reSbWXTIzpXXV5gORTLMBy33Z5HhQFdW2CINGIJMmjVlFtW9KlJQ+EuDAP4c
s6e7ZpHQmG/t9AANDvOGtH3QnEUpssq6rH4aMOfMB2TXzyKr2IZHiT9p0D7R
vLSTdxZ5ySbPxXfQYPB7s9W5Si6S6nnHs6qRBlnd2Z0hJVy0wn+j75V6Grh2
Bl+syOOi8VKL+epaGky2md/ZkMRFE4ELzFA6DeaamqP7fLgoU2G1ybNyGpQ1
ZCtKe3HR5Oq29HVUGnjXBWfud+eipwtZyz6U0UCQbo5SHLho88//JgVLaSBW
1tx7aT8XyQ1/MeEpokFzSfaVKH0uarfyWMIqoEHoh+DJ2h1cZPetrSMznwbS
BeZC6pu4qDvhSOXdXBq05Wo+t5Xjom8Ffu0uOTSIypZY+Z8MF+l5U0UuZ9NA
LqNZZZjEReteLpbfyaJB77vs3HU8XGTlXmf8LJMGSSnBumZsDjq0WWksJYMG
yonmptn9HJSw9FXiTBoNBuI0W3t6OMi5SyZHDTvjjcSZZV85aHXjXK/jOxpo
RjW73qjhIJa+cTE7hQb+h2/xcagc9PG74mbA7llY/eJBMQddDi7Xe55Mg105
5RuFsjlI9sjB/v63NHh+3rHoWQoHWXGYmoexf61YaiwVy0G5+x1lPiTRQJ+R
2x4ZzkE8pTwxW7CH1Rfmk305iLuF6b87kQb7uxOfb/bioOlNqaP1CTR4E2K8
Pt+Ngyq1KrmXsKcNR3J1rnLQu4yaFAls0+kXRuXnOag93ZJNjcf9T9VpPXCK
g97O/xzyxJ6z6XFstOSgsQ0zvvrYVkv9OFaH8POPjlSKYGcgtcBvBhwUdG1D
Sm8cDQRuMNfY7+agzUu/bqnEtlW8ndWvyUG8zvvsMrHzW9dQrinj8bj3n1Y8
tsjTCuaUHAf9/lyd8QbbXtfp/D0ZDgr9NF7/Fvvj36VTfOIcpK5IDivElozL
83sqhPvz9s9CM/Zly5MrJRbYKDTgssQUdoXA4rvwKTZi0k3pCrh9skVJumv/
slEbz/4NNtg3Lh1qSPzJRpH+UxuisWtWj9qpdrCR9flhRh+2fOPL0WwWG5Ud
zF2mg8fnjrfuo511bLQ9OXf+FXaz1nepsgo2eh5v/mwRW7nP763RRzaaW91Z
6orH3/uV+s66HDY6WRARNIjdZkwwLN6xUX5THo8rni/Nuds2bXFstDnsiOQC
9pOstUN2EWykNn6n4iWe766zlV59z9mIlqklsROvjx1Sl8SvPmGjcJsr3O/Y
v27na3ncYiN9WTquf3g9qNpULTqzUVbyHes1eP2Fdywe83Ngo9UbaKl/sfcZ
mHiEWbGRBW/8ksx0PL9LelGmFhsdO1yb+uY9nt/SJxbaqmx0dx4mc/H+sLq2
+cfH9Xg8TgfUNuP9w99yR4ghwUbEAxEJFbzf7GPETXuHZ1D4TguayQc8P2YF
XU6/ZtD3U86aGR/x/PCdch3pnEG2RgnLpfF+rriYHDZXP4MKmE0GQogG6zX3
tEunz6D9V9X+nKjG9cnyT7hG4gyaY+8Z/UXD4+328uj+6BnkdaBx430GDRqL
/9a7B86giS8KUtV1NPA0eINarswgaemdefkEDd6eP3Rv6PwMulS4YdCnBc+P
7/QuAdsZdCD7257TrTTYVHskd9vhGdRksqCs1E6DFsvFpFD1GWR6tIWxspcG
i27p59IUZ1B+qGaACq6Hqq9OrKtYM4OMW76a7f2F5/Pb+1djojNIS0+gIxDX
080XzgaY/51G+jyTcfcnaODnXn5NLGsahezZL9AjRIecV87qSsnT6K9fXMA1
XK87Pqz6s+fNNIpOgh4hUTpoLVy3dw6aRhnDcQOHcb3v9lM4Vu8yjYYLJaR2
rKHDrojHOgFbptEq8DDx2IbPy4/7BIVyppDRZe8tyY50SA8pqr2ZOoWUfzt6
38Tn1VUnleDvsVNIbbjOzvgaHf6uWLr6U9AU8uPxShe7TYdR1xZNt6tTqMNy
W+uCHx2mlc7b9m6aQrvv2LZfw+cnX5h3XtmbSYQUYqscxuhQeWn8jnr4JGrO
zZXeNU0HH8oF/aj/JtHDgIG1krN0EBw+UON+bxL5GOlrdAowgGws3q1uM4mK
dnf7Nq5kgNhizJLoFZOo7t3D6zJ7GbD6Ssm5288m0I6AjxkiUQyIYjD2L/WZ
QMz6i9/TYhkgq9Sqlnh3Am3cLBZq/hb7++hU4+UJ9Ntm8sD7bAasPKEUoGQ8
gTzGPFQ+0Bmw3DAk97PgBLrZu6dhZpoBoqsd+bUfjKND1+4O/j5ZAwu1km9H
r48hNcHtPOVbauEmiFpdmhlGHm507VcDdVC8rYE6VTCAFIN3zFmMNMD7ZbRs
mU+/0AyVP+RDSxPc1Ink17/Wi+SbFNUu9TbDixerO47b9aJ4sQONfL+aIX84
Jv+aaS9aot/9JOpPM0wnJDjEq/Wi1l/SmlWjzXBHJIMu0P8dnb/6dnRxoRnu
d5QF1p39jmb501ZJr2aC//2fUicte1BY6lOUZMEEHd8zB/svd6DdMYfHgouY
UMP2emtn0oG2cPeln/vIBOurr/k+q3WgCIWv/JqfmOB+9Gtp+dA35LVf40l1
BROy1x/dGu3yDT3uLAhjNTBhU9l+2SM32hGzwj7f4wcTls9sHsrzaENNS5cL
d4kSkHj5sLGqTRv6GVIobSdOgFbX5eQ4nTZkskXT89syAsyrU87+N/sFKR1R
1mmUJiAwbP3ni15fkNVN9fNh8gTwaa4oW/WwFa34sv9p1DYCRpzmnj/wb0Ee
ZqXrg07g3/dZWyWOXGxB+7ZE7f6B88XHyYvBa4xaULwW66e2Lc533szgD4ss
1MgSG2o4S4BsRHLIxC0W0t7j4dV6CecRunmYowOBevcKF8JdAlSW+kntMCTQ
qY83Jm29CBA7WhImsJ5A3ueyE249IOBr18YX8R1MtLjBcH/sYwJcprkvvh1l
opVCDdeqAwmI2Pg23GxvMyLteeF/PpoAryvt0uvkm9EJo8Gm/TEEVNvLaXyd
bUJuFGVHpVgCbDwnNaRuNqE4na9e7QkE+L57o/nkXCNazA1cKZ1GQDtpYts1
/Xr8+0fu5tciAh5XResAm47o/kL8vs0E9DfuDnMopqPBzEsiX5gEHPn6ZTDw
Dh1pdy9mbWTh/g5LxbSxaYiTo1NZ/JmAbJlni9c51cjFq5qnsB3nocv3qpK4
lYiPzOoR+UnAXnfZtXUfK1GCk7nspj4CUh8Uu495ViKnZZpd+r9w/noxqaQ/
W4ECJE14L/QTsKTs6tMvs+WoempJtA/Ovy4KH18v5yJU8NfrxDqcp3fvnDY9
54nQrajwOt4pAgQOay1mcsvQR4ZR6XfsaPe0cwdmPyHrjSclXs3g/MiIUvKc
K0Gf+5kuX7gEhHW2fqHdK0HLDcdy3+C8bjcu+VRq/iP60/7T2X6OgKnVgYMZ
8x+QQUDCvu55AhSu3c3uXihCT3gjL2fxsODv46Jz6g+KkHqbw9GTvCwojpiQ
9FgsRGN5S7J4+FhgVnHFXZKnEHWujCw04mfBvRW2Ovt485HI9TeCCYIsOKAa
MRjyMA+JJgw6awqxQBJaXnfx5iGr3HbDEux3TocXb/PlIofTZTtoJBa0luhV
pfFno62vVNRzhFmwxsO+a1z0PTqV3lguv4QFzzxNtIMls5BE+Mm+Z9hXvNb2
1K7NQGvlPrbYiLCg/b7QDqcN6ag+4EdsKfYh75FAQZU0pO8UNSMrygLVx+U7
KdqpyKb5tkkDdpRP2n+du1NQt77wgfVLWbDEL+yHJySjk7/nG65jD/g7PC84
lISeuwt5kcVYYBNwpM/SPBGtOv066Qh2beBO3dFjCSjiUeTxEOx3QcK/Vc/F
oZhTf61FxVmgJd/nEdzwBqlv70w1wpbcULSxru01Eo+8+MgDe3zjU6bgzyj0
9/jpvjRspvIpL8pIBCrbEMFsw85W26xylxuOhiJH9/NLsCBYY7GlQPAlctlt
uE8V23Ur03tUIgwNOl6rN8U2105UV1sTghpcT3Q4Y59xGciuOxKETvv2uAVg
r3MLIhs4BKC20vGXidhdHlpnC+/6ofvLPeADdsyD1iK10Eco89q563XYxUum
1u218EK9r16rtWPvlN7TqH7fHTXorXPpw75iuGRW4/gVZDvZsesvdnO+dh75
7AlE1SECx7Bb3DL0tXIAnG9wL/67f4y5ve+P+evzoPLTqnbkX3uzbar3xF8H
fvSj4M+/+8IkSemjbh5guTJDpQf73WGHbfmJ3lA4WLCRhT2wv/yb/n8+sHS1
aFoFtqrBWp+aW/7g7FJamPWvPboe6lZnn4HUiy8mr7Bboy5fHlEMhgvy1y/d
w55+FVGWvyoU6v+LFbfDln5Jk/QUewEFevf09f71L3TyIvCHw62bG6alsa2f
K5QIsF+Btl3+jmE8H3eemYvXDkVCvZgFTwV2sV9GkVVrDIj6Gm05g932uF1E
ti4WxAf+vlDGvkcRyB7pjgOnowd9hvH6iNmjJVDQkgCDhz7zuGJr6BlnyTQl
ws7460Fq2GU6Z609a5KAFhia/AOvv66dQRlQlgxLvI/dNsZ22fH2eEJxCpx2
v6M5g9fvgnYpj2BeKtR9Xu8ej71Oa8CqNiUNSu6oJAzi9X9Gff+8VUgWWNhF
hh3H+0UvIjloOu490Cz7t3fj/SX6iF/isHU2LDy1qD2P/efv+fi/jjkw/sK2
7iyZBQnVilWaT/IgSCtSTxXv1+DZlme84vnw+kyvVyje3/e3+h4jwvPhs9TD
gmkBFpyK6ft1M7kA+C2Ul+TherDcPVm4qLoIOrZ32sziesKXfpx4YloM+d/c
zxpij/YIRVt/Lobw3JhzTxYJaDjsqM79+QFOLH18kn+BAD9FZbM9AqUQe7ld
uw7Xs7k/VrXn1lOhycXGPHqCgAmBTI1DDlQgHA1dEscJGJATDNN6R4VUjuLL
lDEC2o4VnOLfWg4bQwp4k0YIKChf8TeJUgGS0fI3nAdxvY1sFe8/UwV7ir1j
DHsJcMjXcGtOrIICp/d00e8E2Db5tRX/rgLplcqiRDcBJoI7459eqwYfCVa/
eScBytdfaak9oMH4o99S8m0EfD9ofczlDQO+6h2zEmwgQL/v3rmGTgbMKu9B
7+oIiHoY76y+tgY2VcV9OVRLgOXHAd+B6Boolgtd8ZhOQIWaV+HFyFowKSv7
XVdOQIJYgsyZF/Wgw4maRQX4/B+YGtq0rxnO6i5s0sXn49ld5JtfLjTDsicu
1NuRBAT5yXL8fJrh9ozr1pxXeDwUQPBXZTN8zTuYKPsCf98p/7VJe5kQUpww
Rn9GgFSD7BF5CgHGw62v/8Pn9eR7eL9StwUC0pXbmvH5X6+mK+l6ugXUHn56
6GWDf4+k7HCnP2iBrKRbhUrWuP2xm3VvVbXA/o2NtS5HCcgJWk1nmX4GmVPr
ez8b4/F1nukKOtsK8ueMR3h3EPBb9b2YoF8bWNwrP/FDBJ/Pb9e5jDV3wP1L
kiMXsphQKJRhmTreAR762QUn0pkQ5rh755nlnaBdGEccSGXCYRUrnoYTnYCo
3qvlE5hQlvE0NLWrE8I+kvRzXjIhPm+y8MxQF+joHHO3vseE/LN9i78e98Cm
cr7s5gNMuOtScvBYbC98DjVIk29rBuu4LSde//cL9OID3rEHmuDikxq+7uYB
+K2uW3i2twEqfdTUntUNQ5bVgd8/FurAbllfxfKTY2BwJ/6Hm1EtCES1TAae
G4OQ675l5/fUQppClRL/5TH4ZpIncGJHLcxsSwwY8xwDQ9er04eUayH4+DnL
xtdjMJjj4HhJtBYqozu/P+kZg+np5bv9P9eAslIrz6zjOFhVJ/8JuFIDjVnV
Wjdcx2HZjQbtlQ414L6z4MKfO+Nw6kISX7pdDVQcfMH48nQcDuT5H/xuUQOn
rlgG56ePw6e9DldCdtVAUHajnMvIOOT2Rd0gkWpgQoeu//3WBAwxbzF9UhlA
O5q9j35/AmSz2jdpJzIg4mrk4Uy/CYh590LzTwwD9N9csfEIn4AexYEbF8IY
EMArcWtZ4QT0C1Ouxd1ngALDOtNgagLu5ba0bTvOAItjA6sTbk5C84VQ3klh
Bii6sBT8706Cs2c600GQAdN+pSoujydhbrJ+VRcPA14XB+3UCZuEVrkbKr0z
dOhfve0okTsJMeVDv3f9ooN3790AvvFJ3P517Rur6PD+2lKOvesUIMf97A2+
dBhiac6M35mCy1ayW+Uf0kF1l9XUo4dTYHrWt1nRiw5JPNFjCaFTIM5rZnvA
nQ5RIcoDvflT0CPjd2zcAeelPMNv9pwpcBxrl+k7SIcKGcev47zToNyxLvzy
Pjos3g348mjJNEyc9GlnG9DB04jJSlg9DYn7p+u26NLh2me7+t4903DSNWCA
pEEHmxmPT/aPpuG0vGGBwwo6vDoVUzIeMA32w3IynpJ0aEHUD4/CpmHS1Sb0
lTgdzPxJhQlJ02Bl1//7L86fRqteZvXSpsHju30IeZEGj7yKM240TcPurU8o
F+dogL5/S+Nrm4acI3GbGzg00ElTSFH4Mw11u8aIwkkabNHNjrUXmQF2Sxri
4Px7NZYVMy41AztK3Fvi+2mQxj8T/WjNDASo6h88ivOyYv2eiITNM+DQuN2W
+E4D2dN1wb1mM8ANffDG4CsNBB78emj/Ygb45FriftfQwOUm/7Fzr2egv6Do
gxHO+22O8spnk2bg0jlBjTQaDTLMbRpP58+AadUxraBKGlgpNMqebJkBY2vH
Px8/0aBMevDviY4ZOE8Erj1VSgNlEXL58Z8zEObbUMZfQoO5CQNHq8kZCAmP
MncppkFidUGe2XI2LN154FdqHg1EPxJ+R9awQW40vPhZLg1uZY2cNFVkg+R/
yUIeOTQ49EqFx0SbDQL3Lq+58p4G+YH7WcZ6bFCZ3/rbNYsG67zPJx80YkNq
Xve2B5m4bjvFHN5vxQZG0VPrgnQa2J7+KLfPlg18LtrbOtNoQLP4Mm54gQ0B
cgovl2JH6SyLNHBjQ/D3VxNPUvH4bNG4SrnHhl09TuPMFDw+G0wAfNjQnyHm
pYi9V9S3T+8FG5aYde3+8RaPD09Cse5rNuxZGHA2w5aeKgvUSWIDVyl0a1US
Dbz/fLPbncGGYY23vgbYA53srbvy2ZD0tv8yPRGPJ7FCcGcpGw4aLO89hl1G
02rbXsWGl9+IwaF/91slZuna9bj/1yr8n2GHvr96f1sLGzYtd/ugjT2X+NRC
q4MNxotX7v+7P7sYkay49ScbtO6vb3uD3fyscmbLEBu2TS/QzmLrPOyp1Zhk
g13vORO1f/eN7vMxm+fYMMmMcliIo4HYZdnr6gIcWOH4d0U79h27nUZqohwI
PxZsW4bda2klo7qcAyr2mbvTsQ8fuD6gvIYDr86dy4zDLtQN+rRJkQNmu0qL
/t0nymumByupc0CxnWr97z4xQJFxfqM2B3QOOQTnY0+u7NuhqMeBndGhdvXY
dkv5lmww4kDCiGLlEDaDV65z/WEOeHoOflqB26s1rZstb8UBEe/UIwewXw9Y
P5az5cDf48vcH2ILdbsfX3eBAyaXGjWrsF1ZoSprr3Lg6I67D8XxeLXT38+t
duNA39Hki+exjUrrm2TvccDFldmNsLOy/ySs8uHAsmPXhxTxfDyM3GAs84ID
gRoJn8h4/tRJb+f+RnOgRyplxAe7zU0puyqRA6u8j58WxvOvYa4icyMP9+9A
er9qMg2+fkqrPVjCAW/NLAEGto+a+n25Sg6IVUmfdMbrqV1oS189wQGpeYuU
Zrz+fN2yIxLbOWCasyE26N99du/Ww569HLi1/WSdFV6vTz5p520a54Dstaul
HLy+td10Hj5axoUagaXdb/H+6P5eon1yFRdCZ5Wt32bj8Tbb079lPRfKLG/M
ZuD91KNKMevU5IJN+4uPLXj//fd939pd5lx4QKoZ9sX7c5cZvVnMGn+fsMV/
tA80+Fl60KfvDBcKAgYOiuP9rBNhMhh6jQtP3g+If8D7/9cRiw9/g7hgy2Am
O+P6EFJKXK0K5wLf8O+Z4Soa6KlayUe/4cKvg6uP38H1JFTwxJODWVwIeLxk
ayKuP1BqeyyxgQvFe6fkTzbj/aHSRfb8zIUTvpujZQkahL86U2reyYWg8Wrx
nywaDN2w37AwxAWHxf7OoC80iFBxGrMWnYVlotZVht00MHz1J2nL8lmwl9Zn
GOH6NyxwxVpozSwIhkrkmP6gwb4eZ5SnNguPpWY23v6N60X4zf/ETGYha/cv
Y+VRGpgIPFCpejoLqaFHy3n46XD2k06LUegsJD0gkQoE6XDr1vT96qhZGL9y
x+YGmQ4J/c4ttPRZiHoatZIsRgd2ve2DmoZZaD6reT12FT6vXup8blw2B/f9
2+09tOjw8cj0AzPZORBlCxwp3U6HJlKuarPCHKyLXMMh7aYD10PFm7ltDrrb
v3t8ADqY261Uazk2B/ZpZUE+pnSYU5r2/ho5B+8SXJUKL9NBsidHzSZhDoRn
6+4+cqHDpkjn1va0OZDPH9px4gYdLEX61DpK5sCGcoG2ypMOqSOs1q7OOSh/
uSKWL4AOx4pz1H+unwdT/xWlp9PpkGXs3Db8bh7Ufaw/iEzSYTRUwborB9t4
UdWPTQetji9fGj7Mw8NctjZpng6FLnu/ZNTMQ1elI3eNEANQmEzr5T/zwJfj
+TZ8JQOaO8tZv5QXwCnsh84nfQZMXJdu6kpZgA/yShoZzxmwKwpVN75dhMBJ
1tGUvTXwU+O9nlPWIqg/Nw5aYVwDIZVv8niLFmH0ztCbp2Y1MDDkFa/NWITH
AavlHtvWwGvQ84oaWATVi0NxH2/VgPcNW9k8GR5KmPmr+m0ZNdAn85V535aH
cilScpP46lrIsico0r94KH0d285dEKqDi/JWagaTvJQAE+f6R5x6yP1BKtg/
ykfJbmpXVOtshEPLBZUCeQUouccjFkecm+HWIe0daTyCFLOyoysD8e/PEcOU
hFABQYpdRduKlENMcNojK36XLEix712ULTdlwilNnn4TCUHK+c73W0eOMoEi
XR/5Vw5/Ps/2wLazTBDpPT+vCYIUDb1NzdZ3mBDnEVZV5CVIqXju9JqUwoRV
N4W2xj0UpOja7YzsfseE0KseMf6+gpSAz7KmBRlM8D1z5tbJ/wQp54aCm0/m
MuHyPjXl2deCFMXiSv4nn5igvawyUL9UkHL5/RExVxYTalLHLau5ghSDt6SP
V+eZwKbzlfAtClJEPLopGjwEKP2W3EDhF6IMbE0vH+Ij4NHGbRMfRYQoSGZ/
8lkyAXoJN8Oy1whRTo4dzt4gRUB29CQrWl+I8kRh7PZyZQIigqatbjwSokw7
3VoIMiOAlin06b2fEOWSweWyAQsCpuqlN/4NEKI0t0VsMrTCeUNk55RjmBDF
ZvOloT84f4j63355OkmI0hL4a1HMngDvh+zPB2lClE6egZMFNwlwcuMel1tC
ohxzfzRwHuefzFNPVJaLkSh6Ma0VW8IJGN+7fI4sSaKcd7C6w8Z56e4yjfjx
VSSKT3uOmzfOV0FZ5warVUiUzNtN/pcTcH7sZzy4akyilH6zb337ngBu0zHL
c6YkigKpvkk/B+e9ol7F4xYkimPVluctuQQwfOdq4CSJIhF312Ya57cOBc3l
UpdIlJY7zHnJUgL4Tr9K/eBPotjZkI+/x/nvgJHi3axnJApfqpnk8hoCnqnl
mCYGkyiKXGVvd5wXV3Brx59FkCg3DNqvaOB8qfxqQe9sKomyqo2wv0MQcITp
wBRikCinb1t/vtJBQFjxeOJsHYki+V51QzTOq22xD26NNpEopnNzEvQuAs65
RK5u/0KiOK1IYCzHeddNpMEh8zeJUmUT+uxJHwHR+7S5R0lkCku4+GXNXwLS
Mk+8KhMhU/ZkNqh0DxNQvOKutooEmbIvg3VrFOfr1r5yl4WVZIr87007hXAe
l/Az+5GqSqZ0vtmmtTBFgNzwDW+pLWQKyXvYZWyaAI3j4WvvbyNTJOUXT/XM
4Hyt1HniqB6Zct1PzTCHg/M/7XL9vCmZ0mHKVpWbJ+ClRtAlJ0syhdfWv2kE
Oyk8R4h1nExZ+52zpnSBgPKLbErqGTJlgr3u/QEeFswJ+RVYXidT/J9XRary
s0Dk2jvLT+5kiqdimEsbtuyX+pFNnmSK87qZvocCLNiZIqU6/4hMWXyc84Eu
yIIbB+LfpLwgU4gmq951ZBY8fF+lKxlJpswUSX54hx0s0992L4ZMeU013Kwp
zILM3xpSlslkSng1bXDLEhaUmllml6aRKRQ98vZ32LVF7qab3pMpm2qiV60T
YUH/k9Inc0VkinhEXS4Xe2akW9GxlEyJq7l30V6UBULW/BVMKpniPfYurxp7
g/KhueQaMkUg/PPKB0tZoBXsHLmskUw55yem+Rmbwg7ecY/Azzu2q1tJjAV2
jC+uFt/IFA9ZksAnbGfN2aWl3WTKrhWiHrz/7qci1qUr/SRThmbKfQywA3j2
Hgzpx8/3+ankhR3p5NA3O0Sm8G3VPpOPndrs/+jiGJnyVunW5t/Yhbsy5JhT
ZAoYuoWskGBBdVxTqS6XTPm6cj4A/t3/kSdOJi+QKUuGf6xywP7hKj0jwS9M
USjj0ffDHm/b/eIuSZhisltzJgGbx+D01l8iwpSPVUf3lWCLv/NuNJcQplR4
Wig3/bu/XJZ0pWS5MGVGdXlc17/3Fz3oZKVVwhQ9m8CMf/eHut8H3gavFab0
7E03/fd+4/+9/0j5//cf/weQAhTa
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45542#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.17677672802135122`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.17677672802135122`}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.17677672802135122`, 
             0.2979093821953227}}, {{-3.141592653589793, 3.141592653589793}, {
            0.17677672802135122`, 0.2979093821953227}}], PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.2, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {242.4125, -124.1625}, {
      Center, Center}, {450.99999999999994, 231.}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
Jf7/+7j/Ay7z6Y0=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45755#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.11785114340246955`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.11785114340246955`}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.11785114340246955`, 
             0.19148542155126622`}}, {{-3.141592653589793, 
            3.141592653589793}, {0.11785114340246955`, 
            0.19148542155126622`}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.3, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {727.2375, -124.1625}, {
      Center, Center}, {450.99999999999994, 231.}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
v50Owfk7DI8ULqGuxpf9/NJ0MGiR1JV4uYS4y48fK9iI11stpPHNeAmFF7F4
VfnxeqIGnoZ6S0g5yOaMzQq83pYgRsWRJdSWy+kUSsHrKazYS1daQsU6NQ2c
3Hg9HY5dzwWXULxSna3cIg3qfMfFT1UvogGDp6L3xmjAFqBoWV66iHpPHrzM
NkoDxRCnGI3CRVS/9WHfw2EaBL8aXC+ftoh4Fw6oJ/+lgUFR9xrKo0W0I7Z5
l3gfDbxLJQzu319Eu6yPoS89NMistAyavrmIOlN0dnj8poFg+7cVvXaL6IVw
klVfFz7+VAPnxyOLSGtT9QFWBz7+guDhA+qLaNplt9uXb/j4XPremUqLyPTs
mEpcOz6+UNV8nOQi0iE/ipu04uPvLp26s7SA1C1y3WcaaPDVIefP3sIFJKqz
c46rigYNP2cMDuUsoBN6SHt7JQ1azmgUaL1bQCuelk6f+kKDzqPlgWejF9BO
tzNGyZ9pMCjRusfjzgJatEMbvcpoMBSxMdrnxgIiKv5655fSYFTAiivgygJC
prqcsx9pMDPf3xJ1fgEZ39Y95EfSgKt99k6R+gISspJ+U1RCA4oB9JYpL6A3
BSErhbBXfv7vVI38AlKQFDrpWEwDoTx+yR8bF5Ct1Dvq1iIaiIds+bQ0N4+s
pQx4afk0UNM5LHikaB49WTwsbJpHg0OEv8eJ3Hlke43jUmsuDTT3V3WfTp9H
fm8KRM5ha28zzrONmUd81V5XLubQwITd3szfax5xnNIVCcuigenttNIgN7ye
X7C7NLb5yLBCxFX8/7Ypk/RMGth8v7WUYj6Pmu0XVXo/0MAl/3HSF415ZH69
ZeLsexq4KdaualCZR+NW3/xZGTS4lSJ065vCPDLo12OLxb73Ilrn76Z5tPJ0
TsBAOg2eXM8Y5l+YQ+Ns1Qcj39EgeUe9qkHxHJpXUz+hlUoDB9ks0jtvDmkf
un6NC1tuW4huVsYcGow5vlj6lgbvJQzNheLm0O/gv8bHsemi9feb7s2hiBJS
1TKFBp7rsijct+aQYdsJJVlsDeGQkL3Oc+iDzjqnsWQaEAKGieEX5lBgvW7E
Y+wK7vpPptQ5ZD1XLV7xhgYBnFn6j1XnUMXOW1FR2HrsIW35inPokmbeLifs
+nmDQTHJOaRRVRy8HvvbRN2q7+xzaNMmJYZHEg1ixjLDV83OouwX4GWMbTkS
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
wf7v92LU//+92P8A+pyxoA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$45968#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.08838834850949852}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.08838834850949852}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.08838834850949852, 
             0.13578475614000143`}}, {{-3.141592653589793, 
            3.141592653589793}, {0.08838834850949852, 0.13578475614000143`}}],
           PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.4, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {1212.0625, -124.1625}, {
      Center, Center}, {451., 231.}]}, {InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw1nHk4VO/7x2esY6lkLSoqlS1JUtnuQ2SPpJJUkkKWNkmiEFqUbAmhT0i2
NGdsM4VzKmtFtrQRCck69rF/H9f1+/VP1+uaM+c8z72/5zy13um8zRkuCoXC
y0OhLP1tZrp87+x6ARJLWPrDAu1CfzZtnQBZthIbjEWssr4/WVJagIwKedAb
hnjtg6Pm8pICJO3Ok/DziJdPV3G2iwqQG9/GtuxHvOismQHLBcgrfwpq5BGz
69MPWgoKkKq4yZmReBZ06IhRj/EJkNMzL7MKEDdkBuW5cgmQXU8PPvZC/E6c
fcxngUYeecBSlUXMCDwhEDJDI3+VXbhQ+ZgFaQOfiqImaeQaPZnjzohj7bSd
n47SyMQNHhOcOBaElmetfDlEI5OitmiFIPZRW0W87qORnNINKnyI7WgTq1s6
aWS+Q7DMUCwLTL1PV/35RSOzfHqkbRFrdTR4j/ygkaykux/pMSxYw8z7LNxE
I/N6jI32R7NgmfzaAOnPNNJRol/kYRQLFh6GKyl8pJHqZ9qiKyPR/lxcQ/e+
p5H6s37E6odof00t6gcIGtn0XNNzZwTaHxh1nHhDI8/vcfpq/IAF6VIbtP3y
aaS0Tfdf63AWuFT9ZNPTaOREkf3W8TC03h1mKWVPaWTt57aRilAWmDxlmn96
QiPPSBkGR4SwQOnqo4y/MTQy/FjxCp5gFgxttnJYF0Ij73S2yQb5s6A9ulRA
JZBGLnpmhgpcZ0H9gnLxHn8a+bNL8OOda8i+LTTRQ9400nh94aK7D7JX2Luq
cGdk37hNThXn0XpG1a4kONLIfjVCgtcLrefE0w0vHGgkO6+b1PZA9tL0D3hn
SyPXRUoKRbiyYL57545pQxp5jtf9c6UjC0KMslLObqKRIspPbe5bsYAM97OW
XY+eJ+2xQsiSBXMN5lzf1qDr1aV8bpqx4PKJoTOm4mh/g3ZHTI1Y4HR1x1YV
bhrpltom6KTFAsgqfTPSwU9Ob1z+IHcDC/yGIzyzW/nJivXhhXdkWVC001H2
9Dd+Env6pt9+DQtU33Hdav7MT/5esE/+LYH8+dPYrLiMn/TQTG33pbFgRrjx
m38SPzls3uj/pZ8JmgfT7u2M5yfvlbLmJHqZcCnBW2cohp9caXma17KLCf82
Sf13MpyfLO7pbUxpZcI3PQcXAz9+su+E9oHGT0woutAzwW/HT9I19V4H5jDh
YvOMaIwYP3lM6NlfPScmxNlY2ceu4CfffFtxqPA4E0rq0549EuInqw8Wxcgf
ZQJfrYVaPDc/+dMmKGvQiglJFSmWyWN8ZN3DTB1lXSZUFxncedHER77piz/j
IMmEdQn35t/E8JGu/dxH2t4Xw4fj0r1dYnxkxX0Bj/JlxWD1VAdmVvCRt2Lj
j3XwF0Nzx4m4FcJ8pJpcnwSHWgxtp9MMtXj4yACCtUZmsgjYbirPHo7zknFm
Jk1qv4pAykfPXusLLynlvUE042UROEc4fXoYx0uua88YFzMrgvmybLrWal5S
sPvCdj7/QvjDGIk6IMBD8l9+XTRYkg9JfDPB9rw8ZPyv6yfyi/LhsD2X92kq
D3k7U57uT8+HaqrY4SvT3KRGtEG0dHo+5FlrSCf84yYZfElSoeH54Dvkk9pR
w02aH/Pbs/FYPggrzTHO3+MmneiKu0bnGVARwJPuG8ZN8lNe9JpzGHCjQfhR
UDA3mW28bXfOKANGfNdejfHjJq18pQb8/jKgpUpPu/gcN1lycK2eYwMDnp0J
er9gxk2a/bJb3J/BAM1nfM0PhLjJD23vJ2QOMUDr88UafX5u0mbr/dpWKwbo
zbeWTXBxk+LrHmtkmDFg39H8rOMzXGRenmO/DcaAIysdb279x0VS7jAjJFQY
4BvEUqqt5CLN6/no5rwM8H8lLxf0jov895aPP4nCgMC2hxI7y7hI788O5ROz
ONzZc5aSXMhFChzY8axiFIf4EdEWj3QussPYeMO3DhxYpzyChIO5SNz29p2G
MhzKHn71IQO4yFVf84+XvsbhXamBh/c19H3dAN38Ihw+rF59pPUCF7kj3kyv
NA+HHw0VKrknucgEoWfrzZ/iMKMv+81cl4u0vKwfaRuMw8L5e7WLu7nI4uR/
/l03cOBKmXiXr8FFuv099evGdRwEZz6+lFHhIu+ublzZ5I2DDMP3Vr80F5m+
b23OtAsOOhsaVcM5VLJArPiwgTUO/4kJaRwcp5LMHQzaHUscuHkN98iwqaRA
igznqxla39/CvTl/qeShxuHIOCMc7F4m2H1soZKHuZSzIrRxKElpPB7TSCVH
oGnf5j04yEYKnT5WRyUzB1bJVmvi0HMpwLO/gko+2RlyTUkdB+/dp4KFCqnk
8oy0FDdFHL4pJt5uolPJ2dOvftpswUFbpun+k1wqOeOvqr9vE9rfguFj5XQq
6Zj976r5ehwi3yvkmsdQSZp+9ZbPq3EYLziFiz2kkm6uEboCq3A4kpFY9PMe
un+Ku72lJA7r7gq/dQ+mkgl3zWLHRHHI3c/+En6RSg7n17gUC+Mggin+POiJ
1q8hLaUvhMPl7U4dMm5UMnXcOLlZAAct8ea+HEcq2Zpct3I1Pw4pvMvYlx2o
ZN8Dp5EaXhyoU0YT2nZU8vU5s3shPDhUfy9e/GhFJZMEZasluXBQ+cjmiTVH
+5sIcRii4PCwRFHQwRjdr2n73c+LdDj89In4gB6VvCoxcTtvng5dzjcVhVWp
ZKnWSalf03QwOcxUbVakkhmipe5UxDnGIzuSNlHJ8i+rhVU5dLikdFpPZS2V
FFtZxZc2SYcWmaS946uo5Ho8xrx/gg57ln0xKRGnkruv2uE6iCnsfQcthKnk
5agkxswYHZx/37QTp1HJKlvBXS6IqxqZx1u5qeQ6qf15raN0UCofcUpfpJCH
M88KH0McUajk6jFLIQvjNhp1jtBhNOO0p8YUhfRlbLK4hPhQfNKluVEKSYtp
FxdCzLz75Wr5EIXsXBsXncumw5rrywPu91FIgRWnmIcRu6V/kEruoZBjxZfO
LEdcVBvGeNlJIR+Ix4fUDtOBZ8rAsuwXhfwVPiwYi/iA3OLfuh8UUm7IZ/AU
4hTTN8HtLRRS9ofQ+l2IBy5dXctupJAXN3okiiHek7SDSflMIR/t0dw/NUSH
sIphm5UfKeSXh//UOhE3DeUMrq+ikFO8fzWbEcutcr2j/p5C5h+4aFuL2FNf
fuNegkJ2u74MWOLX5zpKD76hkB4DqRlL1/PHJtk5F1NIMkbn/dL9bEvtxrzz
KeT6BJOqpeel9ohHhL6ikOc3X8tYWs/wigaFuBwKGffO2VYTsc6eB+8zXlBI
fyKs/CTie06mJ4rTKOTDTOh7iPhrOO901VMKWYJ/YVYili98G/PtCYUc3nxl
Iw+y18VfAar/HlNIzk+1tSaIy/i1aqZjKGRvEldCNGI7e8aC9H0Kmc227dRC
/nh+yytB+Q6y16DVo/gl/+UqaeiEIP/kHH40h/jBYqrbcX8KeWPrjX1fkb9/
KJzk8fKlkLPNTq2WKD4UbGSe3vCmkNsGf975gPhdekzzUw8KqVCrMPRlnA4r
6qzO010pZK7RqnBnFG8OU0KCb50pJO7TzDeNeMo0BDodKKRymZjTjik6qAx7
Z8tbUkied9ZSAyi+r63abrTTlEIWJDZKZ87QoVJ/sN3IiEK+zhK75zZLB8fY
MxIuuije9q+8ODdHh0d7DgdmbaWQgX8uvXNE+dXpJCrzWpFCxst+Dd1HxUHt
fl3hh00UclUuj952lI8ffu3r719LIcMOmFpLoHxduLXrsOpyChkc1G0jScOh
Pmm73dm2RSKuO+v0kAgOlPTzcW3Ni8T56Nnhnah+qOW8bLb9tEgYy+pvDRZD
9YileGDvm0XCtmvwnAKqN9Yt683kEhYJs5Pu77Nk0P1WiOr8sF0k3MeyHb1Q
fasPHpXd/2mByPnmM3pJH4fPrvl/d76ZJw6uuJIojep3Y/uUtV7+PGFYaWjX
5I9Dy2Gd1/ty5omyWJnJcFTvWw0r7h95Mk/M7uyOnwvCoU/u6/Zr1+eJxXf9
w9/v4MDzfeZ6ifY8obXnXJVvHKpfpgYie0vmiD98Aap9dBz0yLBr5gVzhLGr
blEIAwf9XR87D+bOETzUb35rC3Aw2WRb6Jw0R+wfzw83LcbhEPWsfZj/HGFl
m3nnXikOF1h302t05ojOwRNyGTU4ZCg27LYunSVkjH9unWnHwXUL/jawcJbI
uiZRi/3GQWlTlBn+cpaYHSgOCOnEIU/ugINoyiyxk+YxytWNQ7FUw83mG7NE
wEdd05//UP3kbai0w2YJ01Qrzijqr/e4cau7u2eJvOOf+PnHcbCgRn1jqc0S
/Wmn6FITODTMWfdJr58lcv8TYahOof45Vr+sjYqe5+v7Vh316/7f9ban3s8Q
QQa8+AMuBuS109ui3swQRdd+nXLlZsCFtsiz7/JnCHPnv+bAw4Dxb9a+G9Nn
iNj0saLfaB6Y+1z/pDsEfW7ieIJDY0BZLV1eMmCG+Pn6kmWBAJoPPka+3Hdl
hihtlLLyEGQAb5U18eLMDMHwzPKtF2LA8rL6Trd9M0SJzHG263IG1L+huyfq
zRAOSlULPCsYEM2KHP+gOUPEKXkvJiGWLLTmU9kyQ0g9sK4hRRjwjaH20EF2
hvi8OyncYiUDEukiqx5IzRC1F0+rNyOWza1XHOKfIZ4NFch9FWVAZxadsY4y
Q2SJbHGyEWNA+otIbSvONDF7q+t6DWKFNGtLeu808SBOcWuOOAP6/lNr6eiY
JlI2nCEkJBiQmyJycuX3aUKs46CsP2K1xPoLl2qmiZ1fP+rpSDLgjoUP1zQ5
TShci3ZNRtyxIBN7kzlNRAl8j5tGvBt/u4mPjj4flaiylmLAw9MuxfdfTBMm
Mn8mUxH3SCwzFXs6TRgMz29kI9arZvxIiJsmIo8bW+xexYAhlYX5jNBpYvel
J2EsxPva0x5uDZgm3mavfjSKOCXKdH2B9zTRnfHy8ebVDJjcO8zQ8pgmlq/q
u38IseVkrOHb09NEyN7QyzcRp2dqtRgfmyZUeI6apSOes+9wqbOZJtZ9chIp
R2y7LGza1myaoGa8L/+FOJdQDv+pP02AJnl2HDHPpYY1TnumCd4ScoJHmgEO
8lfzetWmCSHRAxdFEBe0rMHOK0wTe17JfZdELHT3XcOE7DQh/oJr6yrETtqu
p/2lponRrEEPccSvB5dNcK1An/POxQshFv0vP+wu3zThl+qOz6PnnbM5ukpk
gUNE0FKK+hC/41nMipvgEOlHV2U1IpYuTtdeO8gh9h68dbcQ8SU3s9q0Lg4B
ljl2MYhrZNgnlFo5ROruQCkPxHJ1j9j0Jg7hmiJRBYh9A7WDd33kEFwpqa7L
Eder/xYre8chcvuD5r8i+yp0hz03fM0hEuq2305CHPhYZddHnEO0rbPld0D8
zbSx+kAWh1Dbm3dTErHa3FX7b/9xiJuqiqMfkT9v560dOBGP1ne8wdEf8S/H
9wHdDzlEdmNL7RbEmmJuKzxuc4hwiQfadSheeq4WqF/z4RAFyUIbhRHrKdmX
L3qi651VUtNQ/MW1Lh4KO8MhxsbzVDQRG+mbX4ux5RDHzotcsEDxmy7YSbxU
5xBR0SHL9FD8z5XcPqChxCGuKs3uzUP5YXt+65/X6zmE6YPvz1Yj5m725asW
4RDnZ893/Ub55pS8wrJzaIqoj1ag7lmG/GNV+Mu1Z4pwcxMaChZG/uE6dmG4
bYogerZuqUb5/O5sRszcpylitcaeGEOU7+vVdH9I5kwRF/IMB3n5GWBh8y9O
NW2KcK88lraHD9nb+9HBfU+mCEc24eqG6kkdc/DTlfAp4t8Il2Ypqj9++ilE
s/sUkSyne0ET6Y1mm8X0aJUpIqW9xsWbg8Oid86pbPkpwkvAmOGO6pvS4yPr
3q2ZIlJX6pw7OYlD4M9Xj0eEp4gE3gxdHVQftzo73rMenCTWWr7f+WkYh7Ar
b88vz5skwuSsv5v34IA/9lTZnDFJfPsud3wZqr+trNX/dFMmiRMuxyo//sFB
feGik2fEJLF8LuAcoPrdHrbh0CevSUJGmdPL1YrD7vhbWve2TRKWjnfCuRpQ
/3ltxMuHTxCK9/PfbmHhkBNV/OFy5gQRCu6mPqh/eLgqRv5+OkHITfEmvyvE
YVBimUxpxARh4p/02xb1H/aFZjVvjwmiYveE36kcHCY3n3bo3DJBfDzUK6+Q
jOb/mMD8spRxQqFEuPXHTRzeu436qsSNE0H2vhwK6ochmLNe4oNx4uj72K7N
qF/yDhnXXPEfJ6ykZC5f8sWBZrqiXcV+nNg32+UoeBGH5YvJgk8kxolRme4g
Syekj9zfnLp6f4xIPqT6Kx3pm8Tq6n3LQsaIhcls2sheHKQ3tyinXR8jXk+V
WIAB4t/sibpzY4R/uqhnpx4Oq45svrfZdIzYmpwgZ7QbB/G9UYwvvGPExsWM
ufvKOMT+l/LYfX6UkNukkcmthIPYQo4/dWKU2DzklhKggIMoq3Lf1q5RYvfL
18XXkd4R2Tb3I+TdKPHnUS4zVRYHYRkXbo2bo0QN18vqXHEc7vt699b4jBIb
roZuOIXmD6GWoNqTXqPEfl2XmdVoPhGMSnocfnyUIOVSLySsQPvnb1T+oz1K
uKu1hDcIIv3q3C5ybccokVhG7c9B+ob/3cDEcuVR4oaNjGM4mn/4AvhJLelR
4uOpg1+P8iF7junYRnNGiL9OH3l3ofkpxNpsjwJ7hLB6liang+Yrnrwj68r+
jhDb2qJ69qH5i8ftUu+/lhHitdX2Us8FOoRU3qy9WTdCrDt9bfQu0jfc8g8Y
EpUjxE4295pcNL9xtb/w1y8cIcIiTWO50HwXrFN46mvuCOFlK8C/C81/1MR3
+zzTRwjnfLGii2g+pBxqE0mIGSGa728XmUHz48IH0efsiyPEasPfz+zQfHkg
fnOh1LkRQt3PqPcDmkfTz2hV6DmNEI+1msT2IjajOHXftxkh7AsqDhih+TW5
9spEvtkI4Xnk+c3PaN5lJ97l/WkwQly7klZzEnHcTnyT4o4R4oyeYG80mo//
cVXstFYeIQyr937diVin/pvR1Y0jBCtLZ1U7mrcfJg8cSpFBz8uUZ0Yg7jxH
OVshNkJckhQvN0S8c7e4z4DQCPHLUciUivgOr0KYGM8IwXk2erAczfc/GrXj
tObYxNHtCSMPEG/9zyrj1DibcNxZqHoCcaDn6aI7A2yiV+OP1E7EjVpXK191
sYnLWc9Zoog30cJbWlrZBBnlLLekP3y/pPTMN7OJIR5PuyV98jGVMSlfyybW
VbI9l/TLuguVfBYVbCL+G6/nkr65iMrZ5VI2kSyecWqJywWHNicWsomikrwj
S9dLfaPuevuSTZSKddgv3e/ccwnj3uds4tZYq8/S80ovKR5ZkcImtjorFS/p
HRFM10Uzjk0YaGzbsqTPTi87cPV4BJu4F7WjcUm/Ff1wvh0SxiZiUx3fxyAW
yPR9nHMDfX89ybuk/xyu3H/R6IM+n9BOX4bs9crgv+JpLzbxqDE56xBiLpGC
KjkXNhHSGCH3HPGhtqqvxifZxHqJx2JziDOzf/71OoLsc2LtA3vkr9mrw1OP
rNjE46Kzj0nE+424aaXGbCJSME5HFfl7vF1JQWg3m0hLCb0ph+LD+KXebnU1
NrH6b5vac8SJfjYmRxXYhEqoefp2FE+YhJ/ri1VsItth+dQpFH8xnQ9860TY
xAOP1l5epMd7Xj27M0FjE7YN9Lc4YslH0Qdujw4TrHeV5uuRfi/Z9vril85h
YoP0keXdiJ0+/I7a2DRMnGPe+0FH8f5yUa2RyB8mpjOb6I4oP2wS7UaXpQ8T
PUHcHw1R/nA0AkUdYocJE0mhFdtRfhme+2zD8R4mTIM37tiwSIc+nqlL+84M
E3krV27YgvIz8um6mNhDw8SY3kM7DZS/rc2eTWqaw4R10i6mCzcOl0HY1m1q
iMhV5plXR/XAcC8RerpniHjR3s/7GNULSeNLxce/DBGGB9MEeIVwYO7/Jm2T
P0S02juuW1yGw9zx9N9a54cI92pJLQ9Ur2pPHRHbeWKI2PZ1zTc5pI9Szgga
bbMcIn4cfZTeLoUD5nkhc6PyEMFWUP51HemlEH+d88J/B4m9PUHHtm1E+iNw
+D++lkHCRslxcieqj5tDUhspFYNEWPzCn31IT1WH0zQnUgeJ3+yF8tuo3i57
0jzXdmKQuP2raShUA4c4lse9Vy0DRJXPxOMrJji4lMqWZFUMENsGpS5uMEf9
7G3jYFrBAKE6ZV703RLph+rdB+KjB4jMsPBgl4M4rPvGsypo/wBRMDnDTTmJ
w4vJpOc2lf1EYjqtdwPqL74zVl8tCvsJLddbzCtIv5ktcAkYp/cTh3WXfW5E
/WmA181DO7ifSP5tXpITivSjxM4d8nr9RMYvCeFvMch+O2rJicI+4thGgVMS
qB+qST0wEc3oI/jn12tUon6ZOWNRrxrXR5yveJp+E/XX+Lef2l18+gjLLoO9
wm9xuGr1aeG7Zh9RtHV7QXg9DpruH3XKiv8RIya8FWtGcChIrWGGsXoJ7g6p
e2a7GaASdhdLy+olXh35rbGog+YnN9NqIqGXWCZ97fgbfQbEqtV85VzrJcpf
F82YmjPgcln15DmtXqLAniNHnGCA+o8qDas3f4nRLpdHC2EMeLWyki5V2kMU
PlBX9G1lgM2JlWYdOT0EQ/79meudaD7PdviTmdhDRHc03grtZYCO4ZiElm8P
8V1sj3TeOAOqfeSuO+zoISSlulL3L8uHjp9+Rs+yuol45iu3EsiHlRnbfijF
dRH/Xjq/IjPz4bJWArfe+U5i7NDXO/1hBaAVetKk91wrkfDhXNbIviKo4QQ8
P2HeSvTSO3wtLIvAziOJ64tyK1GtqJacfrAIrhz8XvJ24Cex9l10joVjEdDX
H9z+xOsnkfIu0tbvWhFsKdsnvf/SD2LM7X4W5BSB+NTWgfxr34ifF60fiQkX
Q9o5C1Ml+29E1/5mz4WVxaD+61zGf1rfCHBwH+ySKgbriheOD2a/Epd0X7xK
31gM4THrv5wN+EoUPDHoGtQqBi41ibLVQS0ENbfMIcm1GIZd5x7evNNMRDlw
8UiRxdCct11k/9lmYvffXZsaKorh9fjZyDWGzUTH+m2XQj4WQ0hgQyRrsYkw
15yxa2kpBun4jKgxnybi5LOvvzcNFoNhlXWMy5lGoj9B9KzrKibEb3oeZ2VQ
T6SKp/zc6MaEAPcfkuvk6olddt35fZ5MqHCSVf0++5mghyupZl1igr3fuKrY
5c/EhUNYm7A/E0KzUtRun6oj7onfmPGMYMIP/rEd5/U+EeqPDm6IwJlwq/yJ
FnCqCCsdq0NcI0zordsTc4ZZRQj31xp7jDNh//ev/eG+VUTqgEFP7RQTpIfE
kr9xKongXcPCvgtMoEvdX7w4XUG8OAL7XYRY0HbOvzx95j3BGc3Uz93IAoMr
0ms/vn5PyE9P8kdsZkHmTeaVEb/3xElW5moXRRZ4x45v1pt9R2w8dU1gUZUF
gmUed7/OviX+w66GVexhgdeG10niMwQxVD5/P9OSBXt2TVqe8iOIwGLi2ZwV
C3gs1BdfzpQRvUV9DGMbFjy5kn3KeLaU8HHfwnp3mAXV1Ymb/ebeEJJlH9vN
T7Igpq3la6X/GyLpeN+pI6dYcGJU9K7Y/GvC9doj4uhpFkzIhPfnzrMIBb/L
CwYuLNhw/jq9faGY0OB1lH/hxYLBW8WnVG4WE5VtV9e4XWABM35M9NpiEaEn
nNe0/hILrN65XxGlFBHaEQ8vXb3CAn8JBy0jagExU0fK5F9ngbFSfH9UUD6x
/nVvoVIAC0ShOekXNZ9YrrJ9Kv4GC7JcLRavcjGIRxd9nI8GsaDljU55Njed
CF43k+oWxoI115x+jQq/ItK85U5G3mbBfT9zjUjRPCJ7dbFw3h0WuAes7fiw
Npfo2KyjUXePBT9u8Gm6bswhJiSPZNeHs8AscDicVzGbeH5WW/DDfRYo3Xq7
C9PIJHo3eAU+i2BBYkj2g7Y9L4iwVx4xNx8if4TF/PGDDCKjNfaubSQL+u6c
eVholk5E2F1d/SeKBfb39nfbWKcRWzzO0JOiWfAhfJc2+1AqcT+7S94yBu0n
QuCv0qn/iNNY/rPoWBaoy3Vfi6xNIaaFXr/Y8gjtf2Pxpo/fkgi1fjIsH/Ho
prsNvF2JxJq3n3Q141jQoHAsABuOJ2i9ox9fIaYrb1W8PhNHFGw/qib3mAWR
qovNhbyPiKC/O8/dRnxhe0MgWySGSPvw2bcbsbVGmorymijCUvzGMa14Fpz0
6qN/3B9BfL+SuTIM8TrvCJr+mXtE56qqxGrEv66pOxZdDyMuP3WapCawIPlm
S7FydDAhKS8ur46YKTixzuBAADG2J3TjUcS7JHXrVG5cIX4NnB/3Qey+V3BW
9bA7ce5tSlw44voCjXya4xFioWBA4DHiZu9cPXUc4IOu0f6l8wDJV43+WSed
hg6z9NPRiK3p9hW6zy6CgqGkWTDihnRRyYPe1+C0IJPqhjjL4syOgrRAWD9V
dG8f4r59b3/qPQgBZqt1tzRiJf21ITU+d2A3X/PKHrQfd+1rKraO98F211OR
TMQtiefODctHwoHc9Z2OiCcfx5cVrI6Gf6t/hokglnxUKeq3PBZUXx5bLEL2
2xU9fha448BNyNDCFrHdww1veDiPYfKAkVcv8ofvfesVHwYSQEpy/dnLiJlh
ucW2Lcnw9B35wxP589utH0LSH5+Cl7L90Tbkf3+Mhz7c/h/sEL2G70WcrKvO
U9icCmVXX4yOo/hR1THNk/qcBl+2ivwCxGVajnZ+NelAqae/CELx9mtXRC6U
ZUCdHfXnPxSfXprPD6cyX0C7fISxCOIFjRIKb34maLwQjt+K4nmdep/thxfZ
gCdZ9lugeD+psm/eNioPenYHhq9D+aITnxEx+d8rEP86oP0H5ZdwMLeIhR0d
Wk6uMEoOZcG/wdPPBl1w2K951GMkmAWpFfLlarfzwZtXzVEa5W/kbPN96ooC
+Py4dfM9lN83toceaowrAP1R2xPD11hwLLm753JGITjqOm9N9GGB+JUMgWLU
FxwVJfCL51nAlXO48bYlE7RY8U4PPFnA7uB7YveFCU7xL1NT3FlQa+GiMtPF
grWste3PUD0Kk1ew0uUpAe/RFe+UUT2b+2f74dR6EugjngYHLFgwxvNS1ewM
CQqhCvNVpig+ZHlj1LMQL+eN0TBG/jhUeIx7+1twbXI8O6zPgsK3EoPp2DsI
T9GzGNBE9kxoWdF7shwYlrdO02RZcKZA1bs+rRySU/US22VY4PA57Bvzbzkk
eZuueLmKBea8u57dPV8BGw5urVcSZYHCxcfqyjcroX+15hUGDwt+m9gd8kqp
htWuG1o4f5mg1+1/qratGs61ivy72sWExKBnnipra2B/u23PUAcTbF73hfY9
qYGN9rQ35d+Z8E45oOhswgcIPjoTIfKRCanLU6VOxn6CSyn6W7blMkG9b2Jg
i1E9FBkpl5S6MsFxN+3yV+d6kOhXDjRxZkJEmPR0WEg9pFV92fLpJBP6NgBv
z/t6WAjKNio7jO537M7adIMGiGqIK95vyASxWun9clgjqN3Vvq+wjgnjr+DV
Ku1mmGvHhXlqi+GTsrbohePNoDuvoGNRheaJF5pXqm42Q2dXesiDt8Vg83Sr
tk95M2wkNOJnC4sBj5CparL8AmNROw7eTikGL8+pXxGOLZAyvDrHzasY/iq9
Ws4b9g0Gf9/4+E6gGH48X+c1Ut8Kb/zZTGv1Irju9cbk0NNOyKIHuIlfLgAD
mHBe/qoTLHVpek88CkBQZFtQVVkn5Kb8a9t4tgDi8VTWnl+dEKbrS2odLYCi
8btK69b+gaJZs5ZAKIBRPzvhv4l/IFDr9nl/4QI4d3vis29cF0QN9RmmovlM
3W7bwPaMLjBsr/0UlJoP0wputP7CLmA1+mw4k5QPdz60Yse/dMGs0nqfXZH5
kLGsHNcX74Ygc2UfYd98+B0THSMY3Q3pB1O9Q03ywe6/bUeSHvSAo6F7/9pB
Bozz/zqVldIDf8RX31r7lwGR5+97FL3qAQaW9mnjbwbU6P0Lqm/ogRLjVaWG
Xxig1ZaayyP5F7j4t/L8KGXAGmlJLs+UvxBSX37gVCQD2mPmcnVf9YKPTvat
Q9oM8J/NLjYje8FY9dJPc00GrDp99N2Rhl5gm+/pMdvOAGTTrxfHekGuadzs
9BYGkPXnuTJ2/YO409nvFsQYkLrsz5Hl5D8wKzt2sn8Ih7O3a7ja6/sgK8ng
c28ODg4r3ItrOvpgwKMkzzIThwOPhT0K2H1Qbnfe7E06DjovrL7cFekHi+5n
tfRkHESrvrzQsO6H2/OOT3gjcSjl67S497kfpnSrA+19cGBE3KJeae+HElcj
f8vLSC9Ibio6OdwPUuv7r5tewCF6s6vszhUD8J+wTYzDORxc9w2NtO8fgOKo
GLfhEziIh83E7awbAM1d3/fXmOIguDzJXO7XABgPNIdZGuOw+EiXIjQ0AHfX
Vv78YYhD3/NAt45lg+AiINsqguFAVvDphFsOwjEpOcU+TRyKLDPZV44PwkmP
KJ1ipL9yvpg+d/QchKuiO1weoMYV131/ueaDQWgi78zaquLgwSv2u+PTINQm
efRab8bB6UHBo4+tg3BrU/qNs/I4HJE4bFY0MAj6xvLSoRtwMNiUkB8uPATi
WT62betwWGUkG6ZpMQS6/Xu8p5GeXF5Laq13GILbXm1Nh5He5D7kNCzkMQQK
IX+kS5EeHXJ+bvc7fAi+26RapK/E4X2IsvL9j0PwwS80vxXpWa3FR/9t/jkE
stx5d24LIvteo0i+7RsCl80XyrWQ/k31+kKZFBiGG5pTdq/5cJD+Bz6Rq4fh
seDw8zBeZO/T2f1KisNgU9Sjf4wHh2C7my0nTYahbqOP5VouHGYa/5nPHBmG
dFvOK0Gkvy9Z2r6NdRmGnkIrYwrS504Girk1YcOwnS+ew71ABwOVpqAdFcNQ
2vAkwWOGDq8zdKdqm4fBX3v4a+I0Hbavz/Rw7RqG7//tX9HAoYNIeFlOHZUN
v5gXTA5N0cGi+nLPEwE2tB27smfpfMAdXsX1bivZUHxVkGvpfSwlMCaOez0b
rm9vnnwzTgedUpOGegU2ZOttWqmI2HdmXihFjQ2vTbH25DE6FOzK3+e+mw2X
zv44Io2Y7e0atBtjQ2xi6MWUUTqoMNaW8JqwQXonvkEJsetw42SjFRsebs4+
VTpChw43XQ/Pk2z4uzLi1MzSeYAXoxlaLmg9eueWpy+9r+568Zv/PBugY1Ju
6fed2PXH13zxYcNzxx8RS7//1J8QPZJ6gw0GY4mWS78PCSdVRZ0PY0PvWIrN
0vkAk+/+n3Qi2LDMeGuME+IQSXV+wTg21L325NmNmDz4V/9rMmJXtyfiiOci
k/zTn7PhxyohS84QHXbXHSi++JINDumyy/8g9hbiH9UrZMMt+8NNS79/0U1K
VIRL2bDzjH7U0u9jA6EXXb6Xs+GZ6mGdJVZ4vzk14xMb7lYNVjchdqa0tl5u
ZoPCfiPl34if6kZJ6beyofTQjSMTiH/47bNZ3sWG9P1P9UXQeiSZs/d/9rOB
fzimbTtimwl6VeYYG5YnbZW1RxyhfpbLZ5YN8U0bZ+4g/nBeRncv9wh4xok7
lSHme1l/VURoBH43hpjNIDboC2W0iY5A1+eODB1kvxtbtAezpUcgKN7/XCji
187sLb4bRiDXJfZOM+LJZ8+djJRGwEfcclwR+Uu93T5ZVH0EIm8U/BeK2GuN
yLf2PSMgPvs28C/i7KMVoi/1RyDx7eHbVsjfPXF+ln6mI3DrqN6LUsQnVna/
Ez86AtbaH+ZzULzwJDaPh58agbP48X27UHxlbyjfzH1uBMSW1/rXIJ7akXZv
xG8E/gnGeHKheE0piS5xvTUCO9Y08mQhNjQKHmoPHwETA2LvYRTfkYdP2dQl
jUCj+umL5Sj+NdutQ4yej0DAFz2dUJQfbS5YUcnLEZC/K+ZigfJH6ZqsdE7Z
CDz/ORczOEuH90/aft/uGAEs+D/Ta4t0OCdfK7bYOwI3buSLuaN8FHlZYuQz
MgLfo85kO6F8dSh7kuXMNQpNcqmjTtw4THYcvagvPwqRWdNtz/lxUNjcQpl1
GQUV5aHz8qi+1OVVqF+6MAoBLvfXnBPF4cquQud/vqOQafrxdIEYDu9MYqu/
3h2F/TaHvJfq1TF3m8iCnFH4yA65XieDQwS9TtZreBSqOsR5A7bgMKZVpffb
ZwxGSw/wmevjUHmQblR1YwwON1EnOgxwiPdIsHgZNgY3lKqrfFG91ktxt78W
NwZGi+Y/X6J6fo8q4rOyaAx4pLr5VfbjsKHa7qX+xBjM6NZxuR9D/ehQn0zq
5XEwmw8Sv4f6i7xX04Y718dBRbBDAnzRfsNKFL1ujYNuu+va8Ws4JDEjdmnF
jAPMV/KdCMChV2bHwUbGOOx+31ayLQSHwM7r97hGx+GX1C2iLAqHV+eXTTtd
mABj9+Vy23JxGGhSmxr1nYBbW9+GDr7EQWm37URw0AQ4c6UIZL/CIZ3yZCQ1
egJKdc6orc3HITFKoa+zYAK21CQ79rFwCMnf+9NpegJWvdr+R6wK2VPK5fso
dRJ4NglcflmN+tf1e1+DBSdhv+VafcMPOPgZNjSlykxCMmbu7FaLw/kvJz51
6k5CkCbVObIJB/upa6VOwZNArHyasq8dh8fHkt+M3puEwcL9xnkdODQTJCs4
ZhIeMk96iXbiYHWHvyg1fRKsWHuF67twMFz9KK+zchJqtv0+IduHwzZt+lMn
oSkIDl79kHcc9bunTcmjYlNwRj7HSm0Ch2zuqSfBa6aggbeMfXgS2fuTbnzq
1inooTLxxxzUX45/jOy0moIXv0b39szhwHOzJ8gpdgpiVupV0nkY4HWZ+9Cp
pCn4xd3yNoyXAd9c5BQc06dA9n7yazs+BuRa29cdL5iCkgslEWx+BthuqJM+
2jwFSkfMNIYFGVAm2T94pHUKfDRehacLMUBBiPb2cNcU6K0WZx0SZsDcmL6L
7fgUXL5uG5KzjAFpFYX5VuIc+LCOy1VehAHCrxvD9q/hQOODqelixD55w0ct
5Tlw/f5LfeOVDDB7rEgx1+CAvbFll50oAwrC9zWZ6nAgeODK7p+I1wWezjAx
5IDEXKvGUTQ/jbomW+yz5UAdzyppE3EGOBx/LWvkwIGOX4LzTMSVB76O7nXm
QMXANf9NEgxI1FqZoO/NgZx/evtGEPNsU/XA/DnAVooNt5ZE9tloDhDCgX4z
59M5iA2EQ7t1Yjkg05759qAUsg8llamdxAEP//m9zxBLTpSFa6VzoMHqgXUf
4sB/P0/syeXA7sqIbtVVDOhr42zfXcABYW9b6nnEto0SvLtKOGAkZZmajbis
Uv3bznIOHEngrvq99D79jVWOxicOTIvIeomvZkD0K48bO5o5UP/eKc5g6TxC
2t0D6q0cGNuSp7f0vv5sfIb89i4O7OueOxO19H7+/vupbQMceN1yVoiBWCuo
44PqOAfcheRU65bON1yZT946x4GHVb613YiXn5O+qMIzDYdC23o5S+/7T+wy
VBaehqiJlpv80gzotLGVUhKfBkuKYPRKxBbGF/sU1kyDXsUuWSnERdoRpVvk
p4EnSXfL0vkFObWcyM0q03BKXCJ76fzCPfnq05s0pkFzsumFMOLxVd2a8jrT
cEE/V46C+MQyLsGNhtNQuXVAfBg9v5oq27beYhqclBZCviNWn9Smy9mi9bW5
XiQQJ/XZ3ZJ1mAbKxs8//kPM137l8DrnaTBaxn4bgPhCU7TiWo9pSOvM2HIY
8Y+qV3My3tOwdW2/sBJiw5JPn6X9p+GYW/2laWTvPPq/1NUh08BMD7MvRxyU
sNFUKnYa3pkzCiwQq/A/nxt8Mg0vvlBvCS2dZ/DeTC9Pm4a2FY68lcjfqtaK
Upfyp0Ggrl9FFfH30uwPJm+mIYWd8+Unip8QZZUbsu+nIXDu6Z5QxD/4tnV/
apyGN3/Pan9E8RfqTY9P+zEN47pJbS5L52c6t1v4dU7D0JkPeymIb5dq5G8Z
nYZVwWNn5FE8a3hrBQWvnIGbEbYWWigf2n+/0Ti6egZiXHzsClH+3LPS7d22
fgbkt0zpqSDuUMKs2tRmYKhyR+YylG8Pfhut3W09A1Q1McunKD93W1XVL7eb
gYph9v1plL9dJSYh3SdngDudVm6FWCvevD/6/AyEgI4CG+V/z/4DrMGIGXgY
lotRaQyIKmn0KI+bgdWaKbg2qhc6SrZyT1JmwCxYRPcSqifRvEdum+TNgMzr
xaImVH+gxOFQWu0MFLIPV7hSGRCv6DpiJzwL32Vvr+yYxmHv43/p28Rn4fo6
kaxfqJ4N8bjb8a2ZBaNnRQXfp3Aw6vAk8pVnweHxDoMKVA9H4y4/WG4+C8lD
BuxLIziY89xULL87Cw8jnpSo9uLgWKrVbBg9C6m+RofbenDw8Zm8UZE4C/4P
bc3vdKP5vNezuTJnFoTjwi40ofrM+eRws6Z2FjzPvvsEbaifPNL6UrdyDlyv
7jzj14DD3ObJwO8Jc3AjkhXwoRiHPFPPb0NZ83CsV0Sn5QYO7OgNdr/weTh4
/bqzLOpv6q1fv9ay5mE188051+tI73gZfM2tmYd+idOmM1dxIGKkWs79mweh
XV7t6y7iUN/2tqlHYQFiLvJv9D2N+vdFyc+/XiyAaEHo4yYTHDTffNxf92oB
vvx7xbMT9WdfnqC60uIFOGs/ty3eCK0vrr82qWoB3qziojij/s5TQn6y/7sA
cbVpmJgODpJ87h9aNi9CtH/q9l/bcLCzkjOrVF0EMldv1Anpq8T4LzWFmosw
oChyoU8Fh3XKWE3svkVQPV36h6qEwxZriWqbs4ugdjDTyxbprd2JREXd80Uw
v+mxPW41Dl2qr3Rc8xbhZlLCyh2rcIh6n5JPLV6EApHPR5vRvNI3EPBMo3oR
aoaVveWRvkoCnYDEvkWYEDgsPL8cB5Nm5fEdY4sw/emuK7EMhwlXGffa2UVY
bVL7OUwYPd80QCWQj4Ldx91ENiG9FXjJQTpfioI132l98AzpqRad5i+LMhTs
jhnuE4H0lAq/RZSFHAU7fkVNKAjNX9+faNN6FCjYr5RrYVfRfKZeIT25SouC
PR1nDObMI73zMBo/o0fB7nJeH6ueo0P7UUFPhgEFO8i1T7QfzX/3h6b/mJtT
sCt//j7fi+bDbqnvDTccKJhzemrAXjRf6nRaP/joSMFcTjzaF4vmz+jcapNV
ZyjYXPnb4aXz1Xr6TAL3pGA/3T6r0NH8Giukdn3hIrq+4UL3GsT9X15omvtQ
sIX6D1WRaP6NP/f4ZdcNCiaeN3wgAs3HQxor3LbfomDuh2LWrkJsuBgmf+M2
Bfvy7ql9FpqvE2sW2j+Eo+9fyZc2QDwS4/NEKpKCWYVanO9E87rJiaHDzrGI
B6rc7iFOUTgrisej/f5wlNFCPD7aVjufRMEGuNQejSA9YFZ66K7ZMwpW0a/U
S0f83+1aw8fPKZgtbNzki3jygBGlK4uCCa2tdDBGbLGm9I1aHgV76P7k6TrE
aT0aVwMYFMxPmXdhHumXGXqu+ociCjb2Qe9ON2Lr6/JDkm8omJKfw/4viDOM
krJOE+h5gWaOS/poboX4Gfp7CmYR+6l2iW1+hMvNV1Gwx9sCMloQZ6Zzt5p+
omCu/Z+m/yJe8Lr+OK6egkl/o36loucf2jNm86eZgkV807SUR5zL7b5c7TsF
s1+wd7dCzFXXWePfRsFM/6phtxDbxduH1vymYDvX7P9BIM5zasQke5D/L0qb
8CL7PHfzH9jfR8EsYVHCBnHShc3xt4co2Nax8cAXiGOu1u8lR1F8nl4dx4vs
f++G3zBnkoJtYhx38kAcFCr/ZPssBdv3NnT0J2Lf+3X7zi1SsB/ZWw7aIn+e
SdyQ8pOfimk4mhafRP53ePbJVFyYil17I9Q0itgm02fCQoSKVQl8Go5YOk9Q
9MGibBUVM1B9Y9+J4mtXqTdncg0V63qdRSSg+FMtX5e+bT0V+++V+EF7FJ9r
Gi/N/qdIxQL2s9SmkP4R+77mxfetVOycvVxkE9I/gh2VNqLqVEw6+7gJC8U3
Z1A6+5YWFdv27nr/fygfhsfLD5XoUbGb0v/+paJ86Zn1ok4YUDH6oqFr3gId
mgTe2501p2J+NbECnUgPfRDx5HlqRcWeU130BLlwIKWk6F8PUjHvrD+SOigf
8za585s6ULFuPu3mEpS/9/TFipQ9qZhJafHxHUI4BJmUnnK+SMXk7QoislD+
+1q5LEu+QsXc4MR/iqhenD3+xnn5DSo2aT970xjpJ/1rp8VGIqiYh5n9zxkp
VJ8ClxGKMVSM571tGYnqk+rt4nNOj6nYzrTb9Eikl9Y8EnrX9JSKVZOXv+yX
RfWfnn+hiE7FWuf2xhsi/TRcfHzNcAEVe+cV7HlMEYeeMv7qLSwq1ngp8qK/
MprvPx2TTXhLxQ7JnV7Zhurpq17uuuuNVOzGzYsjq/ag9cnZKuuPUzGfq41X
/C1xuDzsp7+dQ8UKXMxr+a1R/Sp7dmT9HBVTPKAtkmSDwxOH4VtUHi5Mz2bv
ofYjqB/E32t9K8aFPa3f+KbeCYc9K98+MNjBhT30UbE77ofDvo6/aeq7uLDL
RaYZPqjf2L5a/nqDNhcW/kWgLD4QBy9Lhx6uvVyY1JkK7akw1O/uTum9t+HC
oja9WlwTi4Mwlyp77yUu7MBhs0f8dBxWN9jyafhwYcKF/OdykH7a/N/1NfJ+
XNg+vx+sI6jf6evVmPAEc2EhB43xmjLUT/2cn5VHcWGhJeN7RetwaB9NtDHC
ubBRRa/EbUM4MP7wF+5jc2FybD1tRw0GeH/7WBk+zoW53enMd93DgF21D7/V
c7iw+ajTv67pMaCkSGrOnsqNTXRLriwyYUDF3S17z4tyY4mqGQ6xx9H8tc24
4bEGN7b1R1fQzzsMWLgeNtjry439YmgJy3cj/SDOuzmcyoNJ+Ag0vabng4+Z
hmY2hRezWF56VvBgIQzvfZEazcOLrQx1nYg8WgiuutIrrtN4MUvJ5uVSjoVw
TI3Say7Ci6UKN6Wv9ywETPJTwqAsL2ZQfClf9XYhCHWenlcDXszH/u8mmTeF
8N+1mPLiAF7shHXx7S/ri6Amc9SmYoYXiztzQyL/bxFwqrjecC3yYlYuV64o
DxXB5r+iGzFuPow7g9j8dLwIgjftGHstxIfxrtur60stBp3UyzH0NXyY22h9
wLB0MdCfjDc90ePD+O18s7osiiE+YtL2UjAfVnszLCwwtxgqX/KVvgrjw9Km
DK4YMYph4pPkpsF7fNjL25+/czOLwUZo14RLDB/2yWNDncf7YhC+c/XR8XQ+
bMIsf2DwezEEBnG+mFTyYapz2ah/MsHVe+awrCA/JhJ0ZNnVI0x4eey2ovhy
fmyrXq7s4jEmjBqIz9FE+bHH87xKgY5MuL5S9dnoan6M/4UZt6cbEyLyTvVX
KPJjUot6TWw/JhT2Vt/0MOXHXENW+iYkMWHm8yGbU5b8WEsnjeflf0zQK+6U
P3yAH3vmHEplpTOhOnSuBo7yY2Y++PbXuUxo3aAmLubGj3VyjUc4ljCB6/jj
TNYdfqxPrrVA8wcTjA3lr+fd58fCN/6qq21jwn1l3DItkh87gYV2OfxmgsTM
h9H78fxY0tVHf516maDweEHHMZMfO2W/LXrZJBP2N5xp4Kvmx95aKbV+XcGC
GOZo2uxHfizVRjy9X5QF357e9GF/5sfeD0ZzTUmw4JRXgsyPr/yYzoejHuMy
LPAWqj3z8i8/ttNW6vDdLSx4YqQxc5Cfht2ysG+U1GVB9ssjj8uEaJiF86HI
AWABU+K6hqIIDSvtPOVWbMCClu63XguraNj2H2U2KiYsEAmz+pOpRMMyDN/b
RNuwQHboUqDYNhr2tPbDbpFDLFA9HLf2xg4a5pBcQLt1hAXmm9uOHNShYQ05
D62MHVgQVnnu07wlDdO//7XD9AwLHqlGuLna0DDDwBx/LxcWpMfhfE2HaZhs
/5evt91Y8PYsB8s8ScMs7/1mxnuyYI4vrNDmIg07GRiRrn6FBULns2xKr9Cw
J8GSrDkfFkh//TS8xY+GhcuIuL3xZcGuF2JK88E07NWPk+GS/iy4ZPws5UUs
DQswDTi/N5gFQa/KtUUTaJip6p9x/BYLIqV6v/kn07C7mTc54qEsePlXVcwm
A32/geXJvM2CEisbekk2DfPimHzn3GHBh+Irllte0TCljJGirfdY0Hu75PZc
MQ1bsze+1Ps+C6aG2+VdShBbHf8d9oAFfHbc7xpIGrZv7QePBxEs2KhgNpdR
Q8OuSVvhVyNZoB7pmbCyDtlfnufssSgWYJxITf9GGjacmXhtRzQLTlR/vXDg
J7q++WMhGcMCT7XZZSXtNCxH6fuPK0vvk+PX5WzuomGPjr48IvuIBfcoBiZR
vTRM9WG5UiniBNcz3bMDNMy3qNDGKo4FmfV3gs+O0LDxq+p1XxAX7c6VbZig
YfN7+JOsH7Og4r/PJdozNGzLepk3BOJm2tjRjAUaFiNyQWljPAv+XJCcEuEW
wHSyN/zzQzz6bU/sdX4BTN3q3GQlYor+8e09QgJYm2zCAf4EFqzICqyzFhHA
1OZkZrQRr1uZ7v5GXAD7fMtv2Hnp3/9fq6JtXi2AaUke2b70vl/7d9/zyLUC
2O9GLyIG8f/9/wHY////Af8DCY4REA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$46181#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.06614382479727478}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.06614382479727478}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.06614382479727478, 
             0.09999999999999876}}, {{-3.141592653589793, 
            3.141592653589793}, {0.06614382479727478, 0.09999999999999876}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.5, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {242.4125, -372.48749999999995}, {
      Center, Center}, {450.99999999999994, 230.99999999999994}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
O/jppRQPts5M8uxpxP/3/Xrs/79f/z/jSjd4
               "]]}, 
             Annotation[#, "Charting`Private`Tag$55063#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.043010764237438465`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.043010764237438465`},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.043010764237438465`, 
             0.0735980072193974}}, {{-3.141592653589793, 3.141592653589793}, {
            0.043010764237438465`, 0.0735980072193974}}], PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.6, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {727.2375, -372.48749999999995}, {
      Center, Center}, {450.99999999999994, 230.99999999999994}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
Hc9x6EBr/zF/lXycCIkPdC5IGXegDl7lvCtvE0Gh50FKnGoHWp1ZcvCLXyLo
VVJv+ay1o6/e9fGwZieCV5Doz3tv2lHCYMmf9tlEIMjtKd3n0oZ6SGVYX36R
BFPW637v3FvR1JD2qel7ydCaIc99+V4r+u+Zp2WtXTIUzt/zFzzbir7KnC33
csWfV87N/gVbP9AnDV7D35OTQSAsJWDO7gcqYadrrPk3Gc5W6wVZ3W1BU6TV
1idupIDkdlcepTMtKNuPz3+MrVNgx9WiIBbRFvQ7t61pll0K/OoRC47vakZt
ExTLeINS4PHiavDvq82oYO1R6a91KRAmlhyiq9GEOrDHdYWeoMKbh518wgea
0JzmxH0UDSpUWojI/lprRPUTr2E3dKlg7Dgvy/OiEU2KMGItwHmUQo+Rc7vd
gP7wcPW/FEGFTva5409O1aPrNjEItkyFDxWRqrBcjWbPvwq8lUCD4Yb/gu5+
qUYrBZ7VvEqlweVf7WNe9tUodZJn/FUuDQQmeaI7lqtQzheXfijgfJjF7731
bKUSTfryjhQ4TIPuB68rklbLUROr2fgJCTpo2AoIfSssR2fqB4T85OhAe/fF
dsaxHLWnik3vVaHDy+B58VNrZahMr6ftwDk6cJbaeLSvfUX/i9wmePsOHR4f
LIziXUXRUx2R879D6fCf8uKl244oys6jzrMVjfOAjsJW+mopGuDewsWZRIdI
W8bt82slqGxwl217Jh1qaiLEHdeL0MwAA2tdnJeCutvaq14XodS9P1Ky8Pr3
5uxuD56NQtSGk9tnBa+fF/Z7jaVtFKD/3P/7TwOv9w8+ccrq3cxHPx3yeZYx
SYeJD/m3Zd7loz2Jby/rzNHhS9jcboetz+j1xyMpzUt00C17aLub6TN6uIP/
cyATA17vMVXVZM5FSdmW1RPcDDgvFTYW4JKD2gyOLlfxMmA3tEb1MOegy/kf
nd32MoBurbP1ivAJnf9T4lIqwoC2IvUKBjELjWeX6iYeZYCgg0XPLFcm2j2u
yU+SY4C340VF/90ZqL7G6Lt5BQY8fCPUVyeUhn7+da+JosKAzrdsStaHUtHS
hzqfpNQYoO085cUqyUBTtv/8nH+SAVIfviojijT0VylRyFODARFkhk/3f1Q0
e/yDQ+NZBnC6Bv11hBRU0Mpkcv0cA0bd7/rlaSeh5N09/NwXGWDseXlAXy8R
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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$46394#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0.010088647791318257`}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0.010088647791318257`},
           DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0.010088647791318257`, 
             0.05150787536376967}}, {{-3.141592653589793, 
            3.141592653589793}, {0.010088647791318257`, 
            0.05150787536376967}}], PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.7, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {1212.0625, -372.48749999999995}, {
      Center, Center}, {451., 230.99999999999994}]}, {InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
P2yNPf9y9yEK06s2P/erdoD/ACae4QQ=
               "]], 
              LineBox[CompressedData["
1:eJwVlXk41dv3x0+G9DNEynBLhkhmUt1QrAhFZSilK5WEuA3GQmYZMmTumOdz
PqWU+UZ1rZMiUi5CpUTUrZSuczjOYPp+fn/sZz+vZ+9n77XW+733UnH3Pewp
QKFQhsjx/7PettXaAcEURmlk5Wlq3x7QOLyhNDKIwtijPhkjn3YOLoe9MU73
ozDeFije6R70hzZa9kDpBQqDDsWpbPsrINlj71vrTWEsKVo8y/q/q+DKERN9
4kFhHOwr1Tl3MALuKHfS+twojPK1nzmWitHAsYmDcVcKQ2nf2K8/g2PAMnDP
MOs4hXFqiNPh0BwLWUULQYJHKYwfyooR179cA53/gu6oHaIw3tDy+63WJECo
/FarHTYUxn/2Vama6xKhw3xq1MqKwuBbVlgliV8HtxxPmXOmFAbu2SN2ejwJ
bhofi67SpTA4sbq5G41vwLi79IaHmhSGh0qEYgIlDQxSe5pebKYwOqumTso+
TYMXH61//NhIYbj9uhoWvTEDlq7tPKa3msKwuxPwriYyE3qLth73GlnGyNN6
ORn8bKDQfKkjA8uokxDK/WqbAwZ37w04vVzGwR8x0aIFOZDRoum499EyptoH
sj5tvwkOQyq2yvnLGE5VbhA4RYVeSendw07keQaF76zi84Ai53DV8eAy2npZ
7qJ35IGBYlpz595l9N24VvCQSD5k6IjueGC4jFP9fwUnJuSDg42AXo7UMiZd
nyqSiyiA3liWkt3LJSxOtuSmHioCSrLBqfanS7gintKlEl8EBpmXinY/WkIf
jm7x1sdFkFE6Ka99ZwlFSjHrhUYxODweX7Pq+hLuSDj+XXahGHrZ/YJte5fw
7O+q8tdTS+Ef74avOx4t4uXzcmzUK4f+UY6DWcMiJv3h12JhUQ5Dx3Y/tL67
iIuTx8OLjpbDB8v2VOfCRVTkz4sMhZXDpPKbraFhi1jV8kTKu6MchN7xwx7v
WkT/bHdBY6cKWOUAX55tW8Qo6oTWPs8KEHt+ze6V9iK+vFdfr3+lAqSbxFU+
bljEExOXkzJyK0ApU7FjeX4BPYVPld58WwEmNhZSex8voFpK6LmXRyrBjJEQ
eqBxAbuvrxrJdK8E853d40eqFzCq/NngNv9K2L/ZqcmjaAE7m7QeSaRVwtEV
Xi4J4QtYaqoqp9BRCX4tSbSu3Qt4ssxU6IE+DYIMeiT6ty9g46Njnfa7aRB8
Szp4WIdc//DKt2M/DSJvFtr8UFhA4Ymee4fO0CDF/94v8cV5DLTvqmnPoAGh
2Wfk8Pc8MkMmW72/08B7S92T6KZ5lFEY866foYHW5kzbunvzuM1aUP3DIg3u
Kzu6SpfMo/R6eaHeNXR4INcXNRA5jxX/6nmbGNHhqkzdKuHgecwl7Drizemw
e21m5g7feXSLs42vs6UDY7VjJfX0PMrKLe6740qHTuG+juN75lHz5Nc2lSg6
JAvW2ScZzWOYkK64fyIdDq7IfNtiMI95XguzZel06FtwmFyvMo813CZGRSkd
hmd6JUZWzGPwvvY5vVY6/PjU63TmKR9znp6g+LLpcH+0diTzER9fa9kqdc/T
wW8kw6utgY/DqvuNVgkQMPvWIUSVxkfX5S8+m1cTsPBPb+GXOD5uH2s1+6lG
QOurWjXZCD7eXmNQ4aBFQHR3xj3ry3wsEvBQouoTIPzcAW958vHlq+agZ8YE
rG7tHfex5mP1+srP9w8S0Puo9nyBGR8LdsX4KTgSkNWSMfvidz6e0m/WO3+U
ANkmh5U6W/joiUUHq08S8LbeIN1ViY+sGqu6kjMEFNRKyd+Q46Mt1+xwgCcB
StW9mr9E+BjSpXT47wsEjFfV1itS+Oi2175pux8BtFsZu+y5PHRqOn3yRiAB
GpUOh2q/8VC+8cW18VACJssMhsbGeLiioV14NJyA6hKp02ve8XBQf+L14ygC
DAp6/QK6eKis/NNFIZ6A6wevCPAYPNxU22D8OpGAsaUNOVHNPPz+rpPvmUyA
Ud2TzStreSiw/LZ0IJWA9LPnHqTe4uEvmRAtpXQC/pWRsFlbysPYReUiq0wC
zDrrh/OpPFTv3jG3L5uAXzpLi0Q8DzW31nmPUQmwHq1M143gYXuk+7UreQSU
ZNqoNAbx8BxVJuVbPgFze/+rN7nAw5NxjdG/FxJwaC7H8slZHppx13i6FZH5
3zYZ2neCh0V+3428ikk9XcbO9Rzm4Y8zowv7SghwkkjgOdnysOp4TJ1wKZk/
aqe8N+fhU1lr51KShQL6FNyNeWhafePXujICXNWC738z4JG7yoO9SG4cUtjj
q8FDLrWRlU2yWFJbH1uJh9N6E6eLSXbf5X02XI6HW7dvw1iSH05JsAUkeTgi
miNlSbJ0WUNC0koe3qZ+PPKJvO/Pw3/ISy1xsdlw8LoLyW1Cy1VUNhcHaKo1
NWS86x/Qdm2c4uInsdMdY2Q+AT62ryo/c7G2S7hnisy3a8P0Ka0PXJT0jmof
Iuuh3HNzuvY1FzVCFaoLCwgIid4Vu7Obi6sCZWN2k/XrNfy0trWNi9EJ6Xtb
ckl/fEmgWz7koox/FmsNWf/oXJ2d3XVcNLKVvmGdQ/rRpr/TsYqL8Qcm1zhn
kf5YCHZ5W8ZFvZyRqL0ZBCTe3/jzVB4Xfb5SB8XSCPjo9jTiSzoXP3veXlOb
QsDva30kLySS8VikGBokkX4IbjQMvcLFUDtthWfXSD9ouTxbvshF5UMnPr2J
JoD6YflogicXr6WYxz2PIMDK/EBothMXFe1nXEyCSX1Fx/GeIRe9juwQv+RN
6vs40XG7FhdH++Si3TxIfX11Jx6qcDFLz6VVz40AwYGQlZ1SXLxQsyntlDOp
T7HkofFfHHRIbFcWsyT1sW/66P0vByvVwtLem5H6CJzw+2+E5AuJdxPJ99zm
RWQvvORge2raRIAeASoGpsOydzmYezWsP0eWgIOHv1P1KjkYqICNNVJkvYNu
HrEu5CAR1fbujigBPc1TLy+ncPAvtelh8yXyfzQvwYHzHIyM/MuENUEH+lnb
8J9nOZhXe6tx9QgdeuPnjIRcOWiannlAbIgOW17Y1W87yMHHHeUPac/pMHB4
mZalw0Hf3G8LzlV0WA66e+aOGgdPKY21BpXTQSvXWbFNgYz3N9VL/vl0iH5f
k8sU5yDX71ioaBIddD3ckh2m5nDdW5HQh150SLj8xHf1/Tns7xRSFlOgQ13u
RR11Yg7D8wTkVaXp8KHlt++mJXOo2O0ZvH4VHQyX/N0vps2h3dgui1tkfxhN
2HT05aU55MiN9e7sooFR3jWTZP05rJb2E9e6RIOzD/U55VvmcMv9418M3WmQ
9uF9Q4vSHLLLI5zXH6PBZ+Xtut8l5zBQYqQjzpQGmVWflfZPs3FSOG+2XZQG
kw+thFfWsbE4MFvke0kl3M188CLwNhvvKsQmVqRXwgVvzYxPpWw0Hgo9vC26
EqZkJDb8ncZGk/Jk22G3Spj2GzAIusDGs2tF1pkoV8Kc+lnX8S1stDN1ElMm
+/WDxQEVByU2ds6/1TGNr4CQAeuvf8uysXln7Eb9wArgxWgF5AuzMeQfq9IM
uwpY+MBMdJiYRcUng7qWghUgkB3d0FoyiysSuc07PcrhqQ8rRIc6iyxpNakE
+3KI2+NhVnBjFg+sFN9CNykH4V/7ui6Hz6J4fAs4SZXDKhvJUR2XWZw7slPz
QksZrF4uFi2UmcXQVkfQECiDDecfnQlOncGGPX+MagwUQUFnp7VE3AyqSY5f
ky8pgvXqQ9qVYTNol7yxJ/EcyZ+m2T1/zmBAoIv4CLcQ5J3Vk9VtZvCxajpz
k0whrNubWT8oPIMWx+2c27bmQ05ZSe75RRaqH61OCGXlwdqlu+Er2CyUivTZ
FlOfB9ItHda6n1lY/knjgJ9BHkjpLwzHtbHQ6JlGs4VqLohvOCe4PYqFX3Oo
+tajOZAaEvSt6woLXXQ5rVZZOSA2FPPq9CUWhrlShdQsc0A0syg35STJZfup
B2jZsEqkX3tiFwtfD2Q71ztlwXWPUanQbSz0NRN7LbeYCSJtP9mrtVn474o8
o3eVmbAyQoRhsp6F7hJbjCV+ZoDwzG6nLC4TN/ndMm1/ngZxDrbGGtNM9Ctl
n2zg3ACh+86KrV+ZeGVMZlB6E8k+Ad++DzFxv+rKWA2PFIjriHoV1cNE6khu
592rySCodqNepoOJ2qWlFgZJSSAweivcvImJ0+x3Gy4mJ0Ls7qYzb6qZePPx
aMpfVxNgRUGb9UUaE01bjIOWTsZDNOcfbcEiJtak9ueqGsYB5eiIVH42E8PM
y4ZdZ2Mhun6SrZfCREd1j+F/y2JgWZI7/CyWiY15ZZ+DDKMh8qIww+UqE0Of
/la+zyICll5I06f9mSgrcEcjiREKjnnqTXJ/MjHjllDZs8XLQPM0aTdzZ+L7
QBejmwH+wDG0G/R0YaJn9xezZh8v+Hy5LfurExP1/ETX2e3XhP8BFyf30Q==

               "]], 
              LineBox[CompressedData["
1:eJwVVnk41PsXtlZUulGIVAplSZFyK7wu0aYolJRbREmlulkyYWSZ7DG2MTNf
ZYmURPYWnyxjV5gZFZJ7K920KOEW4je/P85znvefc8573vc5z1F3O7ffQ0JM
TKxCFP/PH5yGdh7IEZJDg0t+uWyxwKW2OXlt4UKyKOgcb7riJGabr5ay9BAS
I3ZMhxf3PFJLrFyrrISEslTTWmztA83V7tXrtIQkymXPqSsu/ihlh6rmzhIS
1aAzx4SKNFjKZV5a+l5AxHJqZSTiAtF1hQiZjQKiUxSyS6UjGMOeU9fokQLy
xqMzZPjCFQgKDX7be0JA8ndHeCzzCcWD0RMJS7cJSLGd3GwvzzCEh3QmVM3w
iZ3MYrlC/Qh4NcxaGPmKT1a5czhukgzYzjNJPPCQT8Zurj/Q/4wBFVZu4nc/
Pjlzyp25zz4SM696F9Y68Ak1OlIePzcKb1ctZCYY8ol45acWneoo3Lt3mbn2
SxfZfXBFlN6iGGxrtEs66dFFdL6sXn02Ng7a8xkKmyy7yMlFmVsM1eMhZ/8w
SUq9i5yPfiJz6348XvZrJmf2dZK5T4tptm3X4D0+kdxr30k8bavDNw4ngKV5
M9XWooNwH1y1ONDCRNDpHsVlKzpI9cpvBfvEk8BzW67/cvIZcawSSzttnARn
2qi+wsVnxMp6R4NCZhIi8jPWX3V9SrZ+alPt8EpGz+zvG86ZtZGDLLZwsDcF
OUkuRvMmWon7lmWGyrNTcW55k1F+WSv5e4fnoQKDVEgZUxvf6LWSlDXhmbMj
UqF/YrvxQdUW4v5qfn+7RhrC6jlb8KORRIUyGk/sYuHfp5uTPCobyZc0F6Uo
Lxb2vnz+MeZSIzEQn19tGs2CyhcF6sWPBuJckUxza2KhSCl25sJPHuG+16KX
Ix2KK3WcWFU8MpgUcSPySDou6zUVVQfwiEKM48zopXRY/yHlNneinkz+86Xt
elE6XnkF1udM1JGxbFqsvSobFr4qaq0P6kiybnDJ/I1s3KJX+n6j1ZFJ6fVL
Pfey4ZM8qmU2WUtSGuW2iYWwIVt9Jur5ZA2p5d9pe9rPhvfKB9xFE4Rk2/UP
HonhYLPx+B5XGiFnx3sS/rzOgZSN4czdiWoSZBhaPaeEA47vbdftk4/Japr/
BqeXHDQ1sbVoUw+JbYM377M6F0mvup83BD4k9mO33ppu4OLPEfkohV8PSLp3
rfPmbVyMqcZ8LPhVRYbp2mEbPLhYee5y0evpCpJpbdVoks3F57AKVz16BbEc
Ty8eLuaikvVdPmCmnHzP11tt94QL29rTvvJi5SRoeEuuSh8XgYuPbLESLyU2
yT7afQsobNdhfUy8UkI8WH8Wiy+lIA8Bt1+8hGyLUw7oXk0h39Nmxl/iPtmx
PPBKvBmF7ocm9bcli0hpRMp6U08KSwPc+kfm3SNiNEZT8QUKsbTdRgnyhYTh
3yreQ6NwOkhtoEWtgJRRQT1WsRR6gmdt8lx1h3x17q+ISqawK2Q4Rlr7NlG3
jbh/hUtBJ6zG2NzoFnEO2eQdf4cCO/x23KvNeeTrfvbx7PsUZBlJb2jIJXn5
Yq/PVFEYivS4VrYrh5SJi9erNVBwjt77br9dNpH48clJuo1CS4zx1q+OWaSj
ldGS2SniEy/zXsf1BllyPDr+Zy8FwxXvAhLaMwgrq0yybEDEf1WFZusLLjnI
VuJovqMwohnVKf2WTUK3BR7f/YFC55rDQebDLOIwdsdL6zOFIt212pcnUsng
7bOPy79SSNCfEZRJp5CE9VEnp75TOG/QGfL1tyRirth88b9xCnZG2Xq6SxPJ
SODUx7yfFI56DxW17o0nepU/XsyforDMJ37OHx7RJI/HttCeptAfYHis/DKD
9LKb1k3MUKDo3RW6zFBC3/lXboh4Biplx5ZZ7AsiPyaYdx5JZMBY0fSpXrAv
+VhrYFkomYHTlrKT+gdOE2qn23lHqQx0lBqVzDl2kGTtsdp4X4QFPgVmhsXA
kuk5SfUiTPlbfbDjHoe83oeoWBG2K3LmmWZeQJHDuiWyItyZI69o7xMA2TBD
mIrq59t4bCjNDsGkzMGfmqL+Q9Y1vWZx4VBUlNtWL5YBnT/Uwpv9InFSSaii
LJr/9NYAPYdjsUiR2HhJ/ZfIT2wvr2GNBDw7VeM4MEFhPI1VXbqEiaQzSgUO
PygopjTI0+SS4RPc91fwGAVj5ugJSKbCWOrxDZcRCk7XVj6U+pGGpY1euiNf
KFyKtVvQ8ikdFaac2SYfKVQyCiocukW+lHUNHf6Hwouwnrkqrdfh/MZV+lA/
hUBzqaLh1zdQJajI8n8p2q+poVSZIAtJ535+4D+loG+ys1DpWTbMOhTOL2ym
UL3lmBOtOQeFOT1NknUifYzjC1CdC48Rmeuzyil4b7p5IKsyD80zEl8V71GY
NnokJl1yC/elah/05on0NRxyaMm7DQMXW6dQlkh/PetfDomFkD7++11zPwom
rNz48Rv38OXNVWWNMxTmhUr+ZuNUBA+9qei7rhQ+fD6e+flkMfq3/dNRvJtC
Fk+jfv3VErTmeEfSVEX+mxTEii8oxci6kYFIOQrBBhGOXamlaPfJvrlVnMJh
6t3gxdwyrGzWoce942KRb65MBa8C1lkXrHrzuZC4c6Dr6p5KpDzmDEizufg6
MIvjJKzES43E2q4oLtptTupNvK3CzsUc5f2eXDA01tiaSj1CuZjJjVcruJj6
4NDiqv4E6z49YXbROfgudVd/l8cT2LzxY46d4mBouXSSYf4TKF+NPlZqz8EL
x7LDkgY1mFdkYy2pxUFZzeLPOea1WNQcsr2bx0ZB39l9ceG18L8RO9hYwEbO
f7wy36Za1Fi+TbRLYoO51i/Y2q4Oy8wGrTSOiu5zeveCf4/W4+7hq3uefEuH
R6m+T0d2PeaGjl53FKbjyDPGi8r39chd+L7ucmU6dksbZ0ad44GeuOK5X1A6
1lxIM9SlN8BVpi9znkQ6/t7h5Oid0YRUT9bFqtE0mL0LdG1/1QSJC0YHLflp
YF/JPKun1oxcb0/qcHEa9j8YihjiNIPXH/mvwZk01OoGlZ9Ib0G3071Ym75U
ZMllKR1NboPey59Rj3JSMH27YVU1vw0jtL/MTl1OgfP2j+vUFNpBzfXvZexL
gXyI0Y7exHaEJBpYyU4lI+xbw6WD157ibWbY3YGdyTAcGvu02qoDhfMnHlfy
mDj2+5yLz907kOu+YufbRCbiGSo/GeEdOKTpucnChYmhlZAerOtA8/vU8MBv
icg6HKmWY9GJvT+m5LUWJKIjn51t79aJ18uufVUXJGD6vwJtydBO1GQ1HZBn
JcA5uXOjW00n1ibfkc1dmgCFdpW9K8y7YKIVOc9HPx4WqmsFz452YYPJkiPT
OXE4fwrOdHoXVA87SVxTjkObtPuJ/uouBBZpqy8Zj8GEvd+nuP4uxMgqit0/
GoM1WZF/mU53YXuNa0I8LxrhZneDuaZ85Kj0JcyPiML9WCJl48KHqZfSWuX+
SAz0dEZPBvJFf8EL5gbDSJj4j6c6P+KDbs1lv29mwIs3R022j49mI2vpgHkM
sBRUs6sm+RDX65aR2hGB0Xu4p7xVAIVuXlFdbhjadLfKn3cRQN+3KLmiNBTZ
eZt8G+kCCOt8+MZlV0BbZfhiWZYAGq+7/+6/GYL919du9asXoEAtYM77WXTo
qGpntA8KEBH7x8c3zEBIpGmIa8oI0UjX6TzyTwB65Fe4B+oK8W1WYInCgB+K
41Ub+XuE2Psp4e3GExcRKauko3teiP1RapmF1t44xpCPC2UK8fmQ82YVRTfQ
Ze06PG4KUWH+bt+wnzb+B0UCpro=
               "]], 
              LineBox[CompressedData["
1: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
5XGW+B88wZG9
               "]], 
              LineBox[CompressedData["
1:eJwV0Hk81Hkcx/FBfr/v7NRGI+mUFBE6VhfV57NUju5RqpWiwuhSlIhKirGu
xjmG+SlSIyVdrpqKlQk7SFuILUVlIh1TE4vs2j/ej9fj+e/baKcfz0uTxWJt
Gt7/hW/PE47spzBNYhZ83MMeXuoW3Q49ROEnoYdBvDYfRs6VT7pzhMLFiyyK
0rQPge36xjO9wRTqWN9nfFoPwx6/dx+sT1A478nKDunYIEiL/77RP5xCyy2n
vxz9cAzk+dS9gkgKJUKN+MTQ46BW6M/oiaawSFCiMaLpJPA4C9U+SRQy5hOa
1OxwCDN3cL8oovCbf+f1Zo3TUOC0ubI9g8LyBeMfLeo5DSOjjqa451DoZflS
dSUnAmykgh/puRSatp/umBgQCb5ykVfzVQrP7kp2fr9YAPIRJfNdCil0M1XH
8W9FQdipvmeOcgrf3CyL2bk7Bq6dJ8siayhsiJh/eJp2LLx4YHCpoo5CrWST
g6+zYsFmaFHgsiYKT+67M7TqcRx8Oxasb62k0NCUw+VqCYF/uN/V8CcaFVs/
t5j2J0C+m8BM72caa0WliSvmJILKTm+QjKHRv9pPGu2VCCG6Vlmq8TROzY4a
lVObCPHXPLsrzWhMSsjuLUhOgkJl1cl9TjSOMrC6bayZAv31m3iea2hcvXDG
WI5lCiwrbp/uuoHGr+//Kdu+OQWqIgarYSuNNq1S6aa8FPh72hw9ri+N0mpP
TblTKmi6i3JLo2i0b5feCD8oAofl00OuxdJYYLQxfnGSCGJn3VhzQUjjpJW2
YaGFIhjbX6OKTaMRu2dPutongpmioSUeuTSeWZJZ/iw4DdY2eDVQVTSqjS3i
VvHFkFSiujDwJ40OVyKOrT8jhuZzJwM/19NY8fRhtOqcGDwPiCe2NNEokwXO
1m0Uw2FOrVd+J42tjdClWJoOGSus+11ogoH3q9vqBtIhL3+z6D6HoMkO//kR
ehlQMjbE2kyHoPc+Vr3CIgMa35YfGDIgmGPz784x2zJAJ3JdR645QSnzXSUo
zADDj/5h3NkEJ5fPDXxekwFWrqmTT/xC8IaDxauytgxYZfJis8sSgvO6c3e4
EAlEyvcofqwhuD2u9H3SRgmkWMX78nkE7Yx2ncvylkBO6g3qL1eCPdq7KxyD
JFDu3Ye5Owj23tZ/tjtdAoNUZCHvEEFXI0X7i+cS4Phd5t07QpDF0u4sU0pg
QpPik+kxgkcj+RT2SmChlGv+I5zgAffIIi6XAX+HrExpMsH0bsdZBisZOFXw
0HaMmKCPo/Pejg0MCMcpm0MZgp+Klleudmcgv9OKy7tEcPnZ8en9/gzI1vGu
y/IIup/nBMNxBmqKj6wxLSDoPHWpjbGAAaVAJhgsJsg1rdOrEjPQ+6ltuo+M
oFnYx1O/ZzNAbdH6o6GM4MSK9qCuPAaMZzoPXqomWDq1KDXmDgPzhPvFunUE
z9tZairKGcA+4YLQJ8P/hxSHXa1iYHtV08ENrQRHLA21WPuMgf1zBkbJ2ggq
fQ2Eo1sZCE2bcsXkDUGj8tSAQ68YiGbZOSYoCW4YqewJeMuAmO/1duADwQeG
LnrjuhjIfRwV7v2FoMg3uP+3jwwULbpq2KAmmG/sdhNUDFSer5fZ9hPkm7mt
rlQz8JR83XppiKAswK6pu4+BjoP6vTpabPxqa+9xa4ABVfPi5BCajfqPBlQT
hxhg/eo+9x2HjXtagsQzWJkw+nJY3XodNga1LNz2WCMTpujm7L2rx0YqZabd
JK1MsAh+REzGD7v42nr2iEywfd11UTiZjbUfs2NEw3Z2+tl+wIiNGndd1PJh
/weB813f
               "]]}, 
             Annotation[#, "Charting`Private`Tag$48663#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0., 0.04419414325238147}}, {{-3.141592653589793,
             3.141592653589793}, {0., 0.04419414325238147}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.8, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {242.4125, -620.8125}, {
      Center, Center}, {450.99999999999994, 230.9999999999999}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
l4SVcw==
               "]], 
              LineBox[CompressedData["
1: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
ROybM3XsDsDXqs6CkvAFJOvfunBnxBL/A8i3Mhw=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$48450#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0., 0.03928367313099644}}, {{-3.141592653589793,
             3.141592653589793}, {0., 0.03928367313099644}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=0.9, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {727.2375, -620.8125}, {
      Center, Center}, {450.99999999999994, 230.9999999999999}], InsetBox[
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
NJvmWFZxEiwUhg9Nf83C2vIjPfzkHfA/KHZKjQ==
               "]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$51441#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotRange -> 
          NCache[{{-Pi, Pi}, {0., 0.03535529600047309}}, {{-3.141592653589793,
             3.141592653589793}, {0., 0.03535529600047309}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          StyleBox["\"A=1.0, B=0.5\"", Smaller, StripOnInput -> False], 
          TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(FormBox[
         GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}], TraditionalForm]& ),
       Editable->True,
       InterpretationFunction->(FormBox[
         RowBox[{"Legended", "(", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
         TraditionalForm]& )], {1212.0625, -620.8125}, {
      Center, Center}, {451., 230.9999999999999}]}}, {}},
  ImageSize->{Automatic, 516.1024390243904},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.843329449278598*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"41498805-a0ce-458e-a704-be35e9ab1db8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempcheck1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.35355339059327373`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.04000000000000001`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.12000000000000002`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.23570226039551584`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.09`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.27`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.17677669529663687`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.16000000000000003`"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4800000000000001`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}], 
           ")"}]}]}]]}], ",", 
      RowBox[{"0.1414213562373095`", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"0.4999999999999999`", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "4"]}], "+", 
         RowBox[{"0.25`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}]}]]}]}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[CurlyPhi]", ",", " ", 
      RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[CurlyPhi]", "0"], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Error Plot\>\"", ",", 
         RowBox[{"FontWeight", "\[Rule]", "Bold"}], ",", "Larger"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.2, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.3, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.4, B=0.5\>\"", ",", "Smaller"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A=0.5, B=0.5\>\"", ",", "Smaller"}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.843330128011012*^9, 3.843330138947421*^9}, {
  3.8433350745615807`*^9, 3.843335085464939*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ba97a9e9-4b70-4d79-8ed9-5c5d93175d53"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7E03/fd+4/+9/0j5//cf/weQAhTa
          "]]}, Annotation[#, "Charting`Private`Tag$2504#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Jf7/+7j/Ay7z6Y0=
          "]]}, Annotation[#, "Charting`Private`Tag$2504#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v50Owfk7DI8ULqGuxpf9/NJ0MGiR1JV4uYS4y48fK9iI11stpPHNeAmFF7F4
VfnxeqIGnoZ6S0g5yOaMzQq83pYgRsWRJdSWy+kUSsHrKazYS1daQsU6NQ2c
3Hg9HY5dzwWXULxSna3cIg3qfMfFT1UvogGDp6L3xmjAFqBoWV66iHpPHrzM
NkoDxRCnGI3CRVS/9WHfw2EaBL8aXC+ftoh4Fw6oJ/+lgUFR9xrKo0W0I7Z5
l3gfDbxLJQzu319Eu6yPoS89NMistAyavrmIOlN0dnj8poFg+7cVvXaL6IVw
klVfFz7+VAPnxyOLSGtT9QFWBz7+guDhA+qLaNplt9uXb/j4XPremUqLyPTs
mEpcOz6+UNV8nOQi0iE/ipu04uPvLp26s7SA1C1y3WcaaPDVIefP3sIFJKqz
c46rigYNP2cMDuUsoBN6SHt7JQ1azmgUaL1bQCuelk6f+kKDzqPlgWejF9BO
tzNGyZ9pMCjRusfjzgJatEMbvcpoMBSxMdrnxgIiKv5655fSYFTAiivgygJC
prqcsx9pMDPf3xJ1fgEZ39Y95EfSgKt99k6R+gISspJ+U1RCA4oB9JYpL6A3
BSErhbBXfv7vVI38AlKQFDrpWEwDoTx+yR8bF5Ct1Dvq1iIaiIds+bQ0N4+s
pQx4afk0UNM5LHikaB49WTwsbJpHg0OEv8eJ3Hlke43jUmsuDTT3V3WfTp9H
fm8KRM5ha28zzrONmUd81V5XLubQwITd3szfax5xnNIVCcuigenttNIgN7ye
X7C7NLb5yLBCxFX8/7Ypk/RMGth8v7WUYj6Pmu0XVXo/0MAl/3HSF415ZH69
ZeLsexq4KdaualCZR+NW3/xZGTS4lSJ065vCPDLo12OLxb73Ilrn76Z5tPJ0
TsBAOg2eXM8Y5l+YQ+Ns1Qcj39EgeUe9qkHxHJpXUz+hlUoDB9ks0jtvDmkf
un6NC1tuW4huVsYcGow5vlj6lgbvJQzNheLm0O/gv8bHsemi9feb7s2hiBJS
1TKFBp7rsijct+aQYdsJJVlsDeGQkL3Oc+iDzjqnsWQaEAKGieEX5lBgvW7E
Y+wK7vpPptQ5ZD1XLV7xhgYBnFn6j1XnUMXOW1FR2HrsIW35inPokmbeLifs
+nmDQTHJOaRRVRy8HvvbRN2q7+xzaNMmJYZHEg1ixjLDV83OouwX4GWMbTkS
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
wf7v92LU//+92P8A+pyxoA==
          "]]}, Annotation[#, "Charting`Private`Tag$2504#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2O9GLyIG8f/9/wHY////Af8DCY4REA==
          "]]}, Annotation[#, "Charting`Private`Tag$2504#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.06614382479727478}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        SubscriptBox[
         TagBox["\[CurlyPhi]", HoldForm], "0"], TraditionalForm], 
       FormBox[
        StyleBox[
        "\"Error Plot\"", FontWeight -> Bold, Larger, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0, 0.06614382479727478}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{-Pi, Pi}, {0.06614382479727478, 
        0.2979093821953227}}, {{-3.141592653589793, 3.141592653589793}, {
       0.06614382479727478, 0.2979093821953227}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"A=0.2, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.3, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.4, B=0.5\"", Smaller, StripOnInput -> False], 
       StyleBox["\"A=0.5, B=0.5\"", Smaller, StripOnInput -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.843335722339113*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"8dd3c4ce-3102-423d-8916-02ee24b1b8af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ERROR", "=", 
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["d2", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["d1", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["d0", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x0", "2"], "-", 
       RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x1", "2"]}], "-", 
       RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], ")"}], "2"]]]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"7ca19efc-bab9-4673-8097-bc439a111aab"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x2"}], ")"}], "*", "x2"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x1"}], ")"}], "*", "x1"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x0"}], ")"}], "*", "x0"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x0", "2"], "-", 
      RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
      SuperscriptBox["x2", "2"]}], ")"}], "2"]]]], "Input",
 CellChangeTimes->{{3.8446086641588984`*^9, 
  3.844608680406122*^9}},ExpressionUUID->"6cb83396-6fdd-40a9-9e81-\
cd7a9b153f78"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d2", "2"], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x2"}], ")"}], "*", "x2"}], "100"]}]], "Input",Expressi\
onUUID->"178a00aa-bfaa-47de-b8fb-36ba288a7f0a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d1", "2"], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x1"}], ")"}], "*", "x1"}], "100"]}]], "Input",Expressi\
onUUID->"7e223f08-78f9-4f0c-b969-0308bd993b62"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["d0", "2"], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x0"}], ")"}], "*", "x0"}], "100"]}]], "Input",Expressi\
onUUID->"160c0a4c-c2c0-4ad0-93bc-0b7379f12b67"],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x2"}], ")"}], "*", "x2"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x1"}], ")"}], "*", "x1"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x0"}], ")"}], "*", "x0"}], "100"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x0", "2"], "-", 
      RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
      SuperscriptBox["x2", "2"]}], ")"}], "2"]]]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"51609d35-1529-4912-b551-45388b3d144b"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "100"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x1"}], ")"}], " ", "x1", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "100"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x0"}], ")"}], " ", "x0", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "100"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x2"}], ")"}], " ", "x2"}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x0", "2"], "-", 
       RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x1", "2"]}], "-", 
       RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8446086839167337`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a53e8648-9aaf-4444-ab8f-9a1aee8002d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "100"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x1"}], ")"}], " ", "x1", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "100"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x0"}], ")"}], " ", "x0", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x1", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "100"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x0", "-", "x1"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x2"}], ")"}], " ", "x2"}]}], ")"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x0", "2"], "-", 
        RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"]}], "-", 
        RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
        SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"8139b603-499b-4eda-bb5e-648d47e257e6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "10"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x1", " ", "x2", " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "x2", "-", 
          RowBox[{"2", " ", "x1", " ", "x2"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["x0", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"x1", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"]}], "+", "x2", "+", 
          RowBox[{"2", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x2", "2"]}]}], ")"}]}], "+", 
       RowBox[{"x0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x2"}], ")"}], " ", "x2"}], "+", 
          SuperscriptBox["x2", "2"], "+", 
          RowBox[{
           SuperscriptBox["x1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "x2"}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x0", "2"], "-", 
        RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"]}], "-", 
        RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
        SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8446088821688924`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2c467b29-ede2-4c98-8ba4-cf642939836d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x0", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}]], "Input",
 CellChangeTimes->{{3.844608779056508*^9, 
  3.8446088404782367`*^9}},ExpressionUUID->"8797099f-52b5-46f5-8f80-\
a34ad4b08acb"],

Cell[BoxData[
 RowBox[{"x1", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Sin", "[", 
       RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}]], "Input",
 CellChangeTimes->{{3.8446088457873793`*^9, 
  3.844608852829995*^9}},ExpressionUUID->"06319c07-1dd5-4580-b33b-\
9f1ec004fae2"],

Cell[BoxData[
 RowBox[{"x2", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}]], "Input",
 CellChangeTimes->{{3.8446088487674484`*^9, 
  3.844608856318305*^9}},ExpressionUUID->"4a1aa711-b18d-4a5e-876a-\
d58800b4339a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "100"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       FractionBox["1", "100"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], " ", "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       FractionBox["1", "100"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], "2"], 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], ")"}], " ", "*", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"], "-", 
       RowBox[{"2", "*", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Sin", "[", 
             RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], "+", 
       RowBox[{"2", " ", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"]}], 
       "-", 
       RowBox[{"2", "*", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Sin", "[", 
             RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"]}], 
      ")"}], "2"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8446089373886433`*^9, 3.8446090502116766`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3fe36d8b-cba0-40bf-a91a-bfed28d259d1"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "200"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["t", "T"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["t", "T"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "200"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["t", "T"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["t", "T"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "200"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["t", "T"]}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox["t", "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["t", "T"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "t"}], "T"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "t"}], "T"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "t"}], "T"]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "t"}], "T"]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "t"}], "T"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8446090517286196`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"db698a72-7d2c-4a64-9353-c6ee7d10b69a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%5", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[6]:=",ExpressionUUID->"e98997b1-eaa4-4539-9808-c797e1c96ea9"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"20", " ", 
    SqrtBox["2"]}]], 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "11"}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8446090542240276`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"2767ce6e-944b-4a6c-b8e1-4e162212c8da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"20", " ", 
        SqrtBox["2"]}]], 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "11"}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "1", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "12", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8446090960125914`*^9, 3.844609160004531*^9}},
 NumberMarks->False,
 CellLabel->"In[10]:=",ExpressionUUID->"506f72cf-0200-4ee5-a946-86c5df7257ee"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 28.1, $CellContext`w$$ = 
    23.759999999999998`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`T$$], 1, 50}, {
      Hold[$CellContext`w$$], 12, 30}}, Typeset`size$$ = {
    198., {58., 62.268228470726584`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`T$$ = 1, $CellContext`w$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/(20 Sqrt[2])) 
        Sqrt[-11 + 
          16 E^($CellContext`t/$CellContext`T$$) + (-6 + 
            8 E^($CellContext`t/$CellContext`T$$)) 
           Cos[2 $CellContext`t $CellContext`w$$] + 
          Cos[4 $CellContext`t $CellContext`w$$] + 
          8 Sin[$CellContext`t $CellContext`w$$] - 8 
          E^($CellContext`t/$CellContext`T$$) 
          Sin[$CellContext`t $CellContext`w$$] + 
          8 Sin[3 $CellContext`t $CellContext`w$$] - 8 
          E^($CellContext`t/$CellContext`T$$) 
          Sin[3 $CellContext`t $CellContext`w$$]], {$CellContext`t, 1, 50}], 
      "Specifications" :> {{$CellContext`T$$, 1, 50}, {$CellContext`w$$, 12, 
         30}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{466., {136., 142.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8446090605380144`*^9, {3.844609113840495*^9, 3.844609161973796*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"930d558d-9fb4-4f1a-a907-c7bbbc848312"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"20", " ", 
    SqrtBox["2"], "*", 
    RowBox[{"(", 
     SuperscriptBox["t", "2"], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "11"}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8446092598432455`*^9, 3.8446092630626345`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ab8ad418-7d8f-451a-920a-5ad57c872899"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"20", " ", 
    SqrtBox["2"], " ", 
    SuperscriptBox["t", "2"]}]], 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "11"}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "w"}], "]"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", "/", "T"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.84460926345563*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"66a1c857-a79a-4d79-a5f4-61e22ea0674a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"20", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox["t", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "11"}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "w"}], "]"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "/", "T"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "1000"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "1", ",", "300"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.01", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8446092767164*^9, {3.8446093193337283`*^9, 3.8446093195302467`*^9}, {
   3.8446094699661894`*^9, 3.844609470311268*^9}, {3.8446096973139076`*^9, 
   3.844609697894355*^9}, {3.844610340247458*^9, 3.844610373028824*^9}},
 NumberMarks->False,
 CellLabel->"In[19]:=",ExpressionUUID->"49c3cba0-e763-48b2-a262-fe475c7fc213"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 70.5, $CellContext`w$$ = 0.01, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`T$$], 1, 300}, {
      Hold[$CellContext`w$$], 0.01, 30}}, Typeset`size$$ = {
    198., {50., 55.814499338578614`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`T$$ = 1, $CellContext`w$$ = 0.01}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/(20 Sqrt[2] $CellContext`t^2)) 
        Sqrt[-11 + 
          16 E^($CellContext`t/$CellContext`T$$) + (-6 + 
            8 E^($CellContext`t/$CellContext`T$$)) 
           Cos[2 $CellContext`t $CellContext`w$$] + 
          Cos[4 $CellContext`t $CellContext`w$$] + 
          8 Sin[$CellContext`t $CellContext`w$$] - 8 
          E^($CellContext`t/$CellContext`T$$) 
          Sin[$CellContext`t $CellContext`w$$] + 
          8 Sin[3 $CellContext`t $CellContext`w$$] - 8 
          E^($CellContext`t/$CellContext`T$$) 
          Sin[3 $CellContext`t $CellContext`w$$]], {$CellContext`t, 1, 1000}],
       "Specifications" :> {{$CellContext`T$$, 1, 300}, {$CellContext`w$$, 
         0.01, 30}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{466., {130., 136.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.844609265727761*^9, 3.8446092780607934`*^9}, 
   3.8446093202143745`*^9, 3.8446094710153847`*^9, 3.8446097002064743`*^9, {
   3.84461034167564*^9, 3.8446103737398796`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"d8032ce6-5e00-43e3-b188-c31f37d05413"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ERROR", "=", 
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["d2", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["d1", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["d0", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x0", "2"], "-", 
       RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x1", "2"]}], "-", 
       RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], ")"}], "2"]]]}]], "Input",
 CellChangeTimes->{3.8447330681242685`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"b3cf7061-d82b-4ef1-a4ba-ed6f03ab379e"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d2", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["d1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["d0", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x0", "2"], "-", 
      RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
      SuperscriptBox["x2", "2"]}], ")"}], "2"]]]], "Output",
 CellChangeTimes->{3.844611717059435*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"7d49c73d-6b59-4a70-b6d6-81f7c7df5ece"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"d0", "=", 
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", "x0", ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x0"}], ")"}]}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{"Tall", "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]]]}]], "Input",
 CellChangeTimes->{{3.844611727489233*^9, 3.8446117331199985`*^9}, {
  3.844611773957056*^9, 
  3.8446118442979374`*^9}},ExpressionUUID->"1e7071f6-768b-4782-90d7-\
1aad42409396"],

Cell[BoxData[
 RowBox[{"d1", "=", 
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", "x1", ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x1"}], ")"}]}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{"Tall", "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]]]}]], "Input",
 CellChangeTimes->{{3.8446118495948153`*^9, 
  3.8446118547259965`*^9}},ExpressionUUID->"36e76bdd-ba04-442d-bb89-\
cb7cd9dd1f15"],

Cell[BoxData[
 RowBox[{"d2", "=", 
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", "x2", ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x2"}], ")"}]}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{"Tall", "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]]]}]], "Input",
 CellChangeTimes->{{3.8446118511296096`*^9, 
  3.8446118588938932`*^9}},ExpressionUUID->"37fa0e6b-08b7-4e17-90de-\
317859671410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", "x2", ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x2"}], ")"}]}], 
        RowBox[{"n", "*", 
         RowBox[{"(", 
          RowBox[{"Tall", "/", 
           RowBox[{"(", 
            RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x1"}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", "x1", ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x1"}], ")"}]}], 
        RowBox[{"n", "*", 
         RowBox[{"(", 
          RowBox[{"Tall", "/", 
           RowBox[{"(", 
            RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", "x0", ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x0"}], ")"}]}], 
        RowBox[{"n", "*", 
         RowBox[{"(", 
          RowBox[{"Tall", "/", 
           RowBox[{"(", 
            RowBox[{"3", "*", "t"}], ")"}]}], ")"}]}]], "*", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x0", "2"], "-", 
       RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x1", "2"]}], "-", 
       RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8446118740063057`*^9, 3.8446118867047706`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"fc2f2d15-5fa1-452b-b9ea-b3ce589408be"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x1"}], ")"}], " ", "x1", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], 
     RowBox[{"n", " ", "Tall"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "t", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x0"}], ")"}], " ", "x0", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x1", "-", "x2"}], ")"}], "2"]}], 
     RowBox[{"n", " ", "Tall"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "t", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x0", "-", "x1"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x2"}], ")"}], " ", "x2"}], 
     RowBox[{"n", " ", "Tall"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x0", "2"], "-", 
      RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
      SuperscriptBox["x2", "2"]}], ")"}], "2"]]]], "Output",
 CellChangeTimes->{3.8446118902752366`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a470ff67-5e0c-4746-a319-f3a8cea4d105"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  SqrtBox[
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x1"}], ")"}], " ", "x1", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x2"}], ")"}], "2"]}], 
      RowBox[{"n", " ", "Tall"}]], "+", 
     FractionBox[
      RowBox[{"3", " ", "t", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x0"}], ")"}], " ", "x0", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "2"]}], 
      RowBox[{"n", " ", "Tall"}]], "+", 
     FractionBox[
      RowBox[{"3", " ", "t", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x0", "-", "x1"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x2"}], ")"}], " ", "x2"}], 
      RowBox[{"n", " ", "Tall"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x0", "2"], "-", 
       RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x1", "2"]}], "-", 
       RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
       SuperscriptBox["x2", "2"]}], ")"}], "2"]]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"5428b0c5-d880-4487-8427-27bac0fc38a8"],

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x1", " ", "x2", " ", 
          RowBox[{"(", 
           RowBox[{"x1", "+", "x2", "-", 
            RowBox[{"2", " ", "x1", " ", "x2"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["x0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"x1", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["x1", "2"]}], "+", "x2", "+", 
            RowBox[{"2", " ", "x1", " ", "x2"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["x2", "2"]}]}], ")"}]}], "+", 
         RowBox[{"x0", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "x1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "x2"}], ")"}], " ", "x2"}], "+", 
            SuperscriptBox["x2", "2"], "+", 
            RowBox[{
             SuperscriptBox["x1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x2"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", "Tall", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x0", "2"], "-", 
          RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
          SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8446118920524836`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"2800c08c-2eb9-471f-aaaf-81a4b8754c32"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x0", "=", 
  RowBox[{"(", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}]], "Input",
 CellChangeTimes->{{3.844608779056508*^9, 3.8446088404782367`*^9}, {
  3.8446120508348207`*^9, 
  3.8446120568288293`*^9}},ExpressionUUID->"98308455-0628-4b1f-bb97-\
0f80bbbc84b8"],

Cell[BoxData[
 RowBox[{"x1", "=", 
  RowBox[{"(", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}]], "Input",
 CellChangeTimes->{{3.8446088457873793`*^9, 3.844608852829995*^9}, {
  3.8446120620428996`*^9, 
  3.844612066281564*^9}},ExpressionUUID->"b6c2c8af-1e4b-4b5b-b211-\
874215de93c6"],

Cell[BoxData[
 RowBox[{"x2", "=", 
  RowBox[{"(", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cos", "[", 
        RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}]], "Input",
 CellChangeTimes->{{3.8446088487674484`*^9, 3.844608856318305*^9}, {
  3.8446120627499657`*^9, 
  3.844612068091716*^9}},ExpressionUUID->"7482d2e6-82a9-479f-858c-\
8316cc332d32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "+", 
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "-", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
             " ", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"], 
          "*", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "-", 
            RowBox[{"2", " ", "*", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], 
              "2"]}], "+", 
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "+", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
             " ", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}], "-", 
            RowBox[{"2", " ", "*", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], 
              "2"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "*", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}], 
              ")"}], " ", "*", 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"], 
            "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"],
              "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "*", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", "Tall", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"], 
          "-", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Sin", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}], "+", 
          RowBox[{"2", " ", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"]}],
           "-", 
          RowBox[{"2", " ", "*", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Sin", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "*", 
           " ", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}]}], ")"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}], "2"], ")"}], "2"]}], 
         ")"}], "2"]}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.844612076693725*^9, 3.844612218503267*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e9062b2c-aeaa-4b66-b7a7-55fed71f8c46"],

Cell[BoxData[
 RowBox[{
  SqrtBox["3"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "t"}], "T"]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox["t", "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox["t", "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["t", "T"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "4"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", 
                 RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{
                FractionBox["1", "2"], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox["t", "T"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox["t", "T"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Sin", "[", 
                 RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "t"}], "T"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox["t", "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox["t", "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"2", " ", "t"}], "T"]}]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Sin", "[", 
                RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", "Tall", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"t", " ", "w"}], "]"}]}], ")"}], "2"]}]}], ")"}], 
        "2"]}], ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.844612224346233*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"a37d366b-0247-42d9-9385-26a1bdfd2117"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Tall", "=", "500"}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", "100"}]}], "Input",
 CellChangeTimes->{{3.844612246949342*^9, 3.844612272689946*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d0e69cb9-7f2d-408f-8b46-f6efb0dff0a6"],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.8446122734728885`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d4d885c8-00ce-4320-a482-bead57bdce33"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.8446122734778757`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"e308d488-478c-4b68-8f91-4f452df6f471"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", "%24", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[25]:=",ExpressionUUID->"d5d74e93-bfff-403e-bac7-8a00cfbc7046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["3", "2"]], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", " ", "Tall"}]], 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "11"}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]],\
 "Input",
 CellChangeTimes->{3.844612288666565*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"af974aa7-b8d4-42e4-9956-0470ae52b7e8"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox[
   FractionBox["3", "2"]], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", " ", "Tall"}]], 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "11"}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "w"}], "]"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "/", "T"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8446122887364235`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"47bd7691-aae9-49c8-bf49-b88e8356ccc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "*", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["3", "2"]], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"n", " ", "Tall"}]], 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"16", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "T"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t", " ", "w"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "t", " ", "w"}], "]"}], "+", 
            RowBox[{"8", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "T"}]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"t", " ", "w"}], "]"}]}], "+", 
            RowBox[{"8", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "t", " ", "w"}], "]"}]}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"t", "/", "T"}]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "t", " ", "w"}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "150"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "20", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Tall", ",", "500", ",", "5000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.01", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844612336497943*^9, 3.844612361934124*^9}, {
  3.844612430903901*^9, 3.844612459135215*^9}, {3.8446124934080486`*^9, 
  3.844612496357441*^9}, {3.8446126999831057`*^9, 3.8446127147949934`*^9}, {
  3.8446158318742075`*^9, 3.844615865686451*^9}, {3.8446193614239407`*^9, 
  3.844619384877799*^9}},
 NumberMarks->False,
 CellLabel->"In[70]:=",ExpressionUUID->"2b1bfa73-7767-4ae0-a9b0-b35f9ad82af4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 100, $CellContext`T$$ = 
    20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 6.1000000000000005`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 100, 1000}, {
      Hold[$CellContext`T$$], 20, 50}, {
      Hold[$CellContext`Tall$$], 500, 5000}, {
      Hold[$CellContext`w$$], 0.01, 30}}, Typeset`size$$ = {
    201., {55., 60.25169230594594}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 100, $CellContext`T$$ = 
        20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 0.01}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/(2 $CellContext`t^2)) Sqrt[3/2] 
        Sqrt[(1/($CellContext`n$$ $CellContext`Tall$$)) ($CellContext`t (-11 + 
            16 E^($CellContext`t/$CellContext`T$$) + (-6 + 
              8 E^($CellContext`t/$CellContext`T$$)) 
             Cos[2 $CellContext`t $CellContext`w$$] + 
            Cos[4 $CellContext`t $CellContext`w$$] + 
            8 Sin[$CellContext`t $CellContext`w$$] - 8 
            E^($CellContext`t/$CellContext`T$$) 
            Sin[$CellContext`t $CellContext`w$$] + 
            8 Sin[3 $CellContext`t $CellContext`w$$] - 8 
            E^($CellContext`t/$CellContext`T$$) 
            Sin[3 $CellContext`t $CellContext`w$$]))], {$CellContext`t, 0, 
         150}], "Specifications" :> {{$CellContext`n$$, 100, 
         1000}, {$CellContext`T$$, 20, 50}, {$CellContext`Tall$$, 500, 
         5000}, {$CellContext`w$$, 0.01, 30}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{473., {133., 139.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.844612292618848*^9, {3.8446124440539465`*^9, 3.8446124602283525`*^9}, 
   3.844612497550483*^9, {3.844612701203678*^9, 3.844612715511079*^9}, {
   3.8446158324556537`*^9, 3.844615870230002*^9}, {3.8446193618867006`*^9, 
   3.844619385156089*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"303f85df-7b59-4e89-a42c-0e2938f1a559"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{
     RowBox[{
       SubscriptBox["\[Delta]\[Omega]", "0"]}]},
    "Abs"], "\[LongEqual]", 
   SqrtBox[
    FractionBox[
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["cos", "2"], "(", 
        RowBox[{"\[CapitalDelta]", 
         StyleBox["t", "TI"]}], ")"}], 
       SuperscriptBox[
        StyleBox["e", "TI"], 
        RowBox[{
         RowBox[{"-", "2"}], "\[Gamma]", 
         StyleBox["t", "TI"]}]]}]}], 
     RowBox[{
      StyleBox["n", "TI"], 
      StyleBox["T", "TI"], 
      StyleBox["t", "TI"], 
      SuperscriptBox[
       StyleBox["e", "TI"], 
       RowBox[{
        RowBox[{"-", "2"}], "\[Gamma]", 
        StyleBox["t", "TI"]}]], 
      RowBox[{
       SuperscriptBox["sin", "2"], "(", 
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t", "TI"]}], ")"}]}]]]}], TraditionalForm]], "Input",Express\
ionUUID->"e88a4dac-169e-48aa-846f-87337be7054a"],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Cos", "[", 
        RowBox[{"w", "*", "t"}], "]"}], ")"}], "2"], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       RowBox[{"t", "/", "T"}]}], "]"}]}]}], 
   RowBox[{"n", "*", "Tall", "*", "t", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      RowBox[{"t", "/", "T"}]}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"w", "*", "t"}], "]"}], "2"]}]]]], "Input",
 CellChangeTimes->{{3.8446141653621736`*^9, 3.844614243609053*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"bbcf17e1-c679-46c6-bce5-1049fcbf4101"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"2", " ", "t"}], "T"]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "t"}], "T"]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "w"}], "]"}], "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", 
      RowBox[{"t", " ", "w"}], "]"}], "2"]}], 
   RowBox[{"n", " ", "t", " ", "Tall"}]]]], "Output",
 CellChangeTimes->{3.844614246159848*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"9b5c8085-af02-498d-b5bb-3d49c7ddb41e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"2", " ", "t"}], "T"]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "t"}], "T"]}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"t", " ", "w"}], "]"}], "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{"t", " ", "w"}], "]"}], "2"]}], 
       RowBox[{"n", " ", "t", " ", "Tall"}]]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "20", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Tall", ",", "500", ",", "5000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.01", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8446142626312466`*^9, {3.8446143313251376`*^9, 3.844614331479683*^9}, {
   3.844614371983097*^9, 3.844614372198563*^9}, {3.8446193492834053`*^9, 
   3.844619355157734*^9}},
 NumberMarks->False,
 CellLabel->"In[65]:=",ExpressionUUID->"2abec72d-4a87-4da8-91e9-d9a1f2c3432a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 100, $CellContext`T$$ = 
    20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 0.01, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 100, 1000}, {
      Hold[$CellContext`T$$], 20, 50}, {
      Hold[$CellContext`Tall$$], 500, 5000}, {
      Hold[$CellContext`w$$], 0.01, 30}}, Typeset`size$$ = {
    201., {56., 61.64815062967003}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 100, $CellContext`T$$ = 
        20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 0.01}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sqrt[
        E^(2 $CellContext`t/$CellContext`T$$) (1 - 
          E^(-(2 $CellContext`t/$CellContext`T$$)) 
          Cos[$CellContext`t $CellContext`w$$]^2) 
         Csc[$CellContext`t $CellContext`w$$]^2/($CellContext`n$$ \
$CellContext`t $CellContext`Tall$$)], {$CellContext`t, 0, 50}], 
      "Specifications" :> {{$CellContext`n$$, 100, 1000}, {$CellContext`T$$, 
         20, 50}, {$CellContext`Tall$$, 500, 5000}, {$CellContext`w$$, 0.01, 
         30}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{473., {134., 140.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8446142489244184`*^9, 3.8446142647055545`*^9}, 
   3.8446143321598654`*^9, 3.844614372622387*^9, {3.844619350113187*^9, 
   3.8446193560313606`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"d1502f6d-77ff-4398-84db-8624282494d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", "10", " "}]], "Input",
 CellChangeTimes->{{3.8446145875332327`*^9, 3.844614621310296*^9}, {
  3.844614708317234*^9, 3.844614711600599*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"77b34689-a42e-4b3a-a681-48f23fcab9ea"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.844614714152628*^9, {3.8446152733749046`*^9, 3.844615283857224*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"3bbf42a0-4679-46bd-9a9d-43ba4b2a3047"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", "100"}]], "Input",
 CellChangeTimes->{{3.8446147044330053`*^9, 3.8446147202243495`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"67d8b62c-6412-42f3-ab63-e3822f07b4b2"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.8446147047860622`*^9, 3.8446147205973935`*^9}, 
   3.8446152803123236`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8ea20aa6-4ec5-4217-9d9f-c799818236b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tall", "=", "500"}]], "Input",
 CellChangeTimes->{3.844614724700039*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"f698e116-e82d-4806-8260-ea9cfa916df2"],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.8446147252685184`*^9, 3.844615281502143*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"ac07e5c2-ba39-45b8-99e8-c82f1172e26a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", "0.001"}]], "Input",
 CellChangeTimes->{3.844614727855484*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"f302be7b-f150-4921-9054-9d20db031554"],

Cell[BoxData["0.001`"], "Output",
 CellChangeTimes->{3.844614728943576*^9, 3.8446152829078336`*^9, 
  3.8446155309037933`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"06df50a2-58a0-478f-8bd9-373d860ece4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "t"}], "T"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "t"}], "T"]}]], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "w"}], "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", 
         RowBox[{"t", " ", "w"}], "]"}], "2"]}], 
      RowBox[{"n", " ", "t", " ", "Tall"}]]], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "14"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844614564986432*^9, 3.844614572625433*^9}, {
  3.844614625083976*^9, 3.8446146275816765`*^9}, {3.844614665110201*^9, 
  3.84461467834138*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"3a33c66c-7c01-44d9-9759-612ed60afe3c"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum", "lstol", 
   "\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"", 2, 50, 20, 32456751947958704685, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.844614628078347*^9, {3.84461466561382*^9, 3.8446146802224407`*^9}, 
   3.84461473199643*^9, 3.844615285966585*^9, 3.8446155340471964`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"cc7ef4db-6e08-4b8b-8cfd-5c45d3bf2c5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.33551624753563825`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "14.106509527647479`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.844615534058172*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ffbea63f-fd15-4fe5-afb4-293ae86f4a7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", " ", "*", "14.106509527647479`", "*", "Tall"}]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"2", " ", "*", "14.106509527647479`"}], "T"]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "  ", "*", "14.106509527647479`"}], "T"]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"14.106509527647479`", "*", " ", "w"}], "]"}], "2"]}]}], 
     ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", 
      RowBox[{"14.106509527647479`", "*", " ", "w"}], "]"}], "2"]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.844615310429432*^9, 3.844615352698851*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"091fdfdc-899d-4808-bd39-f5641bedf9ee"],

Cell[BoxData["0.33551624753563825`"], "Output",
 CellChangeTimes->{
  3.8446146281401825`*^9, {3.8446146656327696`*^9, 3.844614680256359*^9}, 
   3.844614732013404*^9, 3.8446152859775553`*^9, {3.844615341424804*^9, 
   3.844615353141633*^9}, {3.8446154634695053`*^9, 3.8446154667688427`*^9}, {
   3.844615523734624*^9, 3.844615535692952*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"9b265bd9-d347-42c8-9104-34dde2c41682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", "10", " "}]], "Input",
 CellChangeTimes->{{3.8446145875332327`*^9, 3.844614621310296*^9}, {
  3.844614708317234*^9, 3.844614711600599*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0b5235d4-94ca-42c5-9a42-5080b749d4aa"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.844614714152628*^9, 3.8446153698707895`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b99c3f6d-8698-4c04-8dfa-040861dda905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", "100"}]], "Input",
 CellChangeTimes->{{3.8446147044330053`*^9, 3.8446147202243495`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2b0ab10b-9a81-4eef-a93d-5228df501e88"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.8446147047860622`*^9, 3.8446147205973935`*^9}, 
   3.844615371187306*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"973fa5f8-1e58-41dc-96f3-aa3837d149b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tall", "=", "500"}]], "Input",
 CellChangeTimes->{3.844614724700039*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"c0ae053a-b066-4b6e-bfab-ba1623c90cac"],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.8446147252685184`*^9, 3.844615372636396*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"690b3b98-7f5d-4582-95d5-8f70e5fda008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", "30"}]], "Input",
 CellChangeTimes->{
  3.844614727855484*^9, {3.8446148038629255`*^9, 3.8446148049858823`*^9}, {
   3.844614839505581*^9, 3.8446148398986177`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d40a65a8-c492-460f-b629-ebebc0a61b85"],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{
  3.844614728943576*^9, 3.8446148068869457`*^9, 3.844614840351406*^9, 
   3.8446153739828367`*^9, {3.8446155225607624`*^9, 3.844615540061228*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"c0310039-58c1-4e6d-b04e-a050ccc6a48a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", " ", "*", "4.764757751632404`", "*", "Tall"}]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"2", "*", "4.764757751632404`"}], "T"]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "*", "4.764757751632404`"}], "T"]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"4.764757751632404`", "*", " ", "w"}], "]"}], "2"]}]}], 
     ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", 
      RowBox[{"4.764757751632404`", "*", " ", "w"}], "]"}], "2"]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{
  3.8446148129070425`*^9, {3.8446153829727707`*^9, 3.844615427371952*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"4cb75483-99ff-48d4-a1cf-005cafbfeb0d"],

Cell[BoxData["0.003299327254635702`"], "Output",
 CellChangeTimes->{3.8446148459330845`*^9, 3.8446154293857365`*^9, 
  3.844615541406674*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"baeb688e-369d-41d6-add1-cf110ef32aa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{"2", "*", "E"}], 
   RowBox[{"n", "*", "Tall", "*", "T"}]]]], "Input",
 CellChangeTimes->{{3.844615598224415*^9, 3.844615625779519*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f3e7dc87-6c75-4c92-8c18-2a7482e69061"],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[ExponentialE]"], "500"]], "Output",
 CellChangeTimes->{3.8446156271626816`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"1a1c6e23-e295-4015-802a-f0c8d3e7118b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   SqrtBox["\[ExponentialE]"], "500"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[55]:=",ExpressionUUID->"6bd311d1-8157-4799-86c9-741859022843"],

Cell[BoxData["0.0032974425414002565`"], "Output",
 CellChangeTimes->{3.844615628761384*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"70aa3b95-1472-431d-be6c-ab5c2f4eed3b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"phase", " ", "=", " ", 
  RowBox[{"ArcCos", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "*", "P"}], "-", "1"}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     FractionBox["t", "T"], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.844615102576991*^9, 3.8446151593223915`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"22c9bea6-4904-4be2-8e81-a48c4b4ca122"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", "10", " "}]], "Input",
 CellChangeTimes->{{3.8446145875332327`*^9, 3.844614621310296*^9}, {
  3.844614708317234*^9, 3.844614711600599*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"896f2254-5e11-4887-9854-1bf7ac4d8eea"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.844614714152628*^9, {3.8446152733749046`*^9, 3.844615283857224*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"d9d68a3f-0c25-4947-849a-8e6d502e8c83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", "100"}]], "Input",
 CellChangeTimes->{{3.8446147044330053`*^9, 3.8446147202243495`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"930e51d5-fd95-4c85-a6c0-c3afca9c8da9"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.8446147047860622`*^9, 3.8446147205973935`*^9}, 
   3.8446152803123236`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d0f73d68-a57f-4586-845a-2e3b063f9dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tall", "=", "500"}]], "Input",
 CellChangeTimes->{3.844614724700039*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"06c25436-f35d-4810-bdee-98de3f5b419d"],

Cell[BoxData["500"], "Output",
 CellChangeTimes->{3.8446147252685184`*^9, 3.844615281502143*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"84ba5290-4b7c-4cce-92ae-ba133ebda608"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", "0.1"}]], "Input",
 CellChangeTimes->{
  3.844614727855484*^9, {3.844615665715765*^9, 3.844615667558837*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d42f5aca-0b5e-49f6-b0ba-794f25fd0bc3"],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{3.844614728943576*^9, 3.8446152829078336`*^9, 
  3.8446155309037933`*^9, 3.844615668483365*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"28b3512a-e7e6-4b2d-a4ff-4dcf2e3b895b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"2", " ", "t"}], "T"]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "t"}], "T"]}]], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "w"}], "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", 
         RowBox[{"t", " ", "w"}], "]"}], "2"]}], 
      RowBox[{"n", " ", "t", " ", "Tall"}]]], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8446156899798164`*^9, 3.844615695425555*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cf1e2110-2b5f-4367-b2c8-1fe77986b2e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0044752524357300535`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "10.250242304054334`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.844615678873385*^9, 3.8446156963630123`*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"d76e155c-2f5b-479d-b9da-ca187d52d5de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", " ", "*", "10.250242304054334`", "*", "Tall"}]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"2", " ", "*", "10.250242304054334`"}], "T"]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "*", "10.250242304054334`"}], "T"]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"10.250242304054334`", "*", "w"}], "]"}], "2"]}]}], ")"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", 
      RowBox[{"10.250242304054334`", "*", " ", "w"}], "]"}], "2"]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8446157126414366`*^9, 3.8446157344381895`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"f4825c3e-7fb3-4dab-927c-e7cb197d491c"],

Cell[BoxData["0.004475252435730053`"], "Output",
 CellChangeTimes->{3.844615734932867*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"61467b79-cf7a-4ca1-9709-fa341366b53a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "*", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["3", "2"]], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"n", " ", "Tall"}]], "t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "11"}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "T"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"t", "/", "T"}]]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"2", " ", "t", " ", "w"}], "+", 
              FractionBox["Pi", "1"]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w", "*", "t"}], "+", 
               FractionBox["Pi", "2"]}], ")"}]}], "]"}], "+", 
           RowBox[{"8", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"t", " ", "w"}], "+", 
              FractionBox["Pi", "2"]}], "]"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "T"}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"w", "*", "t"}], "+", 
              FractionBox["Pi", "2"]}], "]"}]}], "+", 
           RowBox[{"8", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"t", " ", "w"}], "+", 
                FractionBox["Pi", "2"]}], ")"}]}], "]"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "/", "T"}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"t", " ", "w"}], "+", 
                FractionBox["Pi", "2"]}], ")"}]}], "]"}]}]}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "150"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "20", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Tall", ",", "500", ",", "5000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.0000001", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844637633606475*^9, 3.844637709742115*^9}, {
  3.8446380158164997`*^9, 3.8446380160428963`*^9}, {3.844638058972207*^9, 
  3.8446380593831005`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"edd7cbe0-4e15-4f48-a207-31a434e121fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 100, $CellContext`T$$ = 
    20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 1.*^-7, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 100, 1000}, {
      Hold[$CellContext`T$$], 20, 50}, {
      Hold[$CellContext`Tall$$], 500, 5000}, {
      Hold[$CellContext`w$$], 1.*^-7, 30}}, Typeset`size$$ = {
    201., {54., 58.0164735689184}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 100, $CellContext`T$$ = 
        20, $CellContext`Tall$$ = 500, $CellContext`w$$ = 1.*^-7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[(1/(2 $CellContext`t^2)) Sqrt[3/2] 
        Sqrt[(1/($CellContext`n$$ $CellContext`Tall$$)) $CellContext`t (-11 + 
           16 E^($CellContext`t/$CellContext`T$$) + (-6 + 
             8 E^($CellContext`t/$CellContext`T$$)) 
            Cos[2 $CellContext`t $CellContext`w$$ + Pi/1] + 
           Cos[4 ($CellContext`w$$ $CellContext`t + Pi/2)] + 
           8 Sin[$CellContext`t $CellContext`w$$ + Pi/2] - 8 
           E^($CellContext`t/$CellContext`T$$) 
           Sin[$CellContext`w$$ $CellContext`t + Pi/2] + 
           8 Sin[3 ($CellContext`t $CellContext`w$$ + Pi/2)] - 8 
           E^($CellContext`t/$CellContext`T$$) 
           Sin[3 ($CellContext`t $CellContext`w$$ + Pi/2)])], {$CellContext`t,
          0, 150}], 
      "Specifications" :> {{$CellContext`n$$, 100, 1000}, {$CellContext`T$$, 
         20, 50}, {$CellContext`Tall$$, 500, 5000}, {$CellContext`w$$, 1.*^-7,
          30}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{473., {131., 137.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8446377189259386`*^9, 3.844638016902176*^9, 
  3.8446380602980633`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"f92a0ab6-608e-4982-bc61-ee3fbdfbfc73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "10"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x1", " ", "x2", " ", 
        RowBox[{"(", 
         RowBox[{"x1", "+", "x2", "-", 
          RowBox[{"2", " ", "x1", " ", "x2"}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["x0", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"x1", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x1", "2"]}], "+", "x2", "+", 
          RowBox[{"2", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x2", "2"]}]}], ")"}]}], "+", 
       RowBox[{"x0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x2"}], ")"}], " ", "x2"}], "+", 
          SuperscriptBox["x2", "2"], "+", 
          RowBox[{
           SuperscriptBox["x1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "x2"}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x0", "2"], "-", 
        RowBox[{"2", " ", "x0", " ", "x1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"]}], "-", 
        RowBox[{"2", " ", "x1", " ", "x2"}], "+", 
        SuperscriptBox["x2", "2"]}], ")"}], "2"]}], ")"}]}]}]], "Input",Expres\
sionUUID->"69ce57d7-b2fe-4a98-be43-03a62e642f5b"],

Cell[BoxData[
 RowBox[{"x0", "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"w", "*", "t"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.844608779056508*^9, 3.8446088404782367`*^9}, {
  3.8447327373898983`*^9, 
  3.8447327390476694`*^9}},ExpressionUUID->"b08ae52b-28d3-4197-ab28-\
cda65454bc65"],

Cell[BoxData[
 RowBox[{"x1", "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"w", "*", "t"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.8446088457873793`*^9, 3.844608852829995*^9}, {
  3.844732741307284*^9, 
  3.8447327422675495`*^9}},ExpressionUUID->"a9f246d9-fa61-4215-a2c1-\
9020c3687d31"],

Cell[BoxData[
 RowBox[{"x2", "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"w", "*", "t"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.8446088487674484`*^9, 3.844608856318305*^9}, {
  3.844732744093579*^9, 
  3.8447327458393497`*^9}},ExpressionUUID->"924960c9-c3e2-45b6-9ade-\
9f0a651a3d45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "10"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"w", "*", "t"}], "]"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"w", "*", "t"}], "]"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "+", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "-", 
          RowBox[{"2", " ", "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], ")"}],
          "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "-", 
          RowBox[{"2", " ", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"w", "*", "t"}], "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
             ")"}], "2"]}], "+", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "+", 
          RowBox[{"2", " ", "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}], 
          "-", 
          RowBox[{"2", " ", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"w", "*", "t"}], "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
             ")"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"w", "*", "t"}], "]"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"w", "*", "t"}], "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}], 
            ")"}], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}], 
          "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"w", "*", "t"}], "]"}], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
            ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"w", "*", "t"}], "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
             ")"}], "2"], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "*", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"w", "*", "t"}], "]"}], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], 
               "2"]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], ")"}],
          "2"], "-", 
        RowBox[{"2", " ", "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
         " ", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"w", "*", "t"}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"w", "*", "t"}], "]"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], 
           ")"}], "2"]}], "-", 
        RowBox[{"2", "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"w", "*", "t"}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], "*", 
         " ", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"w", "*", "t"}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"w", "*", "t"}], "]"}], "*", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "T"}], "]"}]}]}], ")"}], "2"], ")"}],
          "2"]}], ")"}], "2"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8447327618668494`*^9, 3.8447328978602333`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"a26d91c0-a65b-499e-a64e-37997df8da24"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "10"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "10"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "10"}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "10"}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "10"}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "10"}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], 
         ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "10"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "10"}]], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "t"}], "/", "10"}]], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "t"}], "/", "10"}]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "t"}], "/", "10"}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], 
         ")"}]}]}], ")"}], "/", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "10"}]], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}], "+", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "10"}]], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "10"}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "10"}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "10"}]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "t"}], "/", "10"}]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "t"}], "/", "10"}]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], ")"}], 
      "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8447329032410846`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"1cc15c52-c1e6-490b-8c45-4df5c3a4d7bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%75", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[76]:=",ExpressionUUID->"d87cbcf9-e9cd-4ba3-99b7-456d8586c3d8"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "20"], " ", 
  SqrtBox[
   RowBox[{
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", "/", "5"}]], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"0.1`", " ", "t"}], "]"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"0.1`", " ", "t"}], "]"}], "4"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", "/", "5"}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"0.1`", " ", "t"}], "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["3", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"0.2`", " ", "t"}], "]"}], "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.8447329059751067`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"ca5ae583-d46d-4523-9792-5a17612ffeca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "20"], " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", "/", "5"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"0.1`", " ", "t"}], "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"0.1`", " ", "t"}], "]"}], "4"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", "/", "5"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"0.1`", " ", "t"}], "]"}], "2"]}], "-", 
       RowBox[{
        FractionBox["3", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"0.2`", " ", "t"}], "]"}], "2"]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "212.05750411731103`"}], ",", "212.05750411731103`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[77]:=",ExpressionUUID->"e7ec6de5-92e3-453c-b817-f3ceea11a200"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$86995#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-212.05750411731103`, 212.05750411731103`}, {0., 
   6.559820830197688*^6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.844732908925931*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"45585810-d7d4-43ff-a3d0-f4c510b00b00"]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"722e20e6-7313-43d5-ba23-42af732c8b63"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1356, 37, 206, "Input",ExpressionUUID->"10f3ff0a-cb99-4d27-80b2-d08299838beb"],
Cell[1939, 61, 134159, 2308, 353, "Output",ExpressionUUID->"859fc6f9-8bf2-44ee-ad36-9aa7356173ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136135, 2374, 1462, 41, 97, "Input",ExpressionUUID->"7f4d9bc9-1a02-4e1f-9121-9a0a10469325"],
Cell[137600, 2417, 1348, 39, 71, "Output",ExpressionUUID->"abc8aa84-f3a2-4bcd-9c29-ae1fdbdfc916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138985, 2461, 169, 3, 28, "Input",ExpressionUUID->"640dce13-62c6-412f-a05a-119280595cbd"],
Cell[139157, 2466, 2770, 77, 140, "Output",ExpressionUUID->"b4a66889-2c79-40a1-ade6-073375223fa4"]
}, Open  ]],
Cell[141942, 2546, 277, 6, 28, "Input",ExpressionUUID->"eea74247-dc5b-46b7-b037-edd4f543e649"],
Cell[CellGroupData[{
Cell[142244, 2556, 1280, 38, 74, "Input",ExpressionUUID->"2c68fddc-0b7d-412f-94b0-1a8bd2f34e54"],
Cell[143527, 2596, 779, 22, 59, "Output",ExpressionUUID->"1c03e4f4-89d5-498e-829b-2b4aa82bff83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144343, 2623, 806, 23, 87, "Input",ExpressionUUID->"0bfd7d7a-14fa-4b80-8159-deb1750308bf"],
Cell[145152, 2648, 776, 21, 59, "Output",ExpressionUUID->"7aecc831-18e0-48f4-860d-8ffb5d35a84f"]
}, Open  ]],
Cell[145943, 2672, 1455, 36, 141, "Input",ExpressionUUID->"9ba6b039-a09b-4de6-a31a-45bed1efb2ed"],
Cell[147401, 2710, 253, 5, 28, "Input",ExpressionUUID->"fb64ecf7-8b34-42fc-a06f-d2ae57518421"],
Cell[CellGroupData[{
Cell[147679, 2719, 1280, 38, 74, "Input",ExpressionUUID->"2ba134e4-f432-4e6a-b17b-0b8418b6764b"],
Cell[148962, 2759, 751, 22, 59, "Output",ExpressionUUID->"a71f300e-fe1c-45a1-913b-64d73e0b09e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149750, 2786, 776, 23, 87, "Input",ExpressionUUID->"aa67479e-4a41-47af-a7aa-387e5b66097b"],
Cell[150529, 2811, 748, 21, 59, "Output",ExpressionUUID->"8d69d81c-5232-41c9-85ec-b16ac934bc5c"]
}, Open  ]],
Cell[151292, 2835, 1300, 34, 141, "Input",ExpressionUUID->"59306887-e139-4391-96c9-05b06755904d"],
Cell[152595, 2871, 251, 5, 28, "Input",ExpressionUUID->"c86a2922-e1f2-4bc4-ab03-fd8585bb8856"],
Cell[CellGroupData[{
Cell[152871, 2880, 1280, 38, 74, "Input",ExpressionUUID->"2ad2259a-3707-4420-93de-0f62a200875c"],
Cell[154154, 2920, 778, 22, 59, "Output",ExpressionUUID->"247e8e50-24f1-4ef2-b0c2-683d0aa228c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154969, 2947, 805, 23, 87, "Input",ExpressionUUID->"92c734de-0ee9-45e2-857d-6de94755ed40"],
Cell[155777, 2972, 777, 21, 59, "Output",ExpressionUUID->"d5477fa2-e3ab-46db-a7cf-f5fbfe2f4750"]
}, Open  ]],
Cell[156569, 2996, 1329, 34, 141, "Input",ExpressionUUID->"770a4e8f-a406-4b86-9a37-dffac45dc586"],
Cell[157901, 3032, 302, 6, 28, "Input",ExpressionUUID->"07738866-058c-44dd-a9ca-2c51dee06541"],
Cell[CellGroupData[{
Cell[158228, 3042, 1280, 38, 74, "Input",ExpressionUUID->"6536a3fa-efce-4598-9a83-f204ac328ca0"],
Cell[159511, 3082, 772, 22, 59, "Output",ExpressionUUID->"535c03bd-550a-40db-bf26-af37b05137e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160320, 3109, 775, 23, 87, "Input",ExpressionUUID->"768cddd2-6cf1-4a30-91ce-1228a087d544"],
Cell[161098, 3134, 439, 11, 38, "Output",ExpressionUUID->"c89c7058-8f3f-4d66-91d8-eab583771aff"]
}, Open  ]],
Cell[161552, 3148, 1004, 26, 144, "Input",ExpressionUUID->"4387d0cc-eb63-4739-9ee1-4ba1394085a6"],
Cell[162559, 3176, 353, 7, 28, "Input",ExpressionUUID->"6587f60f-bf13-437d-9ea4-f7adeb7d029e"],
Cell[CellGroupData[{
Cell[162937, 3187, 1280, 38, 74, "Input",ExpressionUUID->"64ef6c72-3d7e-4628-a364-db4dba54afb1"],
Cell[164220, 3227, 798, 23, 59, "Output",ExpressionUUID->"64e97e35-3d18-4dfa-a134-27aedcb4fc27"]
}, Open  ]],
Cell[165033, 3253, 1409, 36, 141, "Input",ExpressionUUID->"14961ed4-b4b2-4dd6-925d-d18d82be5165"],
Cell[166445, 3291, 403, 7, 28, "Input",ExpressionUUID->"0c06eba9-159e-495e-bf6f-b5447c18606a"],
Cell[CellGroupData[{
Cell[166873, 3302, 1280, 38, 74, "Input",ExpressionUUID->"bb858810-a681-48eb-85b7-ff1eea7103d5"],
Cell[168156, 3342, 849, 23, 59, "Output",ExpressionUUID->"044663dc-983e-4848-97b4-264c5324e661"]
}, Open  ]],
Cell[169020, 3368, 1535, 38, 141, "Input",ExpressionUUID->"d8c82f68-a9c4-4631-9eb0-c26cd86925d9"],
Cell[170558, 3408, 452, 8, 28, "Input",ExpressionUUID->"c0cc68ec-51c9-4d26-ae68-d003b1a39cc2"],
Cell[CellGroupData[{
Cell[171035, 3420, 1280, 38, 74, "Input",ExpressionUUID->"b81aaa43-167e-459b-96a5-3dd1537969f7"],
Cell[172318, 3460, 870, 23, 59, "Output",ExpressionUUID->"120e283e-3b52-4207-b5db-ab304956c3c1"]
}, Open  ]],
Cell[173203, 3486, 1536, 38, 141, "Input",ExpressionUUID->"642cec22-a4ac-44a3-b867-b1b685c3b74a"],
Cell[174742, 3526, 501, 9, 28, "Input",ExpressionUUID->"4a1065d3-770f-4986-a72f-708debef482e"],
Cell[CellGroupData[{
Cell[175268, 3539, 1280, 38, 74, "Input",ExpressionUUID->"4368b133-8230-4353-b717-23b3c67b2e09"],
Cell[176551, 3579, 867, 24, 59, "Output",ExpressionUUID->"e7f9088d-3cdf-47cd-871c-21e1a27de0e6"]
}, Open  ]],
Cell[177433, 3606, 1556, 38, 141, "Input",ExpressionUUID->"74cda62b-48b4-4ddd-ad16-4c3da7b26819"],
Cell[178992, 3646, 549, 9, 28, "Input",ExpressionUUID->"e9d3bb0a-a948-494b-aac1-ba28c5fb86f7"],
Cell[CellGroupData[{
Cell[179566, 3659, 1280, 38, 74, "Input",ExpressionUUID->"cdce46a7-eebd-4419-b7e2-2053eec00582"],
Cell[180849, 3699, 982, 28, 61, "Output",ExpressionUUID->"fa1c0ad3-0b20-410e-96e5-6fe573cd5bd9"]
}, Open  ]],
Cell[181846, 3730, 1722, 43, 182, "Input",ExpressionUUID->"a7f2cbe4-c6e3-44a7-b810-d6074a67b69c"],
Cell[CellGroupData[{
Cell[183593, 3777, 8457, 218, 852, "Input",ExpressionUUID->"6edad230-70d7-430c-9170-70c5b36e6ecf"],
Cell[192053, 3997, 182816, 3191, 254, "Output",ExpressionUUID->"62b7633d-b1af-4dc0-a161-c76aebac1e30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374906, 7193, 812, 22, 72, "Input",ExpressionUUID->"e206e90b-2b81-4d89-9130-791c6da521fa"],
Cell[375721, 7217, 272, 4, 32, "Output",ExpressionUUID->"4f2a6ef3-3203-4246-bde4-0c113d92365e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376030, 7226, 593, 15, 28, "Input",ExpressionUUID->"766b6b71-571c-4aff-a8ab-c28a6b1232b2"],
Cell[376626, 7243, 163391, 2843, 772, "Output",ExpressionUUID->"5453bc48-74db-452b-a166-34fcdfdb4181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540054, 10091, 463, 11, 28, "Input",ExpressionUUID->"04c69efe-3b82-4375-ba10-eee338b46a93"],
Cell[540520, 10104, 174967, 3053, 533, "Output",ExpressionUUID->"41498805-a0ce-458e-a704-be35e9ab1db8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715524, 13162, 3748, 98, 450, "Input",ExpressionUUID->"ba97a9e9-4b70-4d79-8ed9-5c5d93175d53"],
Cell[719275, 13262, 86892, 1520, 254, "Output",ExpressionUUID->"8dd3c4ce-3102-423d-8916-02ee24b1b8af"]
}, Open  ]],
Cell[806182, 14785, 934, 29, 67, "Input",ExpressionUUID->"7ca19efc-bab9-4673-8097-bc439a111aab"],
Cell[807119, 14816, 1198, 39, 72, InheritFromParent,ExpressionUUID->"6cb83396-6fdd-40a9-9e81-cd7a9b153f78"],
Cell[808320, 14857, 231, 7, 46, "Input",ExpressionUUID->"178a00aa-bfaa-47de-b8fb-36ba288a7f0a"],
Cell[808554, 14866, 231, 7, 46, "Input",ExpressionUUID->"7e223f08-78f9-4f0c-b969-0308bd993b62"],
Cell[808788, 14875, 231, 7, 46, "Input",ExpressionUUID->"160c0a4c-c2c0-4ad0-93bc-0b7379f12b67"],
Cell[CellGroupData[{
Cell[809044, 14886, 1148, 37, 72, "Input",ExpressionUUID->"51609d35-1529-4912-b551-45388b3d144b"],
Cell[810195, 14925, 1261, 37, 121, "Output",ExpressionUUID->"a53e8648-9aaf-4444-ab8f-9a1aee8002d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[811493, 14967, 1306, 38, 159, "Input",ExpressionUUID->"8139b603-499b-4eda-bb5e-648d47e257e6"],
Cell[812802, 15007, 1568, 44, 115, "Output",ExpressionUUID->"2c467b29-ede2-4c98-8ba4-cf642939836d"]
}, Open  ]],
Cell[814385, 15054, 416, 13, 46, "Input",ExpressionUUID->"8797099f-52b5-46f5-8f80-a34ad4b08acb"],
Cell[814804, 15069, 416, 13, 46, "Input",ExpressionUUID->"06319c07-1dd5-4580-b33b-9f1ec004fae2"],
Cell[815223, 15084, 416, 13, 46, "Input",ExpressionUUID->"4a1aa711-b18d-4a5e-876a-d58800b4339a"],
Cell[CellGroupData[{
Cell[815664, 15101, 7104, 216, 753, "Input",ExpressionUUID->"3fe36d8b-cba0-40bf-a91a-bfed28d259d1"],
Cell[822771, 15319, 6644, 197, 347, "Output",ExpressionUUID->"db698a72-7d2c-4a64-9353-c6ee7d10b69a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[829452, 15521, 161, 3, 28, "Input",ExpressionUUID->"e98997b1-eaa4-4539-9808-c797e1c96ea9"],
Cell[829616, 15526, 1424, 42, 98, "Output",ExpressionUUID->"2767ce6e-944b-4a6c-b8e1-4e162212c8da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831077, 15573, 1938, 53, 156, "Input",ExpressionUUID->"506f72cf-0200-4ee5-a946-86c5df7257ee"],
Cell[833018, 15628, 2326, 47, 297, "Output",ExpressionUUID->"930d558d-9fb4-4f1a-a907-c7bbbc848312"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835381, 15680, 1512, 44, 101, "Input",ExpressionUUID->"ab8ad418-7d8f-451a-920a-5ad57c872899"],
Cell[836896, 15726, 1458, 43, 98, "Output",ExpressionUUID->"66a1c857-a79a-4d79-a5f4-61e22ea0674a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838391, 15774, 2163, 57, 185, "Input",ExpressionUUID->"49c3cba0-e763-48b2-a262-fe475c7fc213"],
Cell[840557, 15833, 2440, 48, 285, "Output",ExpressionUUID->"d8032ce6-5e00-43e3-b188-c31f37d05413"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843034, 15886, 979, 30, 67, "Input",ExpressionUUID->"b3cf7061-d82b-4ef1-a4ba-ed6f03ab379e"],
Cell[844016, 15918, 925, 29, 66, "Output",ExpressionUUID->"7d49c73d-6b59-4a70-b6d6-81f7c7df5ece"]
}, Open  ]],
Cell[844956, 15950, 507, 16, 59, "Input",ExpressionUUID->"1e7071f6-768b-4782-90d7-1aad42409396"],
Cell[845466, 15968, 458, 15, 59, "Input",ExpressionUUID->"36e76bdd-ba04-442d-bb89-cb7cd9dd1f15"],
Cell[845927, 15985, 458, 15, 59, "Input",ExpressionUUID->"37fa0e6b-08b7-4e17-90de-317859671410"],
Cell[CellGroupData[{
Cell[846410, 16004, 1899, 58, 133, "Input",ExpressionUUID->"fc2f2d15-5fa1-452b-b9ea-b3ce589408be"],
Cell[848312, 16064, 1272, 38, 76, "Output",ExpressionUUID->"a470ff67-5e0c-4746-a319-f3a8cea4d105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849621, 16107, 1318, 39, 77, "Input",ExpressionUUID->"5428b0c5-d880-4487-8427-27bac0fc38a8"],
Cell[850942, 16148, 1764, 50, 101, "Output",ExpressionUUID->"2800c08c-2eb9-471f-aaaf-81a4b8754c32"]
}, Open  ]],
Cell[852721, 16201, 501, 15, 46, "Input",ExpressionUUID->"98308455-0628-4b1f-bb97-0f80bbbc84b8"],
Cell[853225, 16218, 499, 15, 46, "Input",ExpressionUUID->"b6c2c8af-1e4b-4b5b-b211-874215de93c6"],
Cell[853727, 16235, 499, 15, 46, "Input",ExpressionUUID->"7482d2e6-82a9-479f-858c-8316cc332d32"],
Cell[CellGroupData[{
Cell[854251, 16254, 12057, 333, 1163, "Input",ExpressionUUID->"e9062b2c-aeaa-4b66-b7a7-55fed71f8c46"],
Cell[866311, 16589, 9693, 264, 444, "Output",ExpressionUUID->"a37d366b-0247-42d9-9385-26a1bdfd2117"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876041, 16858, 253, 4, 49, "Input",ExpressionUUID->"d0e69cb9-7f2d-408f-8b46-f6efb0dff0a6"],
Cell[876297, 16864, 153, 2, 32, "Output",ExpressionUUID->"d4d885c8-00ce-4320-a482-bead57bdce33"],
Cell[876453, 16868, 153, 2, 32, "Output",ExpressionUUID->"e308d488-478c-4b68-8f91-4f452df6f471"]
}, Open  ]],
Cell[876621, 16873, 163, 3, 28, "Input",ExpressionUUID->"d5d74e93-bfff-403e-bac7-8a00cfbc7046"],
Cell[CellGroupData[{
Cell[876809, 16880, 1595, 46, 164, InheritFromParent,ExpressionUUID->"af974aa7-b8d4-42e4-9956-0470ae52b7e8"],
Cell[878407, 16928, 1601, 46, 141, "Output",ExpressionUUID->"47bd7691-aae9-49c8-bf49-b88e8356ccc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880045, 16979, 2596, 67, 281, "Input",ExpressionUUID->"2b1bfa73-7767-4ae0-a9b0-b35f9ad82af4"],
Cell[882644, 17048, 2902, 56, 291, "Output",ExpressionUUID->"303f85df-7b59-4e89-a42c-0e2938f1a559"]
}, Open  ]],
Cell[885561, 17107, 954, 33, 63, "Input",ExpressionUUID->"e88a4dac-169e-48aa-846f-87337be7054a"],
Cell[CellGroupData[{
Cell[886540, 17144, 734, 22, 63, "Input",ExpressionUUID->"bbcf17e1-c679-46c6-bce5-1049fcbf4101"],
Cell[887277, 17168, 728, 22, 75, "Output",ExpressionUUID->"9b5c8085-af02-498d-b5bb-3d49c7ddb41e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888042, 17195, 1448, 40, 109, "Input",ExpressionUUID->"2abec72d-4a87-4da8-91e9-d9a1f2c3432a"],
Cell[889493, 17237, 2388, 47, 293, "Output",ExpressionUUID->"d1502f6d-77ff-4398-84db-8624282494d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[891918, 17289, 251, 4, 28, "Input",ExpressionUUID->"77b34689-a42e-4b3a-a681-48f23fcab9ea"],
Cell[892172, 17295, 201, 3, 32, "Output",ExpressionUUID->"3bbf42a0-4679-46bd-9a9d-43ba4b2a3047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892410, 17303, 200, 3, 28, "Input",ExpressionUUID->"67d8b62c-6412-42f3-ab63-e3822f07b4b2"],
Cell[892613, 17308, 207, 3, 32, "Output",ExpressionUUID->"8ea20aa6-4ec5-4217-9d9f-c799818236b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892857, 17316, 175, 3, 28, "Input",ExpressionUUID->"f698e116-e82d-4806-8260-ea9cfa916df2"],
Cell[893035, 17321, 175, 2, 32, "Output",ExpressionUUID->"ac07e5c2-ba39-45b8-99e8-c82f1172e26a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[893247, 17328, 174, 3, 28, "Input",ExpressionUUID->"f302be7b-f150-4921-9054-9d20db031554"],
Cell[893424, 17333, 205, 3, 32, "Output",ExpressionUUID->"06df50a2-58a0-478f-8bd9-373d860ece4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[893666, 17341, 1051, 29, 109, "Input",ExpressionUUID->"3a33c66c-7c01-44d9-9759-612ed60afe3c"],
Cell[894720, 17372, 719, 14, 79, "Message",ExpressionUUID->"cc7ef4db-6e08-4b8b-8cfd-5c45d3bf2c5a"],
Cell[895442, 17388, 286, 6, 32, "Output",ExpressionUUID->"ffbea63f-fd15-4fe5-afb4-293ae86f4a7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[895765, 17399, 921, 25, 130, "Input",ExpressionUUID->"091fdfdc-899d-4808-bd39-f5641bedf9ee"],
Cell[896689, 17426, 421, 6, 32, "Output",ExpressionUUID->"9b265bd9-d347-42c8-9104-34dde2c41682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897147, 17437, 251, 4, 28, "Input",ExpressionUUID->"0b5235d4-94ca-42c5-9a42-5080b749d4aa"],
Cell[897401, 17443, 174, 2, 32, "Output",ExpressionUUID->"b99c3f6d-8698-4c04-8dfa-040861dda905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897612, 17450, 200, 3, 28, "Input",ExpressionUUID->"2b0ab10b-9a81-4eef-a93d-5228df501e88"],
Cell[897815, 17455, 205, 3, 32, "Output",ExpressionUUID->"973fa5f8-1e58-41dc-96f3-aa3837d149b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898057, 17463, 175, 3, 28, "Input",ExpressionUUID->"c0ae053a-b066-4b6e-bfab-ba1623c90cac"],
Cell[898235, 17468, 175, 2, 32, "Output",ExpressionUUID->"690b3b98-7f5d-4582-95d5-8f70e5fda008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898447, 17475, 276, 5, 28, "Input",ExpressionUUID->"d40a65a8-c492-460f-b629-ebebc0a61b85"],
Cell[898726, 17482, 275, 4, 32, "Output",ExpressionUUID->"c0310039-58c1-4e6d-b04e-a050ccc6a48a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899038, 17491, 934, 26, 130, "Input",ExpressionUUID->"4cb75483-99ff-48d4-a1cf-005cafbfeb0d"],
Cell[899975, 17519, 220, 3, 32, "Output",ExpressionUUID->"baeb688e-369d-41d6-add1-cf110ef32aa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900232, 17527, 265, 6, 56, "Input",ExpressionUUID->"f3e7dc87-6c75-4c92-8c18-2a7482e69061"],
Cell[900500, 17535, 199, 4, 52, "Output",ExpressionUUID->"1a1c6e23-e295-4015-802a-f0c8d3e7118b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900736, 17544, 204, 5, 51, "Input",ExpressionUUID->"6bd311d1-8157-4799-86c9-741859022843"],
Cell[900943, 17551, 170, 2, 32, "Output",ExpressionUUID->"70aa3b95-1472-431d-be6c-ab5c2f4eed3b"]
}, Open  ]],
Cell[901128, 17556, 401, 10, 46, "Input",ExpressionUUID->"22c9bea6-4904-4be2-8e81-a48c4b4ca122"],
Cell[CellGroupData[{
Cell[901554, 17570, 251, 4, 28, "Input",ExpressionUUID->"896f2254-5e11-4887-9854-1bf7ac4d8eea"],
Cell[901808, 17576, 201, 3, 32, "Output",ExpressionUUID->"d9d68a3f-0c25-4947-849a-8e6d502e8c83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[902046, 17584, 200, 3, 28, "Input",ExpressionUUID->"930e51d5-fd95-4c85-a6c0-c3afca9c8da9"],
Cell[902249, 17589, 207, 3, 32, "Output",ExpressionUUID->"d0f73d68-a57f-4586-845a-2e3b063f9dfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[902493, 17597, 175, 3, 28, "Input",ExpressionUUID->"06c25436-f35d-4810-bdee-98de3f5b419d"],
Cell[902671, 17602, 175, 2, 32, "Output",ExpressionUUID->"84ba5290-4b7c-4cce-92ae-ba133ebda608"]
}, Open  ]],
Cell[CellGroupData[{
Cell[902883, 17609, 221, 4, 28, "Input",ExpressionUUID->"d42f5aca-0b5e-49f6-b0ba-794f25fd0bc3"],
Cell[903107, 17615, 225, 3, 32, "Output",ExpressionUUID->"28b3512a-e7e6-4b2d-a4ff-4dcf2e3b895b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903369, 17623, 953, 27, 109, "Input",ExpressionUUID->"cf1e2110-2b5f-4367-b2c8-1fe77986b2e3"],
Cell[904325, 17652, 314, 6, 32, "Output",ExpressionUUID->"d76e155c-2f5b-479d-b9da-ca187d52d5de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904676, 17663, 918, 25, 130, "Input",ExpressionUUID->"f4825c3e-7fb3-4dab-927c-e7cb197d491c"],
Cell[905597, 17690, 169, 2, 32, "Output",ExpressionUUID->"61467b79-cf7a-4ca1-9709-fa341366b53a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[905803, 17697, 2984, 81, 300, "Input",ExpressionUUID->"edd7cbe0-4e15-4f48-a207-31a434e121fd"],
Cell[908790, 17780, 2752, 53, 287, "Output",ExpressionUUID->"f92a0ab6-608e-4982-bc61-ee3fbdfbfc73"]
}, Open  ]],
Cell[911557, 17836, 1502, 43, 113, "Input",ExpressionUUID->"69ce57d7-b2fe-4a98-be43-03a62e642f5b"],
Cell[913062, 17881, 475, 14, 46, "Input",ExpressionUUID->"b08ae52b-28d3-4197-ab28-cda65454bc65"],
Cell[913540, 17897, 473, 14, 46, "Input",ExpressionUUID->"a9f246d9-fa61-4215-a2c1-9020c3687d31"],
Cell[914016, 17913, 473, 14, 46, "Input",ExpressionUUID->"924960c9-c3e2-45b6-9ade-9f0a651a3d45"],
Cell[CellGroupData[{
Cell[914514, 17931, 10735, 312, 1026, "Input",ExpressionUUID->"a26d91c0-a65b-499e-a64e-37997df8da24"],
Cell[925252, 18245, 10309, 289, 533, "Output",ExpressionUUID->"1cc15c52-c1e6-490b-8c45-4df5c3a4d7bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[935598, 18539, 163, 3, 28, "Input",ExpressionUUID->"d87cbcf9-e9cd-4ba3-99b7-456d8586c3d8"],
Cell[935764, 18544, 899, 27, 90, "Output",ExpressionUUID->"ca5ae583-d46d-4523-9792-5a17612ffeca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936700, 18576, 1159, 34, 162, "Input",ExpressionUUID->"e7ec6de5-92e3-453c-b817-f3ceea11a200"],
Cell[937862, 18612, 12141, 218, 266, "Output",ExpressionUUID->"45585810-d7d4-43ff-a3d0-f4c510b00b00"]
}, Open  ]]
}
]
*)

